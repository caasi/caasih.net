(window.webpackJsonp=window.webpackJsonp||[]).push([[0],Array(31).concat([function(e,n,t){var a=t(920);"string"==typeof a&&(a=[[e.i,a,""]]);var r={hmr:!0,transform:void 0,insertInto:void 0};t(23)(a,r);a.locals&&(e.exports=a.locals)},,,,,,,,,,,,,,,,,,,,,,,,function(e){e.exports=JSON.parse('[{"@context":"http://schema.org","@type":"BlogPosting","headline":"the Haskell School of Music","author":0,"datePublished":"2018-09-20T05:53","dateCreated":"2018-09-20T05:53","dateModified":"2018-09-20T05:53","url":"2018-09-20-school-of-music","license":{"version":"4.0","type":"by"}},{"@context":"http://schema.org","@type":"BlogPosting","headline":"On Matthew Fuller’s “Data Structures as Spatial Structures”","author":0,"datePublished":"2018-01-12T15:50:00.222Z","dateCreated":"2018-01-12T15:50:00.222Z","dateModified":"2018-01-12T15:50:00.222Z","url":"2018-01-12-on-matthew-fuller","license":{"version":"4.0","type":"by"}},{"@context":"http://schema.org","@type":"BlogPosting","headline":"Desktop #0","author":0,"datePublished":"2017-12-29T15:44","dateCreated":"2017-12-29T15:44","dateModified":"2017-12-29T15:44","url":"2017-12-29-desktop-0","license":{"version":"4.0","type":"by"}},{"@context":"http://schema.org","@type":"BlogPosting","headline":"《不起眼女主角培育法》","private":true,"author":0,"datePublished":"2017-12-04T20:49","dateCreated":"2017-12-04T20:49","dateModified":"2017-12-04T20:49","url":"2017-12-04-saekano","license":{"version":"4.0","type":"by"}},{"@context":"http://schema.org","@type":"BlogPosting","headline":"the Haskell School of Expression","author":0,"datePublished":"2017-11-24T17:47","dateCreated":"2017-11-24T17:47","dateModified":"2018-01-05T21:55","url":"2017-11-24-school-of-expression","license":{"version":"4.0","type":"by"}},{"@context":"http://schema.org","@type":"BlogPosting","headline":"Safe Space","author":0,"datePublished":"2017-06-14T03:45:11.200Z","dateCreated":"2017-06-14T03:45:11.200Z","dateModified":"2017-06-14T03:45:11.200Z","url":"2017-06-14-safe-space","license":{"version":"4.0","type":"by"}},{"@context":"http://schema.org","@type":"BlogPosting","headline":"Cool Down","private":true,"author":0,"datePublished":"2017-05-01T16:09","dateCreated":"2017-05-01T16:09","dateModified":"2017-05-01T16:09","url":"2017-05-01-cool-down","license":{"version":"4.0","type":"by"}},{"@context":"http://schema.org","@type":"BlogPosting","headline":"程式語言學習心得 8","private":true,"author":0,"datePublished":"2016-12-18T20:12","dateCreated":"2016-12-18T20:12","dateModified":"2016-12-18T20:12","url":"2016-12-18-ifl-8"},{"@context":"http://schema.org","@type":"BlogPosting","headline":"Into the Core","author":0,"datePublished":"2016-12-06T03:23","dateCreated":"2016-12-06T03:23","dateModified":"2016-12-06T03:23","url":"2016-12-06-into-the-core","license":{"version":"4.0","type":"by"}},{"@context":"http://schema.org","@type":"BlogPosting","headline":"程式語言學習心得 7","author":0,"datePublished":"2016-12-18T20:10","dateCreated":"2016-12-18T20:10","dateModified":"2016-12-18T20:10","url":"2016-12-18-ifl-7"},{"@context":"http://schema.org","@type":"BlogPosting","headline":"程式語言學習心得 6","author":0,"datePublished":"2016-12-02T02:27","dateCreated":"2016-12-02T02:27","dateModified":"2016-12-02T02:27","url":"2016-12-02-ifl-6"},{"@context":"http://schema.org","@type":"BlogPosting","headline":"程式語言學習心得 5","author":0,"datePublished":"2016-12-01T04:49","dateCreated":"2016-12-01T04:49","dateModified":"2016-12-01T04:49","url":"2016-12-01-ifl-5"},{"@context":"http://schema.org","@type":"BlogPosting","headline":"Being Lazy with Class","author":0,"datePublished":"2016-11-27T01:27","dateCreated":"2016-11-27T01:27","dateModified":"2016-11-27T01:27","url":"2016-11-27-being-lazy-with-class"},{"@context":"http://schema.org","@type":"BlogPosting","headline":"程式語言學習心得 4","author":0,"datePublished":"2016-11-26T22:25","dateCreated":"2016-11-26T22:25","dateModified":"2016-11-26T22:25","url":"2016-11-26-ifl-4"},{"@context":"http://schema.org","@type":"BlogPosting","headline":"程式語言學習心得 3","author":0,"datePublished":"2016-11-24T18:49","dateCreated":"2016-11-24T18:49","dateModified":"2016-11-24T18:49","url":"2016-11-24-ifl-3"},{"@context":"http://schema.org","@type":"BlogPosting","headline":"程式語言學習心得 1&2","author":0,"datePublished":"2016-11-23T03:22","dateCreated":"2016-11-23T03:22","dateModified":"2016-11-23T03:22","url":"2016-11-23-ifl-1-2"},{"@context":"http://schema.org","@type":"BlogPosting","headline":"自我挑戰之前","author":0,"datePublished":"2016-11-18T22:59","dateCreated":"2016-11-18T22:59","dateModified":"2016-11-18T22:59","url":"2016-11-18-ifl-0"},{"@context":"http://schema.org","@type":"BlogPosting","headline":"怪獸","private":true,"author":0,"datePublished":"2016-10-18T18:55","dateCreated":"2016-10-18T18:55","dateModified":"2016-10-18T18:55","url":"2016-10-18-on-monster"},{"@context":"http://schema.org","@type":"BlogPosting","headline":"Re: Build Your Own Haskell Compiler #1.3","author":0,"datePublished":"2016-11-10T01:10","dateCreated":"2016-11-10T01:10","dateModified":"2016-11-10T01:10","url":"2016-11-10-re-byohc-1-3"},{"@context":"http://schema.org","@type":"BlogPosting","headline":"Re: Build Your Own Haskell Compiler #1.2","author":0,"datePublished":"2016-07-29T01:47","dateCreated":"2016-07-29T01:47","dateModified":"2016-07-29T01:47","url":"2016-07-29-re-byohc-1-2"},{"@context":"http://schema.org","@type":"BlogPosting","headline":"Re: Build Your Own Haskell Compiler #1.1","author":0,"datePublished":"2016-07-20T02:13","dateCreated":"2016-07-20T02:13","dateModified":"2016-07-20T02:13","url":"2016-07-20-re-byohc-1-1"},{"@context":"http://schema.org","@type":"BlogPosting","headline":"Re: Build Your Own Haskell Compiler #1.0","author":0,"datePublished":"2016-07-19T08:25","dateCreated":"2016-07-19T08:25","dateModified":"2016-07-19T08:25","url":"2016-07-19-re-byohc-1-0"},{"@context":"http://schema.org","@type":"BlogPosting","headline":"Re: Build Your Own Haskell Compiler #0.5","author":0,"datePublished":"2016-05-07T12:10","dateCreated":"2016-05-07T12:10","dateModified":"2016-05-07T12:10","url":"2016-05-07-re-byohc-0-5"},{"@context":"http://schema.org","@type":"BlogPosting","headline":"Re: Build Your Own Haskell Compiler #0.4","author":0,"datePublished":"2016-05-04T13:55","dateCreated":"2016-05-04T13:55","dateModified":"2016-05-04T13:55","url":"2016-05-04-re-byohc-0-4"},{"@context":"http://schema.org","@type":"BlogPosting","headline":"Re: Build Your Own Haskell Compiler #0 Appendix","author":0,"datePublished":"2016-05-01T14:34","dateCreated":"2016-05-01T14:34","dateModified":"2016-05-01T14:34","url":"2016-05-01-re-byohc-0-appendix"},{"@context":"http://schema.org","@type":"BlogPosting","headline":"Re: Build Your Own Haskell Compiler #0.3","author":0,"datePublished":"2016-05-03T12:35","dateCreated":"2016-05-03T12:35","dateModified":"2016-05-03T12:35","url":"2016-05-03-re-byohc-0-3"},{"@context":"http://schema.org","@type":"BlogPosting","headline":"Re: Build Your Own Haskell Compiler #0.2","author":0,"datePublished":"2016-05-02T05:50","dateCreated":"2016-05-02T05:50","dateModified":"2016-05-02T05:50","url":"2016-05-02-re-byohc-0-2"},{"@context":"http://schema.org","@type":"BlogPosting","headline":"Re: Build Your Own Haskell Compiler #0.1","author":0,"datePublished":"2016-05-01T14:26","dateCreated":"2016-05-01T14:26","dateModified":"2016-05-01T14:26","url":"2016-05-01-re-byohc-0-1"},{"@context":"http://schema.org","@type":"BlogPosting","headline":"Re: Build Your Own Haskell Compiler #0.0","author":0,"datePublished":"2016-05-01T14:22","dateCreated":"2016-05-01T14:22","dateModified":"2016-05-01T14:22","url":"2016-05-01-re-byohc-0-0"},{"@context":"http://schema.org","@type":"BlogPosting","headline":"vim 8","private":true,"author":0,"datePublished":"2016-04-27T19:30","dateCreated":"2016-04-27T19:30","dateModified":"2016-04-27T19:30","url":"2016-04-27-vim-8"},{"@context":"http://schema.org","@type":"BlogPosting","headline":"狀態 #1","private":true,"author":0,"datePublished":"2016-04-22T20:53","dateCreated":"2016-04-22T20:53","dateModified":"2016-04-22T20:53","url":"2016-04-22-status-1"},{"@context":"http://schema.org","@type":"BlogPosting","headline":"unlearn","private":true,"author":0,"datePublished":"2016-04-20T09:31","dateCreated":"2016-04-20T09:31","dateModified":"2016-04-20T09:31","url":"2016-04-20-unlearn"},{"@context":"http://schema.org","@type":"BlogPosting","headline":"AltspaceVR","private":true,"author":0,"datePublished":"2016-04-17T13:35","dateCreated":"2016-04-17T13:35","dateModified":"2016-04-17T13:35","url":"2016-04-17-altspace-vr"},{"@context":"http://schema.org","@type":"BlogPosting","headline":"狀態 #0","private":true,"author":0,"datePublished":"2016-03-31T11:39","dateCreated":"2016-03-31T11:39","dateModified":"2016-03-31T11:39","url":"2016-03-31-status-0"},{"@context":"http://schema.org","@type":"BlogPosting","headline":"可惜我不記得他記得的","private":true,"author":0,"datePublished":"2016-03-17T23:25","dateCreated":"2016-03-17T23:25","dateModified":"2016-03-17T23:25","url":"2016-03-17-mother"},{"@context":"http://schema.org","@type":"BlogPosting","headline":"Frege #0","author":0,"datePublished":"2016-03-16T15:47","dateCreated":"2016-03-16T15:47","dateModified":"2016-03-16T15:47","url":"2016-03-16-frege-0"},{"@context":"http://schema.org","@type":"BlogPosting","headline":"Build Your Own Haskell Compiler #3","author":0,"datePublished":"2016-02-28T04:06","dateCreated":"2016-02-28T04:06","dateModified":"2016-02-28T04:06","url":"2016-02-28-byohc-3"},{"@context":"http://schema.org","@type":"BlogPosting","headline":"EPUB 3.1","private":true,"author":0,"datePublished":"2016-02-04T13:52","dateCreated":"2016-02-04T13:52","dateModified":"2016-02-04T13:52","url":"2016-02-04-epub-31"},{"@context":"http://schema.org","@type":"BlogPosting","headline":"Build Your Own Haskell Compiler #2","author":0,"datePublished":"2015-12-23T21:59","dateCreated":"2015-12-23T21:59","dateModified":"2015-12-23T21:59","url":"2015-12-23-byohc-2"},{"@context":"http://schema.org","@type":"BlogPosting","headline":"羨慕","private":true,"author":0,"datePublished":"2015-12-04T11:41","dateCreated":"2015-12-04T11:41","dateModified":"2015-12-04T11:41","url":"2015-12-04-envy"},{"@context":"http://schema.org","@type":"BlogPosting","headline":"Build Your Own Haskell Compiler #1","author":0,"datePublished":"2015-11-29T20:54","dateCreated":"2015-11-29T20:54","dateModified":"2015-11-29T20:54","url":"2015-11-29-byohc-1"},{"@context":"http://schema.org","@type":"BlogPosting","headline":"HN 與 \\"The Implementation of Functional Programming Languages\\"","author":0,"datePublished":"2015-11-23T07:07","dateCreated":"2015-11-23T07:07","dateModified":"2015-11-23T07:07","url":"2015-11-23-hn-and-spj"},{"@context":"http://schema.org","@type":"BlogPosting","headline":"Build Your Own λ-calculus Interpreter","author":0,"datePublished":"2015-10-24T21:20","dateCreated":"2015-10-24T21:20","dateModified":"2015-10-24T21:20","url":"2015-10-24-build-your-own-lambda"},{"@context":"http://schema.org","@type":"BlogPosting","headline":"數學","private":true,"author":0,"datePublished":"2015-08-30T22:34","dateCreated":"2015-08-30T22:34","dateModified":"2015-08-30T22:34","url":"2015-08-30-on-math"},{"@context":"http://schema.org","@type":"BlogPosting","headline":"超文本","author":0,"datePublished":"2015-08-25T19:35","dateCreated":"2015-08-25T19:35","dateModified":"2015-08-25T19:35","url":"2015-08-25-hypertext-and-ted-nelson"},{"@context":"http://schema.org","@type":"BlogPosting","headline":"indie software developer","private":true,"author":0,"datePublished":"2015-08-19T21:13","dateCreated":"2015-08-19T21:13","dateModified":"2015-08-19T21:13","url":"2015-08-19-indie-software-developer"},{"@context":"http://schema.org","@type":"BlogPosting","headline":"我的觀察啦","private":true,"author":0,"datePublished":"2015-08-14T05:36","dateCreated":"2015-08-14T05:36","dateModified":"2015-08-14T05:36","url":"2015-08-14-my-observation"},{"@context":"http://schema.org","@type":"BlogPosting","headline":"Alt 裡的 Promise","author":0,"datePublished":"2015-06-23T08:56","dateCreated":"2015-06-23T08:56","dateModified":"2015-06-23T08:56","url":"2015-06-23-one-of-my-alt-promises"},{"@context":"http://schema.org","@type":"BlogPosting","headline":"黑客松","private":true,"author":0,"datePublished":"2015-05-11T00:24","dateCreated":"2015-05-11T00:24","dateModified":"2015-05-11T00:24","url":"2015-05-11-on-hackathon"},{"@context":"http://schema.org","@type":"BlogPosting","headline":"the Burroughs","private":true,"author":0,"datePublished":"2015-05-06T22:55","dateCreated":"2015-05-06T22:55","dateModified":"2015-05-06T22:55","url":"2015-05-06-burroughs"},{"@context":"http://schema.org","@type":"BlogPosting","headline":"近況與 React","author":0,"datePublished":"2015-04-25T00:29","dateCreated":"2015-04-25T00:29","dateModified":"2015-04-25T00:29","url":"2015-04-25-status-report-and-react"},{"@context":"http://schema.org","@type":"BlogPosting","headline":"Re: 工程師的缺德行為：叫朋友去學C/C++","author":0,"datePublished":"2015-04-02T22:39","dateCreated":"2015-04-02T22:39","dateModified":"2015-04-02T22:39","url":"2015-04-02-re-bad-suggestions-about-learning-c"},{"@context":"http://schema.org","@type":"BlogPosting","headline":"loner","private":true,"author":0,"datePublished":"2015-03-17T00:30","dateCreated":"2015-03-17T00:30","dateModified":"2015-03-17T00:30","url":"2015-03-17-loner"},{"@context":"http://schema.org","@type":"BlogPosting","headline":"CSP","private":true,"author":0,"datePublished":"2015-02-28T07:02","dateCreated":"2015-02-28T07:02","dateModified":"2015-02-28T07:02","url":"2015-02-28-csp"},{"@context":"http://schema.org","@type":"BlogPosting","headline":"用 ES6 寫 React Component","author":0,"datePublished":"2015-02-24T14:41","dateCreated":"2015-02-24T14:41","dateModified":"2015-02-24T14:41","url":"2015-02-24-react-component-in-es6"},{"@context":"http://schema.org","@type":"BlogPosting","headline":"MINORI","private":true,"author":0,"datePublished":"2015-02-21T00:52","dateCreated":"2015-02-21T00:52","dateModified":"2015-02-21T00:52","url":"2015-02-21-minori"},{"@context":"http://schema.org","@type":"BlogPosting","headline":"再讀一點 Promise","private":true,"author":0,"datePublished":"2015-02-10T21:59","dateCreated":"2015-02-10T21:59","dateModified":"2015-02-10T21:59","url":"2015-02-10-old-promise-system"},{"@context":"http://schema.org","@type":"BlogPosting","headline":"liftPromiseN","private":true,"author":0,"datePublished":"2015-01-18T04:20","dateCreated":"2015-01-18T04:20","dateModified":"2015-01-18T04:20","url":"2015-01-18-lift-promise-n"},{"@context":"http://schema.org","@type":"BlogPosting","headline":"2015年1月14日 上午2:25","author":0,"datePublished":"2015-01-14T02:25","dateCreated":"2015-01-14T02:25","dateModified":"2015-01-14T02:25","url":"2015-01-14-0225"},{"@context":"http://schema.org","@type":"BlogPosting","headline":"狀態好像泡泡","author":0,"datePublished":"2014-12-03T22:00","dateCreated":"2014-12-03T22:00","dateModified":"2014-12-03T22:00","url":"2014-12-03-states-are-like-bubbles"},{"@context":"http://schema.org","@type":"BlogPosting","headline":"近況、溝通還有電子書","author":0,"datePublished":"2014-10-30T02:20","dateCreated":"2014-10-30T02:20","dateModified":"2014-10-30T02:20","url":"2014-10-30-societies-and-epub"},{"@context":"http://schema.org","@type":"BlogPosting","headline":"Spell My Name with an S","author":0,"datePublished":"2014-09-09T18:30","dateCreated":"2014-09-09T18:30","dateModified":"2014-09-09T18:30","url":"2014-09-09-caasi"},{"@context":"http://schema.org","@type":"BlogPosting","headline":"排列之城","author":0,"datePublished":"2014-07-05T01:52","dateCreated":"2014-07-05T01:52","dateModified":"2014-07-05T01:52","url":"2014-07-05-permutation-city"},{"@context":"http://schema.org","@type":"BlogPosting","headline":"用 nan 寫 node native extension","author":0,"datePublished":"2014-06-23T03:50","dateCreated":"2014-06-23T03:50","dateModified":"2017-11-22T05:00","url":"2014-06-23-write-a-native-extension"},{"@context":"http://schema.org","@type":"BlogPosting","headline":"萌典考","private":true,"author":0,"datePublished":"2014-04-30T16:25","dateCreated":"2014-04-30T16:25","dateModified":"2014-04-30T16:25","url":"2014-04-30-moedict-history"},{"@context":"http://schema.org","@type":"BlogPosting","headline":"Jade, Stylus, LiveScript","private":true,"author":0,"datePublished":"2014-04-21T04:35","dateCreated":"2014-04-21T04:35","dateModified":"2014-04-21T04:35","url":"2014-04-21-jade-stylus-livescript"},{"@context":"http://schema.org","@type":"BlogPosting","headline":"RFC 6902","author":0,"datePublished":"2014-04-06T04:52","dateCreated":"2014-04-06T04:52","dateModified":"2014-04-06T04:52","url":"2014-04-06-rfc-6902"},{"@context":"http://schema.org","@type":"BlogPosting","headline":"wondering","author":0,"datePublished":"2013-12-19T01:25","dateCreated":"2013-12-19T01:25","dateModified":"2013-12-19T01:25","url":"2013-12-19-wondering"},{"@context":"http://schema.org","@type":"BlogPosting","headline":"the Little Necromancer","private":true,"author":0,"datePublished":"2013-11-29T03:54","dateCreated":"2013-11-29T03:54","dateModified":"2013-11-29T03:54","url":"2013-11-29-little-necromancer"},{"@context":"http://schema.org","@type":"BlogPosting","headline":"lenToRegex v.s. node-segment","author":0,"datePublished":"2013-11-26","dateCreated":"2013-11-26","dateModified":"2013-11-26","url":"2013-11-26-lentoregex-vs-node-segment"},{"@context":"http://schema.org","@type":"BlogPosting","headline":"メインページ - GlyphWiki","private":true,"author":0,"datePublished":"2013-08-29","dateCreated":"2013-08-29","dateModified":"2013-08-29","url":"2013-08-29-glyph-wiki"},{"@context":"http://schema.org","@type":"BlogPosting","headline":"TWFuture深音網路廣播","private":true,"author":0,"datePublished":"2013-08-26","dateCreated":"2013-08-26","dateModified":"2013-08-26","url":"2013-08-26-twfuture"},{"@context":"http://schema.org","@type":"BlogPosting","headline":"[Git]ungitでGitリポジトリ状態をグラフィカル表示[Node]","private":true,"author":0,"datePublished":"2013-08-23","dateCreated":"2013-08-23","dateModified":"2013-08-23","url":"2013-08-23-ungit"},{"@context":"http://schema.org","@type":"BlogPosting","headline":"acoustic_crypt","private":true,"author":0,"datePublished":"2013-08-18","dateCreated":"2013-08-18","dateModified":"2013-08-18","url":"2013-08-18-acoustic-crypt"},{"@context":"http://schema.org","@type":"BlogPosting","headline":"jitsi.org | Jitsi","private":true,"author":0,"datePublished":"2013-08-17","dateCreated":"2013-08-17","dateModified":"2013-08-17","url":"2013-08-17-jitsi"},{"@context":"http://schema.org","@type":"BlogPosting","headline":"Holla - P2P video/voice/data","private":true,"author":0,"datePublished":"2013-08-17","dateCreated":"2013-08-17","dateModified":"2013-08-17","url":"2013-08-17-holla"},{"@context":"http://schema.org","@type":"BlogPosting","headline":"protobuf - Protocol Buffers - Google\'s data interchange format - Google Project Hosting","private":true,"author":0,"datePublished":"2013-08-15","dateCreated":"2013-08-15","dateModified":"2013-08-15","url":"2013-08-15-protobuf"},{"@context":"http://schema.org","@type":"BlogPosting","headline":"網絡行動科技 | 從數位公益行動出發的社會企業","private":true,"author":0,"datePublished":"2013-08-13","dateCreated":"2013-08-13","dateModified":"2013-08-13","url":"2013-08-13-netivism"},{"@context":"http://schema.org","@type":"BlogPosting","headline":"JavaScript’s internal character encoding: UCS-2 or UTF-16?","private":true,"author":0,"datePublished":"2013-08-11","dateCreated":"2013-08-11","dateModified":"2013-08-11","url":"2013-08-11-js-ucs-2"},{"@context":"http://schema.org","@type":"BlogPosting","headline":"我是如何參與零時政府","author":0,"datePublished":"2013-08-08","dateCreated":"2013-08-08","dateModified":"2017-11-13","url":"2013-08-08-g0v"},{"@context":"http://schema.org","@type":"BlogPosting","headline":"gamedevinspirations: Ever played Mafia (it doesn’t requi...)","private":true,"author":0,"datePublished":"2013-07-07","dateCreated":"2013-07-07","dateModified":"2013-07-07","url":"2013-07-07-mafia"},{"@context":"http://schema.org","@type":"BlogPosting","headline":"RobotLovesKitty: Legend of Dungeon - Dynamic Lighting on Sprites","private":true,"author":0,"datePublished":"2013-07-07","dateCreated":"2013-07-07","dateModified":"2013-07-07","url":"2013-07-07-dynamic-lighting"},{"@context":"http://schema.org","@type":"BlogPosting","headline":"專訪：華裔數學家張益唐 張益唐破解數學世紀難題","private":true,"author":0,"datePublished":"2013-05-26","dateCreated":"2013-05-26","dateModified":"2017-11-13","url":"2013-05-26-yitang-zhang"},{"@context":"http://schema.org","@type":"BlogPosting","headline":"YouCompleteMe","private":true,"author":0,"datePublished":"2013-05-26","dateCreated":"2013-05-26","dateModified":"2013-05-26","url":"2013-05-26-youcompleteme"},{"@context":"http://schema.org","@type":"BlogPosting","headline":"HTML5 for ActionScript 3.0 developers – Session video | TypedArray.org","private":true,"author":0,"datePublished":"2013-05-08","dateCreated":"2013-05-08","dateModified":"2013-05-08","url":"2013-05-08-html5-as3"},{"@context":"http://schema.org","@type":"BlogPosting","headline":"msxml - How to make Microsoft XmlHttpRequest honor cache control directive - Stack Overflow","private":true,"author":0,"datePublished":"2013-05-08","dateCreated":"2013-05-08","dateModified":"2013-05-08","url":"2013-05-08-xhr"},{"@context":"http://schema.org","@type":"BlogPosting","headline":"[討論] 易用與安全 - Soft_Job板 - Disp BBS","private":true,"author":0,"datePublished":"2013-05-06","dateCreated":"2013-05-06","dateModified":"2013-05-06","url":"2013-05-06-disp-bbs"},{"@context":"http://schema.org","@type":"BlogPosting","headline":"Entropy , Compression, and Information Content","private":true,"author":0,"datePublished":"2013-05-05","dateCreated":"2013-05-05","dateModified":"2013-05-05","url":"2013-05-05-entropy-compression-content"},{"@context":"http://schema.org","@type":"BlogPosting","headline":"Pioneering Images","private":true,"author":0,"datePublished":"2013-05-05","dateCreated":"2013-05-05","dateModified":"2013-05-05","url":"2013-05-05-pioneering-images"},{"@context":"http://schema.org","@type":"BlogPosting","headline":"The Western Computer and the Chinese Character: Recent Debates on Chinese Writing Reform","private":true,"author":0,"datePublished":"2013-05-05","dateCreated":"2013-05-05","dateModified":"2013-05-05","url":"2013-05-05-chinese-writing-reform"},{"@context":"http://schema.org","@type":"BlogPosting","headline":"Intersections of a Set of Segments","private":true,"author":0,"datePublished":"2013-05-04","dateCreated":"2013-05-04","dateModified":"2013-05-04","url":"2013-05-04-intersections"},{"@context":"http://schema.org","@type":"BlogPosting","headline":"現代行動藝術","author":0,"datePublished":"2013-04-20","dateCreated":"2013-04-20","dateModified":"2013-04-20","url":"2013-04-20-llvm-ir"},{"@context":"http://schema.org","@type":"BlogPosting","headline":"Learn You a Haskell for Great Good!","private":true,"author":0,"datePublished":"2013-04-20","dateCreated":"2013-04-20","dateModified":"2013-04-20","url":"2013-04-20-lyah"},{"@context":"http://schema.org","@type":"BlogPosting","headline":"[Steam] Implement GLSL 1.30 (for older chipsets than SandyBridge)","private":true,"author":0,"datePublished":"2013-02-25","dateCreated":"2013-02-25","dateModified":"2013-02-25","url":"2013-02-25-intel-glsl"},{"@context":"http://schema.org","@type":"BlogPosting","headline":"A Parametric Texture Model Based on Joint Statistics of Complex Wavelet Coefficients","private":true,"author":0,"datePublished":"2013-02-11","dateCreated":"2013-02-11","dateModified":"2013-02-11","url":"2013-02-11-parametric-texture"},{"@context":"http://schema.org","@type":"BlogPosting","headline":"契丹文","private":true,"author":0,"datePublished":"2013-02-11","dateCreated":"2013-02-11","dateModified":"2013-02-11","url":"2013-02-11-khitan"},{"@context":"http://schema.org","@type":"BlogPosting","headline":"Badass JavaScript","private":true,"author":0,"datePublished":"2012-08-05","dateCreated":"2012-08-05","dateModified":"2012-08-05","url":"2012-08-05-badass-js"},{"@context":"http://schema.org","@type":"BlogPosting","headline":"繼續讀黑客列傳…","private":true,"author":0,"datePublished":"2012-08-03","dateCreated":"2012-08-03","dateModified":"2012-08-03","url":"2012-08-03-hackers"},{"@context":"http://schema.org","@type":"BlogPosting","headline":"404 Blog Not Found","private":true,"author":0,"datePublished":"2012-07-17","dateCreated":"2012-07-17","dateModified":"2012-07-17","url":"2012-07-17-dankogai"},{"@context":"http://schema.org","@type":"BlogPosting","headline":"Remember, no return.","private":true,"author":0,"datePublished":"2012-06-28","dateCreated":"2012-06-28","dateModified":"2012-06-28","url":"2012-06-28-game-dev"},{"@context":"http://schema.org","@type":"BlogPosting","headline":"Embedded Gists","private":true,"author":0,"datePublished":"2012-06-16","dateCreated":"2012-06-16","dateModified":"2012-06-16","url":"2012-06-16-gists"},{"@context":"http://schema.org","@type":"BlogPosting","headline":"Scumbag UITableView","private":true,"author":0,"datePublished":"2012-03-14","dateCreated":"2012-03-14","dateModified":"2012-03-14","url":"2012-03-14-uitableview"},{"@context":"http://schema.org","@type":"BlogPosting","headline":".screenrc","private":true,"author":0,"datePublished":"2012-03-04","dateCreated":"2012-03-04","dateModified":"2012-03-04","url":"2012-03-04-screenrc"},{"@context":"http://schema.org","@type":"BlogPosting","headline":"Fun with JavaScript Singleton","author":0,"datePublished":"2012-02-26","dateCreated":"2012-02-26","dateModified":"2012-02-26","url":"2012-02-26-js-singleton"},{"@context":"http://schema.org","@type":"BlogPosting","headline":"imagination","private":true,"author":0,"datePublished":"2012-02-26","dateCreated":"2012-02-26","dateModified":"2012-02-26","url":"2012-02-26-imagination"},{"@context":"http://schema.org","@type":"BlogPosting","headline":"viewDidLoad","private":true,"author":0,"datePublished":"2012-02-22","dateCreated":"2012-02-22","dateModified":"2012-02-22","url":"2012-02-22-view-did-load"},{"@context":"http://schema.org","@type":"BlogPosting","headline":"Cocoa Design Patterns Errata","private":true,"author":0,"datePublished":"2012-02-19","dateCreated":"2012-02-19","dateModified":"2012-02-19","url":"2012-02-19-dp-errata"},{"@context":"http://schema.org","@type":"BlogPosting","headline":"prototype 的聯想","author":0,"datePublished":"2012-02-16","dateCreated":"2012-02-16","dateModified":"2012-02-16","url":"2012-02-16-prototype"},{"@context":"http://schema.org","@type":"BlogPosting","headline":"From NeXTSTEP to Cocoa","private":true,"author":0,"datePublished":"2012-01-29","dateCreated":"2012-01-29","dateModified":"2012-01-29","url":"2012-01-29-nextstep-cocoa"},{"@context":"http://schema.org","@type":"BlogPosting","headline":"Android Design","private":true,"author":0,"datePublished":"2012-01-13","dateCreated":"2012-01-13","dateModified":"2012-01-13","url":"2012-01-13-android-design"},{"@context":"http://schema.org","@type":"BlogPosting","headline":"Notch","private":true,"author":0,"datePublished":"2012-01-13","dateCreated":"2012-01-13","dateModified":"2012-01-13","url":"2012-01-13-notch"},{"@context":"http://schema.org","@type":"BlogPosting","headline":"p01","private":true,"author":0,"datePublished":"2012-01-07","dateCreated":"2012-01-07","dateModified":"2012-01-07","url":"2012-01-07-p01"},{"@context":"http://schema.org","@type":"BlogPosting","headline":"ECMA-262","private":true,"author":0,"datePublished":"2012-01-04","dateCreated":"2012-01-04","dateModified":"2012-01-04","url":"2012-01-04-ecma-262"},{"@context":"http://schema.org","@type":"BlogPosting","headline":"Dmitry A. Soshnikov","private":true,"author":0,"datePublished":"2012-01-04","dateCreated":"2012-01-04","dateModified":"2012-01-04","url":"2012-01-04-js-mentors"},{"@context":"http://schema.org","@type":"BlogPosting","headline":"Charles Babbage","private":true,"author":0,"datePublished":"2012-01-04","dateCreated":"2012-01-04","dateModified":"2012-01-04","url":"2012-01-04-babbage"},{"@context":"http://schema.org","@type":"BlogPosting","headline":"獨立遊戲競賽贊助","private":true,"author":0,"datePublished":"2011-11-28","dateCreated":"2011-11-28","dateModified":"2011-11-28","url":"2011-11-28-contest-sponsor"},{"@context":"http://schema.org","@type":"BlogPosting","headline":"人生","private":true,"author":0,"datePublished":"2011-11-28","dateCreated":"2011-11-28","dateModified":"2011-11-28","url":"2011-11-28-life"},{"@context":"http://schema.org","@type":"BlogPosting","headline":"Node","private":true,"author":0,"datePublished":"2011-10-30","dateCreated":"2011-10-30","dateModified":"2011-10-30","url":"2011-10-30-node"},{"@context":"http://schema.org","@type":"BlogPosting","headline":"如何在 Windows 作業系統安裝 Node.js 執行環境 (Cygwin)","private":true,"author":0,"datePublished":"2011-10-27","dateCreated":"2011-10-27","dateModified":"2011-10-27","url":"2011-10-27-node-cygwin"},{"@context":"http://schema.org","@type":"BlogPosting","headline":"Hong Kong Indie Game Development Blog","private":true,"author":0,"datePublished":"2011-10-19","dateCreated":"2011-10-19","dateModified":"2011-10-19","url":"2011-10-19-hk-indie-game"},{"@context":"http://schema.org","@type":"BlogPosting","headline":"Vampire Katana 歐美 MMO 情報誌","private":true,"author":0,"datePublished":"2011-10-17","dateCreated":"2011-10-17","dateModified":"2011-10-17","url":"2011-10-17-vampire-katana"},{"@context":"http://schema.org","@type":"BlogPosting","headline":"Linux UVC driver and tools","private":true,"author":0,"datePublished":"2011-10-14","dateCreated":"2011-10-14","dateModified":"2011-10-14","url":"2011-10-14-uvc-driver"},{"@context":"http://schema.org","@type":"BlogPosting","headline":"Things a Computer Scientist Rarely Talks About","private":true,"author":0,"datePublished":"2011-06-22","dateCreated":"2011-06-22","dateModified":"2011-06-22","url":"2011-06-22-things-a-computer-scientist-rarely-talks-about"},{"@context":"http://schema.org","@type":"BlogPosting","headline":"雖然...","private":true,"author":0,"datePublished":"2011-05-23","dateCreated":"2011-05-23","dateModified":"2011-05-23","url":"2011-05-23-although"},{"@context":"http://schema.org","@type":"BlogPosting","headline":"zonble: 奮鬥吧！系統工程師SE　兩週內即可上手？SE入門 1 這是怎樣的書啊（歪頭） (via 博客來書...","private":true,"author":0,"datePublished":"2011-05-22","dateCreated":"2011-05-22","dateModified":"2011-05-22","url":"2011-05-22-zonble-se"},{"@context":"http://schema.org","@type":"BlogPosting","headline":"DIVE INTO HTML5","private":true,"author":0,"datePublished":"2011-05-22","dateCreated":"2011-05-22","dateModified":"2011-05-22","url":"2011-05-22-dive-into-html5"},{"@context":"http://schema.org","@type":"BlogPosting","headline":"Eddy紫 试玩版v0.60","private":true,"author":0,"datePublished":"2011-05-22","dateCreated":"2011-05-22","dateModified":"2011-05-22","url":"2011-05-22-eddy"},{"@context":"http://schema.org","@type":"BlogPosting","headline":"ROME - \\"3 DREAMS OF BLACK\\"","private":true,"author":0,"datePublished":"2011-05-22","dateCreated":"2011-05-22","dateModified":"2011-05-22","url":"2011-05-22-rome"},{"@context":"http://schema.org","@type":"BlogPosting","headline":"Cloud9 IDE","private":true,"author":0,"datePublished":"2011-05-19","dateCreated":"2011-05-19","dateModified":"2011-05-19","url":"2011-05-19-cloud9"},{"@context":"http://schema.org","@type":"BlogPosting","headline":"Prototype JavaScript framework","private":true,"author":0,"datePublished":"2011-05-06","dateCreated":"2011-05-06","dateModified":"2011-05-06","url":"2011-05-06-prototype"},{"@context":"http://schema.org","@type":"BlogPosting","headline":"陳星漢","author":0,"datePublished":"2011-04-19","dateCreated":"2011-04-19","dateModified":"2017-11-19T04:28","url":"2011-04-19-jenovachen"},{"@context":"http://schema.org","@type":"BlogPosting","headline":"Air Pressure","private":true,"author":0,"datePublished":"2011-04-19","dateCreated":"2011-04-19","dateModified":"2011-04-19","url":"2011-04-19-air-pressure"},{"@context":"http://schema.org","@type":"BlogPosting","headline":"Fetris: A Tetris Clone","private":true,"author":0,"datePublished":"2011-04-18","dateCreated":"2011-04-18","dateModified":"2011-04-18","url":"2011-04-18-fetris"},{"@context":"http://schema.org","@type":"BlogPosting","headline":"TrntH","private":true,"author":0,"datePublished":"2011-04-17","dateCreated":"2011-04-17","dateModified":"2011-04-17","url":"2011-04-17-trnth"},{"@context":"http://schema.org","@type":"BlogPosting","headline":"世界臉","private":true,"author":0,"datePublished":"2011-04-07","dateCreated":"2011-04-07","dateModified":"2011-04-07","url":"2011-04-07-worldface"},{"@context":"http://schema.org","@type":"BlogPosting","headline":"adeathjohn 的頻道","private":true,"author":0,"datePublished":"2011-04-07","dateCreated":"2011-04-07","dateModified":"2011-04-07","url":"2011-04-07-adeathjohn"},{"@context":"http://schema.org","@type":"BlogPosting","headline":"獨立遊戲製作的驕傲，革命性的作品，Minecraft","private":true,"author":0,"datePublished":"2011-04-06","dateCreated":"2011-04-06","dateModified":"2011-04-06","url":"2011-04-06-minecraft"},{"@context":"http://schema.org","@type":"BlogPosting","headline":"懶人的憂愁","private":true,"author":0,"datePublished":"2011-04-06","dateCreated":"2011-04-06","dateModified":"2011-04-06","url":"2011-04-06-wicked"},{"@context":"http://schema.org","@type":"BlogPosting","headline":"其實台灣不只做不出百萬銷量的iOS遊戲","private":true,"author":0,"datePublished":"2011-03-10","dateCreated":"2011-03-10","dateModified":"2011-03-10","url":"2011-03-10-ios-game"},{"@context":"http://schema.org","@type":"BlogPosting","headline":"ActionScript 多人互動遊戲與虛擬世界製作","private":true,"author":0,"datePublished":"2011-03-08","dateCreated":"2011-03-08","dateModified":"2011-03-08","url":"2011-03-08-mmorpg"},{"@context":"http://schema.org","@type":"BlogPosting","headline":"List of Flash Gaming Engines","private":true,"author":0,"datePublished":"2011-02-27","dateCreated":"2011-02-27","dateModified":"2011-02-27","url":"2011-02-27-flash"},{"@context":"http://schema.org","@type":"BlogPosting","headline":"IdeaPaint","private":true,"author":0,"datePublished":"2011-02-10","dateCreated":"2011-02-10","dateModified":"2011-02-10","url":"2011-02-10-idea-paint"},{"@context":"http://schema.org","@type":"BlogPosting","headline":"Electro Server 5","private":true,"author":0,"datePublished":"2011-02-10","dateCreated":"2011-02-10","dateModified":"2011-02-10","url":"2011-02-10-electro-server"},{"@context":"http://schema.org","@type":"BlogPosting","headline":"C 語言之修煉與實踐","private":true,"author":0,"datePublished":"2011-02-10","dateCreated":"2011-02-10","dateModified":"2011-02-10","url":"2011-02-10-c"},{"@context":"http://schema.org","@type":"BlogPosting","headline":"Pushing the Limits of Windows: Physical Memory","private":true,"author":0,"datePublished":"2011-01-26","dateCreated":"2011-01-26","dateModified":"2011-01-26","url":"2011-01-26-windows"},{"@context":"http://schema.org","@type":"BlogPosting","headline":"d.CAT - the RIA blog","private":true,"author":0,"datePublished":"2011-01-25","dateCreated":"2011-01-25","dateModified":"2017-05-15","url":"2011-01-25-ria"},{"@context":"http://schema.org","@type":"BlogPosting","headline":"Game Development - Stack Exchange","private":true,"author":0,"datePublished":"2011-01-15","dateCreated":"2011-01-15","dateModified":"2011-01-15","url":"2011-01-15-game-development"},{"@context":"http://schema.org","@type":"BlogPosting","headline":"《軟體構築美學》譯者對書的介紹","private":true,"author":0,"datePublished":"2011-01-15","dateCreated":"2011-01-15","dateModified":"2011-01-15","url":"2011-01-15-brownfield"},{"@context":"http://schema.org","@type":"BlogPosting","headline":"等比例的企業號骨架，偉哉","private":true,"author":0,"datePublished":"2010-10-09","dateCreated":"2010-10-09","dateModified":"2010-10-09","url":"2010-10-09-enterprise"},{"@context":"http://schema.org","@type":"BlogPosting","headline":"16-bit ALU","private":true,"author":0,"datePublished":"2010-10-09","dateCreated":"2010-10-09","dateModified":"2010-10-09","url":"2010-10-09-alu"},{"@context":"http://schema.org","@type":"BlogPosting","headline":"What do you mean \\"impossible\\"?","private":true,"author":0,"datePublished":"2010-07-16","dateCreated":"2010-07-16","dateModified":"2010-07-16","url":"2010-07-16-dorothy"},{"@context":"http://schema.org","@type":"BlogPosting","headline":"Dealers of Lightning","private":true,"author":0,"datePublished":"2010-05-20","dateCreated":"2010-05-20","dateModified":"2010-05-20","url":"2010-05-20-dealers-of-lightning"},{"@context":"http://schema.org","@type":"BlogPosting","headline":"samsharehome 的 iPhone 開發技巧","private":true,"author":0,"datePublished":"2010-05-18","dateCreated":"2010-05-18","dateModified":"2010-05-18","url":"2010-05-18-samsharehome"},{"@context":"http://schema.org","@type":"BlogPosting","headline":"Software is Knowledge Representation","private":true,"author":0,"datePublished":"2010-05-18","dateCreated":"2010-05-18","dateModified":"2010-05-18","url":"2010-05-18-knowledge-representation"},{"@context":"http://schema.org","@type":"BlogPosting","headline":"Is 4-5 years the “Midlife Crisis” for a programming career?","private":true,"author":0,"datePublished":"2010-05-15","dateCreated":"2010-05-15","dateModified":"2010-05-15","url":"2010-05-15-midlife-crisis"},{"@context":"http://schema.org","@type":"BlogPosting","headline":"A delightful mix of laziness and incompetence. An anecdo...","private":true,"author":0,"datePublished":"2010-04-30","dateCreated":"2010-04-30","dateModified":"2010-04-30","url":"2010-04-30-laziness-and-incompetence"},{"@context":"http://schema.org","@type":"BlogPosting","headline":"研究：螳螂蝦具第四種視覺系統","private":true,"author":0,"datePublished":"2010-04-26","dateCreated":"2010-04-26","dateModified":"2010-04-26","url":"2010-04-26-mantis-shrimp"},{"@context":"http://schema.org","@type":"BlogPosting","headline":"巴叩的","private":true,"author":0,"datePublished":"2010-04-26","dateCreated":"2010-04-26","dateModified":"2010-04-26","url":"2010-04-26-barcode"},{"@context":"http://schema.org","@type":"BlogPosting","headline":"不存在的顏色","author":0,"datePublished":"2010-04-26","dateCreated":"2010-04-26","dateModified":"2017-05-17","url":"2010-04-26-nonexistent-color"},{"@context":"http://schema.org","@type":"BlogPosting","headline":"Digital Magazine","private":true,"author":0,"datePublished":"2010-04-23","dateCreated":"2010-04-23","dateModified":"2010-04-23","url":"2010-04-23-digital-magazine"},{"@context":"http://schema.org","@type":"BlogPosting","headline":"Are there any famous one-man-army programmers?","private":true,"author":0,"datePublished":"2010-04-20","dateCreated":"2010-04-20","dateModified":"2010-04-20","url":"2010-04-20-lone-wolf"},{"@context":"http://schema.org","@type":"BlogPosting","headline":"jserv","private":true,"author":0,"datePublished":"2010-04-19","dateCreated":"2010-04-19","dateModified":"2010-04-19","url":"2010-04-19-jserv"},{"@context":"http://schema.org","@type":"BlogPosting","headline":"zxing","private":true,"author":0,"datePublished":"2010-04-13","dateCreated":"2010-04-13","dateModified":"2010-04-13","url":"2010-04-13-zxing"},{"@context":"http://schema.org","@type":"BlogPosting","headline":"Green Threads","private":true,"author":0,"datePublished":"2010-04-09","dateCreated":"2010-04-09","dateModified":"2010-04-09","url":"2010-04-09-green-threads"},{"@context":"http://schema.org","@type":"BlogPosting","headline":"Adobe表示：/facepalm","private":true,"author":0,"datePublished":"2010-04-06","dateCreated":"2010-04-06","dateModified":"2010-04-06","url":"2010-04-06-adobe-facepalm"},{"@context":"http://schema.org","@type":"BlogPosting","headline":"All the Flowers are Dying","private":true,"author":0,"datePublished":"2010-04-02","dateCreated":"2010-04-02","dateModified":"2010-04-02","url":"2010-04-02-all-the-flowers-are-dying"},{"@context":"http://schema.org","@type":"BlogPosting","headline":"雲風的BLOG","private":true,"author":0,"datePublished":"2010-03-28","dateCreated":"2010-03-28","dateModified":"2010-03-28","url":"2010-03-28-cloudwu"},{"@context":"http://schema.org","@type":"BlogPosting","headline":"URLLoaderDataFormat","private":true,"author":0,"datePublished":"2010-03-27","dateCreated":"2010-03-27","dateModified":"2010-03-27","url":"2010-03-27-url-loader"},{"@context":"http://schema.org","@type":"BlogPosting","headline":"小算盤","private":true,"author":0,"datePublished":"2010-03-17","dateCreated":"2010-03-17","dateModified":"2010-03-17","url":"2010-03-17-calculator"},{"@context":"http://schema.org","@type":"BlogPosting","headline":"makefile for Java","private":true,"author":0,"datePublished":"2010-03-10","dateCreated":"2010-03-10","dateModified":"2010-03-10","url":"2010-03-10-java-makefile"},{"@context":"http://schema.org","@type":"BlogPosting","headline":"As3 buttons – hand cursor not displaying","private":true,"author":0,"datePublished":"2010-03-04","dateCreated":"2010-03-04","dateModified":"2010-03-04","url":"2010-03-04-as3-buttons"},{"@context":"http://schema.org","@type":"BlogPosting","headline":"pictures for sad children","private":true,"author":0,"datePublished":"2010-02-27","dateCreated":"2010-02-27","dateModified":"2010-02-27","url":"2010-02-27-pictures"},{"@context":"http://schema.org","@type":"BlogPosting","headline":"用 Maximum Segment Sum 教演算法","private":true,"author":0,"datePublished":"2010-02-09","dateCreated":"2010-02-09","dateModified":"2010-02-09","url":"2010-02-09-maximum-segment-sum"},{"@context":"http://schema.org","@type":"BlogPosting","headline":"測試","author":0,"datePublished":"2010-02-09","dateCreated":"2010-02-09","dateModified":"2010-02-09","url":"2010-02-09-testing"},{"@context":"http://schema.org","@type":"BlogPosting","headline":"Best sounding integer sequence","private":true,"author":0,"datePublished":"2010-02-06","dateCreated":"2010-02-06","dateModified":"2010-02-06","url":"2010-02-06-integer-sequence"},{"@context":"http://schema.org","@type":"BlogPosting","headline":"我討厭選單","private":true,"author":0,"datePublished":"2010-01-27","dateCreated":"2010-01-27","dateModified":"2010-01-27","url":"2010-01-27-menu"},{"@context":"http://schema.org","@type":"BlogPosting","headline":"Dexter","private":true,"author":0,"datePublished":"2010-01-26","dateCreated":"2010-01-26","dateModified":"2010-01-26","url":"2010-01-26-dexter"},{"@context":"http://schema.org","@type":"BlogPosting","headline":"一切","private":true,"author":0,"datePublished":"2010-01-25","dateCreated":"2010-01-25","dateModified":"2010-01-25","url":"2010-01-25-anything"},{"@context":"http://schema.org","@type":"BlogPosting","headline":"於是我終於想起來","private":true,"author":0,"datePublished":"2010-01-25","dateCreated":"2010-01-25","dateModified":"2010-01-25","url":"2010-01-25-flashback"},{"@context":"http://schema.org","@type":"BlogPosting","headline":"ROCKETBIRDS REVOLUTION!","private":true,"author":0,"datePublished":"2010-01-21","dateCreated":"2010-01-21","dateModified":"2010-01-21","url":"2010-01-21-rocketbirds-revolution"},{"@context":"http://schema.org","@type":"BlogPosting","headline":"要作 SEO ，可以去吃吃鹽酥雞換","private":true,"author":0,"datePublished":"2010-01-20","dateCreated":"2010-01-20","dateModified":"2010-01-20","url":"2010-01-20-seo"},{"@context":"http://schema.org","@type":"BlogPosting","headline":"打造自己的 reset.css","private":true,"author":0,"datePublished":"2010-01-20","dateCreated":"2010-01-20","dateModified":"2010-01-20","url":"2010-01-20-reset-css"},{"@context":"http://schema.org","@type":"BlogPosting","headline":"Sending an EOF to a named pipe - Questions","private":true,"author":0,"datePublished":"2010-01-17","dateCreated":"2010-01-17","dateModified":"2010-01-17","url":"2010-01-17-sending-eof"},{"@context":"http://schema.org","@type":"BlogPosting","headline":"GeoGebra","private":true,"author":0,"datePublished":"2010-01-17","dateCreated":"2010-01-17","dateModified":"2010-01-17","url":"2010-01-17-geogebra"},{"@context":"http://schema.org","@type":"BlogPosting","headline":"向 Google 中國致敬！","private":true,"author":0,"datePublished":"2010-01-15","dateCreated":"2010-01-15","dateModified":"2010-01-15","url":"2010-01-15"},{"@context":"http://schema.org","@type":"BlogPosting","headline":"tobeytailor\'s gordon at master - GitHub","private":true,"author":0,"datePublished":"2010-01-13","dateCreated":"2010-01-13","dateModified":"2010-01-13","url":"2010-01-13"},{"@context":"http://schema.org","@type":"BlogPosting","headline":"FOnline","private":true,"author":0,"datePublished":"2010-01-12","dateCreated":"2010-01-12","dateModified":"2010-01-12","url":"2010-01-12"},{"@context":"http://schema.org","@type":"BlogPosting","headline":"廢業夫妻成長日記的 [Nostalgia] 懷舊就是生活 III","private":true,"author":0,"datePublished":"2010-01-10","dateCreated":"2010-01-10","dateModified":"2017-05-13","url":"2010-01-10-2"},{"@context":"http://schema.org","@type":"BlogPosting","headline":"いんやんアイコン","private":true,"author":0,"datePublished":"2010-01-10","dateCreated":"2010-01-10","dateModified":"2010-01-10","url":"2010-01-10-1"},{"@context":"http://schema.org","@type":"BlogPosting","headline":"FlashPunk","private":true,"author":0,"datePublished":"2010-01-10","dateCreated":"2010-01-10","dateModified":"2010-01-10","url":"2010-01-10-0"},{"@context":"http://schema.org","@type":"BlogPosting","headline":"把錢都輸光光","private":true,"author":0,"datePublished":"2010-01-09","dateCreated":"2010-01-09","dateModified":"2010-01-09","url":"2010-01-09-4"},{"@context":"http://schema.org","@type":"BlogPosting","headline":"caasi","private":true,"author":0,"datePublished":"2010-01-09","dateCreated":"2010-01-09","dateModified":"2010-01-09","url":"2010-01-09-3"},{"@context":"http://schema.org","@type":"BlogPosting","headline":"Powers of 10","private":true,"author":0,"datePublished":"2010-01-09","dateCreated":"2010-01-09","dateModified":"2010-01-09","url":"2010-01-09-2"},{"@context":"http://schema.org","@type":"BlogPosting","headline":"把之前貼在別的地方的影片貼過來","private":true,"author":0,"datePublished":"2010-01-09","dateCreated":"2010-01-09","dateModified":"2010-01-09","url":"2010-01-09-1"},{"@context":"http://schema.org","@type":"BlogPosting","headline":"昨天 NR 說 Metro 2033有新的 trailer","private":true,"author":0,"datePublished":"2010-01-09","dateCreated":"2010-01-09","dateModified":"2010-01-09","url":"2010-01-09-0"}]')},function(e,n,t){var a=t(485);"string"==typeof a&&(a=[[e.i,a,""]]);var r={hmr:!0,transform:void 0,insertInto:void 0};t(23)(a,r);a.locals&&(e.exports=a.locals)},function(e,n,t){var a=t(918);"string"==typeof a&&(a=[[e.i,a,""]]);var r={hmr:!0,transform:void 0,insertInto:void 0};t(23)(a,r);a.locals&&(e.exports=a.locals)},function(e,n,t){var a=t(923);"string"==typeof a&&(a=[[e.i,a,""]]);var r={hmr:!0,transform:void 0,insertInto:void 0};t(23)(a,r);a.locals&&(e.exports=a.locals)},,,,,,,,,,,,,,,,,,,,,function(e,n,t){var a=t(569);"string"==typeof a&&(a=[[e.i,a,""]]);var r={hmr:!0,transform:void 0,insertInto:void 0};t(23)(a,r);a.locals&&(e.exports=a.locals)},function(e,n,t){var a=t(899);"string"==typeof a&&(a=[[e.i,a,""]]);var r={hmr:!0,transform:void 0,insertInto:void 0};t(23)(a,r);a.locals&&(e.exports=a.locals)},function(e,n,t){var a=t(902);"string"==typeof a&&(a=[[e.i,a,""]]);var r={hmr:!0,transform:void 0,insertInto:void 0};t(23)(a,r);a.locals&&(e.exports=a.locals)},function(e,n,t){var a=t(919);"string"==typeof a&&(a=[[e.i,a,""]]);var r={hmr:!0,transform:void 0,insertInto:void 0};t(23)(a,r);a.locals&&(e.exports=a.locals)},function(e,n,t){var a=t(922);"string"==typeof a&&(a=[[e.i,a,""]]);var r={hmr:!0,transform:void 0,insertInto:void 0};t(23)(a,r);a.locals&&(e.exports=a.locals)},,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,function(e,n,t){var a=t(284);"string"==typeof a&&(a=[[e.i,a,""]]);var r={hmr:!0,transform:void 0,insertInto:void 0};t(23)(a,r);a.locals&&(e.exports=a.locals)},,function(e,n,t){var a=t(565);"string"==typeof a&&(a=[[e.i,a,""]]);var r={hmr:!0,transform:void 0,insertInto:void 0};t(23)(a,r);a.locals&&(e.exports=a.locals)},function(e){e.exports=JSON.parse('{"@context":"http://schema.org","@type":"person","email":"mailto:caasi@caasih.net","name":"Isaac Huang","alternateName":"caasih","gender":"male","nationality":"Taiwanese","url":"http://caasih.net","sameAs":["https://github.com/caasi/"]}')},,,,function(e,n,t){var a=t(898);"string"==typeof a&&(a=[[e.i,a,""]]);var r={hmr:!0,transform:void 0,insertInto:void 0};t(23)(a,r);a.locals&&(e.exports=a.locals)},function(e,n,t){var a=t(900);"string"==typeof a&&(a=[[e.i,a,""]]);var r={hmr:!0,transform:void 0,insertInto:void 0};t(23)(a,r);a.locals&&(e.exports=a.locals)},function(e,n,t){var a=t(901);"string"==typeof a&&(a=[[e.i,a,""]]);var r={hmr:!0,transform:void 0,insertInto:void 0};t(23)(a,r);a.locals&&(e.exports=a.locals)},function(e,n,t){var a=t(921);"string"==typeof a&&(a=[[e.i,a,""]]);var r={hmr:!0,transform:void 0,insertInto:void 0};t(23)(a,r);a.locals&&(e.exports=a.locals)},,,,,,,,,,,,,,,,,,,,function(e,n,t){(n=e.exports=t(22)(!1)).push([e.i,".src-components-List-index__className--1z8R9 {\n  font-family: monospace;\n  white-space: pre;\n}\n\n  .src-components-List-index__className--1z8R9 > label {\n    -webkit-user-select: none;\n       -moz-user-select: none;\n        -ms-user-select: none;\n            user-select: none;\n  }\n\n  .src-components-List-index__className--1z8R9 > label:after {\n    content: ' =';\n  }\n\n.src-components-List-index__className--1z8R9.empty > label:after {\n    content: ' = []'\n  }\n\n.src-components-List-index__className--1z8R9 > ul {\n    list-style: none;\n    padding: 0;\n    margin: 0 0 0 2ch;\n  }\n\n.src-components-List-index__className--1z8R9 > ul > li:before {\n      content: ', \"';\n      white-space: pre;\n    }\n\n.src-components-List-index__className--1z8R9 > ul > li:first-child:before {\n      content: '[ \"';\n    }\n\n.src-components-List-index__className--1z8R9 > ul > li:after {\n      content: '\"';\n      white-space: pre;\n    }\n\n.src-components-List-index__className--1z8R9 > ul > li:last-child:after {\n      content: '\"\\A]';\n      white-space: pre;\n    }\n\n",""]),n.locals={className:"src-components-List-index__className--1z8R9"}},,function(e,n,t){var a={"./af":86,"./af.js":86,"./ar":87,"./ar-dz":88,"./ar-dz.js":88,"./ar-kw":89,"./ar-kw.js":89,"./ar-ly":90,"./ar-ly.js":90,"./ar-ma":91,"./ar-ma.js":91,"./ar-sa":92,"./ar-sa.js":92,"./ar-tn":93,"./ar-tn.js":93,"./ar.js":87,"./az":94,"./az.js":94,"./be":95,"./be.js":95,"./bg":96,"./bg.js":96,"./bm":97,"./bm.js":97,"./bn":98,"./bn-bd":99,"./bn-bd.js":99,"./bn.js":98,"./bo":100,"./bo.js":100,"./br":101,"./br.js":101,"./bs":102,"./bs.js":102,"./ca":103,"./ca.js":103,"./cs":104,"./cs.js":104,"./cv":105,"./cv.js":105,"./cy":106,"./cy.js":106,"./da":107,"./da.js":107,"./de":108,"./de-at":109,"./de-at.js":109,"./de-ch":110,"./de-ch.js":110,"./de.js":108,"./dv":111,"./dv.js":111,"./el":112,"./el.js":112,"./en-au":113,"./en-au.js":113,"./en-ca":114,"./en-ca.js":114,"./en-gb":115,"./en-gb.js":115,"./en-ie":116,"./en-ie.js":116,"./en-il":117,"./en-il.js":117,"./en-in":118,"./en-in.js":118,"./en-nz":119,"./en-nz.js":119,"./en-sg":120,"./en-sg.js":120,"./eo":121,"./eo.js":121,"./es":122,"./es-do":123,"./es-do.js":123,"./es-mx":124,"./es-mx.js":124,"./es-us":125,"./es-us.js":125,"./es.js":122,"./et":126,"./et.js":126,"./eu":127,"./eu.js":127,"./fa":128,"./fa.js":128,"./fi":129,"./fi.js":129,"./fil":130,"./fil.js":130,"./fo":131,"./fo.js":131,"./fr":132,"./fr-ca":133,"./fr-ca.js":133,"./fr-ch":134,"./fr-ch.js":134,"./fr.js":132,"./fy":135,"./fy.js":135,"./ga":136,"./ga.js":136,"./gd":137,"./gd.js":137,"./gl":138,"./gl.js":138,"./gom-deva":139,"./gom-deva.js":139,"./gom-latn":140,"./gom-latn.js":140,"./gu":141,"./gu.js":141,"./he":142,"./he.js":142,"./hi":143,"./hi.js":143,"./hr":144,"./hr.js":144,"./hu":145,"./hu.js":145,"./hy-am":146,"./hy-am.js":146,"./id":147,"./id.js":147,"./is":148,"./is.js":148,"./it":149,"./it-ch":150,"./it-ch.js":150,"./it.js":149,"./ja":151,"./ja.js":151,"./jv":152,"./jv.js":152,"./ka":153,"./ka.js":153,"./kk":154,"./kk.js":154,"./km":155,"./km.js":155,"./kn":156,"./kn.js":156,"./ko":157,"./ko.js":157,"./ku":158,"./ku.js":158,"./ky":159,"./ky.js":159,"./lb":160,"./lb.js":160,"./lo":161,"./lo.js":161,"./lt":162,"./lt.js":162,"./lv":163,"./lv.js":163,"./me":164,"./me.js":164,"./mi":165,"./mi.js":165,"./mk":166,"./mk.js":166,"./ml":167,"./ml.js":167,"./mn":168,"./mn.js":168,"./mr":169,"./mr.js":169,"./ms":170,"./ms-my":171,"./ms-my.js":171,"./ms.js":170,"./mt":172,"./mt.js":172,"./my":173,"./my.js":173,"./nb":174,"./nb.js":174,"./ne":175,"./ne.js":175,"./nl":176,"./nl-be":177,"./nl-be.js":177,"./nl.js":176,"./nn":178,"./nn.js":178,"./oc-lnc":179,"./oc-lnc.js":179,"./pa-in":180,"./pa-in.js":180,"./pl":181,"./pl.js":181,"./pt":182,"./pt-br":183,"./pt-br.js":183,"./pt.js":182,"./ro":184,"./ro.js":184,"./ru":185,"./ru.js":185,"./sd":186,"./sd.js":186,"./se":187,"./se.js":187,"./si":188,"./si.js":188,"./sk":189,"./sk.js":189,"./sl":190,"./sl.js":190,"./sq":191,"./sq.js":191,"./sr":192,"./sr-cyrl":193,"./sr-cyrl.js":193,"./sr.js":192,"./ss":194,"./ss.js":194,"./sv":195,"./sv.js":195,"./sw":196,"./sw.js":196,"./ta":197,"./ta.js":197,"./te":198,"./te.js":198,"./tet":199,"./tet.js":199,"./tg":200,"./tg.js":200,"./th":201,"./th.js":201,"./tk":202,"./tk.js":202,"./tl-ph":203,"./tl-ph.js":203,"./tlh":204,"./tlh.js":204,"./tr":205,"./tr.js":205,"./tzl":206,"./tzl.js":206,"./tzm":207,"./tzm-latn":208,"./tzm-latn.js":208,"./tzm.js":207,"./ug-cn":209,"./ug-cn.js":209,"./uk":210,"./uk.js":210,"./ur":211,"./ur.js":211,"./uz":212,"./uz-latn":213,"./uz-latn.js":213,"./uz.js":212,"./vi":214,"./vi.js":214,"./x-pseudo":215,"./x-pseudo.js":215,"./yo":216,"./yo.js":216,"./zh-cn":217,"./zh-cn.js":217,"./zh-hk":218,"./zh-hk.js":218,"./zh-mo":219,"./zh-mo.js":219,"./zh-tw":220,"./zh-tw.js":220};function r(e){var n=o(e);return t(n)}function o(e){if(!t.o(a,e)){var n=new Error("Cannot find module '"+e+"'");throw n.code="MODULE_NOT_FOUND",n}return a[e]}r.keys=function(){return Object.keys(a)},r.resolve=o,e.exports=r,r.id=286},function(e,n,t){var a={"./2010-01-09-0.md":288,"./2010-01-09-1.md":289,"./2010-01-09-2.md":290,"./2010-01-09-3.md":291,"./2010-01-09-4.md":292,"./2010-01-10-0.md":293,"./2010-01-10-1.md":294,"./2010-01-10-2.md":295,"./2010-01-12.md":296,"./2010-01-13.md":297,"./2010-01-15.md":298,"./2010-01-17-geogebra.md":299,"./2010-01-17-sending-eof.md":300,"./2010-01-20-reset-css.md":301,"./2010-01-20-seo.md":302,"./2010-01-21-rocketbirds-revolution.md":303,"./2010-01-25-anything.md":304,"./2010-01-25-flashback.md":305,"./2010-01-26-dexter.md":306,"./2010-01-27-menu.md":307,"./2010-02-06-integer-sequence.md":308,"./2010-02-09-maximum-segment-sum.md":309,"./2010-02-09-testing.md":310,"./2010-02-27-pictures.md":311,"./2010-03-04-as3-buttons.md":312,"./2010-03-10-java-makefile.md":313,"./2010-03-17-calculator.md":314,"./2010-03-27-url-loader.md":315,"./2010-03-28-cloudwu.md":316,"./2010-04-02-all-the-flowers-are-dying.md":317,"./2010-04-06-adobe-facepalm.md":318,"./2010-04-09-green-threads.md":319,"./2010-04-13-zxing.md":320,"./2010-04-19-jserv.md":321,"./2010-04-20-lone-wolf.md":322,"./2010-04-23-digital-magazine.md":323,"./2010-04-26-barcode.md":324,"./2010-04-26-mantis-shrimp.md":325,"./2010-04-26-nonexistent-color.md":326,"./2010-04-30-laziness-and-incompetence.md":327,"./2010-05-15-midlife-crisis.md":328,"./2010-05-18-knowledge-representation.md":329,"./2010-05-18-samsharehome.md":330,"./2010-05-20-dealers-of-lightning.md":331,"./2010-07-16-dorothy.md":332,"./2010-10-09-alu.md":333,"./2010-10-09-enterprise.md":334,"./2011-01-15-brownfield.md":335,"./2011-01-15-game-development.md":336,"./2011-01-25-ria.md":337,"./2011-01-26-windows.md":338,"./2011-02-10-c.md":339,"./2011-02-10-electro-server.md":340,"./2011-02-10-idea-paint.md":341,"./2011-02-27-flash.md":342,"./2011-03-08-mmorpg.md":343,"./2011-03-10-ios-game.md":344,"./2011-04-06-minecraft.md":345,"./2011-04-06-wicked.md":346,"./2011-04-07-adeathjohn.md":347,"./2011-04-07-worldface.md":348,"./2011-04-17-trnth.md":349,"./2011-04-18-fetris.md":350,"./2011-04-19-air-pressure.md":351,"./2011-04-19-jenovachen.md":352,"./2011-05-06-prototype.md":353,"./2011-05-19-cloud9.md":354,"./2011-05-22-dive-into-html5.md":355,"./2011-05-22-eddy.md":356,"./2011-05-22-rome.md":357,"./2011-05-22-zonble-se.md":358,"./2011-05-23-although.md":359,"./2011-06-22-things-a-computer-scientist-rarely-talks-about.md":360,"./2011-10-14-flar-toolkit.md":361,"./2011-10-14-uvc-driver.md":362,"./2011-10-17-vampire-katana.md":363,"./2011-10-19-hk-indie-game.md":364,"./2011-10-27-node-cygwin.md":365,"./2011-10-30-node.md":366,"./2011-11-28-contest-sponsor.md":367,"./2011-11-28-life.md":368,"./2012-01-04-babbage.md":369,"./2012-01-04-ecma-262.md":370,"./2012-01-04-js-mentors.md":371,"./2012-01-07-p01.md":372,"./2012-01-13-android-design.md":373,"./2012-01-13-notch.md":374,"./2012-01-29-nextstep-cocoa.md":375,"./2012-02-16-prototype.md":376,"./2012-02-19-dp-errata.md":377,"./2012-02-22-view-did-load.md":378,"./2012-02-26-imagination.md":379,"./2012-02-26-js-singleton.md":380,"./2012-03-04-screenrc.md":381,"./2012-03-07-tmux-conf.md":382,"./2012-03-14-uitableview.md":383,"./2012-06-16-gists.md":384,"./2012-06-28-game-dev.md":385,"./2012-07-17-dankogai.md":386,"./2012-08-03-hackers.md":387,"./2012-08-05-badass-js.md":388,"./2013-02-11-khitan.md":389,"./2013-02-11-parametric-texture.md":390,"./2013-02-25-intel-glsl.md":391,"./2013-04-20-llvm-ir.md":392,"./2013-04-20-lyah.md":393,"./2013-05-04-intersections.md":394,"./2013-05-05-chinese-writing-reform.md":395,"./2013-05-05-entropy-compression-content.md":396,"./2013-05-05-pioneering-images.md":397,"./2013-05-06-disp-bbs.md":398,"./2013-05-08-html5-as3.md":399,"./2013-05-08-xhr.md":400,"./2013-05-26-yitang-zhang.md":401,"./2013-05-26-youcompleteme.md":402,"./2013-07-07-dynamic-lighting.md":403,"./2013-07-07-mafia.md":404,"./2013-08-08-g0v.md":405,"./2013-08-11-js-ucs-2.md":406,"./2013-08-13-netivism.md":407,"./2013-08-15-protobuf.md":408,"./2013-08-17-holla.md":409,"./2013-08-17-jitsi.md":410,"./2013-08-18-acoustic-crypt.md":411,"./2013-08-23-ungit.md":412,"./2013-08-26-twfuture.md":413,"./2013-08-29-glyph-wiki.md":414,"./2013-11-26-lentoregex-vs-node-segment.md":415,"./2013-11-29-little-necromancer.md":416,"./2013-12-19-wondering.md":417,"./2014-04-06-rfc-6902.md":418,"./2014-04-21-jade-stylus-livescript.md":419,"./2014-04-30-moedict-history.md":420,"./2014-06-23-write-a-native-extension.md":421,"./2014-07-05-permutation-city.md":422,"./2014-09-09-caasi.md":423,"./2014-10-30-societies-and-epub.md":424,"./2014-12-03-states-are-like-bubbles.md":425,"./2015-01-14-0225.md":426,"./2015-01-18-lift-promise-n.md":427,"./2015-02-10-old-promise-system.md":428,"./2015-02-21-minori.md":429,"./2015-02-24-react-component-in-es6.md":430,"./2015-02-28-csp.md":431,"./2015-03-17-loner.md":432,"./2015-04-02-re-bad-suggestions-about-learning-c.md":433,"./2015-04-25-status-report-and-react.md":434,"./2015-05-06-burroughs.md":435,"./2015-05-11-on-hackathon.md":436,"./2015-06-23-one-of-my-alt-promises.md":437,"./2015-08-14-my-observation.md":438,"./2015-08-19-indie-software-developer.md":439,"./2015-08-25-hypertext-and-ted-nelson.md":440,"./2015-08-30-on-math.md":441,"./2015-10-24-build-your-own-lambda.md":442,"./2015-11-23-hn-and-spj.md":443,"./2015-11-29-byohc-1.md":444,"./2015-12-04-envy.md":445,"./2015-12-23-byohc-2.md":446,"./2016-02-04-epub-31.md":447,"./2016-02-28-byohc-3.md":448,"./2016-03-16-frege-0.md":449,"./2016-03-17-mother.md":450,"./2016-03-31-status-0.md":451,"./2016-04-17-altspace-vr.md":452,"./2016-04-20-unlearn.md":453,"./2016-04-22-status-1.md":454,"./2016-04-27-vim-8.md":455,"./2016-05-01-re-byohc-0-0.md":456,"./2016-05-01-re-byohc-0-1.md":457,"./2016-05-01-re-byohc-0-appendix.md":458,"./2016-05-02-re-byohc-0-2.md":459,"./2016-05-03-re-byohc-0-3.md":460,"./2016-05-04-re-byohc-0-4.md":461,"./2016-05-07-re-byohc-0-5.md":462,"./2016-07-19-re-byohc-1-0.md":463,"./2016-07-20-re-byohc-1-1.md":464,"./2016-07-29-re-byohc-1-2.md":465,"./2016-10-18-on-monster.md":466,"./2016-11-10-re-byohc-1-3.md":467,"./2016-11-18-ifl-0.md":468,"./2016-11-23-ifl-1-2.md":469,"./2016-11-24-ifl-3.md":470,"./2016-11-26-ifl-4.md":471,"./2016-11-27-being-lazy-with-class.md":472,"./2016-12-01-ifl-5.md":473,"./2016-12-02-ifl-6.md":474,"./2016-12-06-into-the-core.md":475,"./2016-12-18-ifl-7.md":476,"./2016-12-18-ifl-8.md":477,"./2017-05-01-cool-down.md":478,"./2017-06-14-safe-space.md":479,"./2017-11-24-school-of-expression.md":480,"./2017-12-04-saekano.md":481,"./2017-12-29-desktop-0.md":482,"./2018-01-12-on-matthew-fuller.md":483,"./2018-09-20-school-of-music.md":484};function r(e){var n=o(e);return t(n)}function o(e){if(!t.o(a,e)){var n=new Error("Cannot find module '"+e+"'");throw n.code="MODULE_NOT_FOUND",n}return a[e]}r.keys=function(){return Object.keys(a)},r.resolve=o,e.exports=r,r.id=287},function(e,n,t){"use strict";t.r(n),n.default='<iframe\n  width="400" height="300"\n  frameborder="0"\n  allowfullscreen\n  src="http://www.youtube.com/embed/hutGISooBEQ?wmode=transparent&autohide=1&egm=0&hd=1&iv_load_policy=3&modestbranding=1&rel=0&showinfo=0&showsearch=0"\n></iframe>\n\n昨天 NR 說 Metro 2033 有新的 trailer ：\n\n  * 看來遊戲前期玩家會有個導師類的角色（心）。\n\n  * NR說現在看來遊戲中的 view model看起來太短了，希望發售時不會這樣。\n\n'},function(e,n,t){"use strict";t.r(n),n.default='<iframe\n  width="400" height="300"\n  frameborder="0"\n  allowfullscreen\n  src="http://www.youtube.com/embed/aUGAs7pnEVo?wmode=transparent&autohide=1&egm=0&hd=1&iv_load_policy=3&modestbranding=1&rel=0&showinfo=0&showsearch=0"\n></iframe>\n\n把之前貼在別的地方的影片貼過來，這是 The Blackheart Gang 在 2006 年的作品。裡面有堆多多鳥也有一堆 Cthulhu 元素。\n\n也別錯過：[the making of Tale of How](http://www.youtube.com/watch?v=ZRlZNIIjLU8)\n\n'},function(e,n,t){"use strict";t.r(n),n.default='<iframe\n  width="400" height="300"\n  frameborder="0"\n  allowfullscreen\n  src="http://www.youtube.com/embed/A2cmlhfdxuY?wmode=transparent&autohide=1&egm=0&hd=1&iv_load_policy=3&modestbranding=1&rel=0&showinfo=0&showsearch=0"\n></iframe>\n\n在填鴨教室看到這個：[所知的宇宙](http://duckfeeding.com/archives/13425)\n\n自然文章中也提到 Powers of 10，記得第一次是在科博館完整把它看完。動畫中向它致敬的也不少，只是一時想得起來的只有[ Gunbuster 片頭](http://www.youtube.com/watch?v=e5_bqv17g9c)前面那幾秒。[辛普森的版本](http://www.youtube.com/watch?v=7GDC3u8k02c)，有趣的地方在於，他的宇宙觀比較像 MIB 。\n\n'},function(e,n,t){"use strict";t.r(n),n.default="用 caasi 這個名字註冊就是想拿來放一些工作上的東西。可是老實說在做的也不過就是寫些動畫答題回饋、做點 CSS 排版，沒事在網路上看一些「真正在工作」的人的 Blog，偶爾看一點點書，以為哪天可以寫一點什麼，自我感覺良好罷了。\n\nWelcome to the desert of the REAL.\n\n"},function(e,n,t){"use strict";t.r(n),n.default="昨天和巴龜討論到他的朋友怎麼在勝率 5/11 的遊戲中把錢都輸光光。\n\n規則是這樣的：roll 11，\n\n  * 1-5：小\n\n  * 6-10：大\n\n  * 11：莊家通殺\n\n他說強者他朋友本來靠著「連續開好幾次小那接下來我就壓大」這種常見的想法小贏了一點，結果卻因為連續九次開大而輸到脫褲。巴龜覺得他朋友被騙了，而我想到之前看過的[賭徒謬誤](http://zh.wikipedia.org/wiki/%E8%B3%AD%E5%BE%92%E8%AC%AC%E8%AA%A4)，於是做了點模擬求連續開九次大的平均次數。\n\n在一萬次的模擬後，平均玩個 2200 次會遇到連續九個大，巴龜說他朋友大概玩了三十幾局就遇到，在模擬中這樣的機會有 1% ， 1% 還真是個尷尬的數字，你說它大不算大，但是小也不算小。（掉寶率 0.x% 的東西都有人硬是要刷到掉出來了）。很難說是不是被騙。\n\n話說回來這個遊戲本身莊家就佔一點點優勢，要是一直都壓一樣多錢，玩家是會虧的。隨著本金越來越少，想翻本的想法越來越強，越壓越大，一下就輸光也不奇怪。\n\n"},function(e,n,t){"use strict";t.r(n),n.default='<iframe\n  width="400" height="300"\n  frameborder="0"\n  allowfullscreen\n  src="http://www.youtube.com/embed/AeL42X82JFg?wmode=transparent&autohide=1&egm=0&hd=1&iv_load_policy=3&modestbranding=1&rel=0&showinfo=0&showsearch=0"\n></iframe>\n\n[FlashPunk](http://flashpunk.net/)\n\n又一款 2D Flash 遊戲引擎。不像 Flixel 有內建的物理引擎。好奇他怎麼實作遊戲 Sprite ，怎麼處理動畫。\n\n'},function(e,n,t){"use strict";t.r(n),n.default="[いんやんアイコン](http://www.geocities.jp/yinyang_ico/)\n\n[Ｂダッシュ同盟](http://ikebukuro.cool.ne.jp/c_chicken/mario.html)的圖片來源。啊，好可愛。\n\n"},function(e,n,t){"use strict";t.r(n),n.default="[廢業夫妻成長日記的 [Nostalgia] 懷舊就是生活 III](http://sdkfz251.blogspot.com/2010/01/nostalgia-iii.html)\n\n回想起來，小時候雖然喜歡打電動，但卻不是個認真打電動的小鬼，有點後悔（？）。\n\n在看 Namco 特輯那篇時想到，不知道是那邊的文章中說， Pac-Man 裡面的鬼追玩家並沒有用到什麼複雜的演算法，而是由 Pac-Man 走過的路線決定。為此找了下，結果 [The Pac-Man Dossier](http://home.comcast.net/~jpittman2/pacman/pacmandossier.html) 完全破解這鬼流言，裡面四種鬼各有不同的移動模式，也有自己的目標 Tile 。鬼頂多就是多預測一格，好在遇到岔路時決定自己該轉那個彎。\n\n至於之前聽到的那個神奇作法，旨在說明在地圖上留下資料可以減少尋徑的計算負擔。我猜比較有可能出現在類似放屁車（New Rally-X）之類的遊戲中，不過一時找不到證據。\n\n"},function(e,n,t){"use strict";t.r(n),n.default='[FOnline](http://fonline2238.blogspot.com/) 是俄國 Fallout 迷開發的線上版。主旨在於重現 Fallout 系列的遊戲體驗，強調「生存」。\n\n### Server狀態\n\n<img src="http://wasteland.spb.su/fo/?s=2&var=3" alt="FOnline Server Statis"/>\n\n### 安裝後\n\n如果嫌更新慢可以到下面手動找檔案：\n\n  * [http://fo.hungosh.net/files/Client/Client/](http://fo.hungosh.net/files/Client/Client/)\n\n  * [FOnline.rar](http://rghost.net/780232)\n\n### 前期存活指南\n\n  * 等級一到五請待在安全的城市像是 Hub 、 NCR 或是 JunkTown 挖糞。\n\n  * 有了 100元記得到銀行開戶存錢，減少被掛掉的損失。\n\n  * 有了 10張牛皮後請到大地圖上找個不起眼的地方，對牛皮使用 Science 技能蓋帳棚：這是就你自己的溫馨小窩，記住，別帶陌生人回家。\n\n### 死亡\n\nHP降到 -20 就掛了，接下來的一分鐘誰都可以 loot 你（包含 NPC ），然後你會在隨機地點復活，有著數分鐘的虛弱時間。\n\n'},function(e,n,t){"use strict";t.r(n),n.default='[tobeytailor\'s gordon at master - GitHub](http://github.com/tobeytailor/gordon/)\n\n[zonble](http://cocoa.zonble.net/post/332765374/tobeytailors-gordon-at-master-github):\n\n> 真是勇猛頑強。<a href="http://paulirish.com/work/gordon/demos/">Demo</a>。\n>\n> Gordon: An open source Flash™ runtime written in pure JavaScript\n\n同場加映：開源的 Flash player [vektrix](http://www.fuse-software.com/software/vektrix)\n\n現在我們就缺一個純 Flash 寫的 HTML5 browser 了。\n\n「在 vektrix 上面跑的 Flash HTML5 browser 跑的 Gordon 」（crash）\n\n'},function(e,n,t){"use strict";t.r(n),n.default="[向 Google 中國致敬！](http://flower.heroku.com/)\n\n順便提醒自己好好完成 Computer Science 訓練。\n\n"},function(e,n,t){"use strict";t.r(n),n.default="[GeoGebra](http://www.geogebra.org/cms/)\n\n另一個 Java 寫的數學繪圖教學軟體。\n\n"},function(e,n,t){"use strict";t.r(n),n.default="[Sending an EOF to a named pipe - Questions](http://fixunix.com/questions/379652-sending-eof-named-pipe.html)\n\n巴龜剛好問到怎麼知道從 pipe 中讀到 EOF 。查了一下才知道只有在所有的 process 中， pipe 的 write 端都被關上時， read 端才會讀到 EOF 。\n\n"},function(e,n,t){"use strict";t.r(n),n.default="[打造自己的 reset.css ](http://shawphy.com/2009/03/my-own-reset-css.html)\n\n看完後可以很大聲的說，我不是只重設 margin跟 padding的隨便人了！\n\n"},function(e,n,t){"use strict";t.r(n),n.default="不想大辣辣的把這個連結貼上標題。\n\n  * [a plus 通路聯盟](http://www.apgroup.tw/)\n  \n今天買鹽酥雞時，那店的集點活動可以換這個通路聯盟的優惠。妙的是他們的優惠沒有分類，也就是說，要是我集到十點，除了旅遊、泡湯優惠外，還可以享受關鍵字排名折價服務。 XD\n\n"},function(e,n,t){"use strict";t.r(n),n.default="[ROCKETBIRDS REVOLUTION!](http://www.rocketbirds.com/)\n\n2010 Independent Games Festival 的傑出音樂獎入圍遊戲。\n\n"},function(e,n,t){"use strict";t.r(n),n.default="「可以放棄一切」，跟認識到「自己什麼都得不到」是不一樣的。\n\n一個是能力者的豁達，一個是無能者的醒悟。\n\n"},function(e,n,t){"use strict";t.r(n),n.default="於是我終於想起來，什麼時候自己覺得能表現出自信卻不會覺得其他人表現出明顯的不合適。什麼時候還很積極的想著我能做到什麼，什麼時候能想像也許有個不是像這樣的自己。\n\n沒有什麼該被原諒的，付出代價就是了。\n\n"},function(e,n,t){"use strict";t.r(n),n.default="因緣際會開始看 Dexter 。\n\n他的內心旁白讓我想起 Max Payne 。\n\n"},function(e,n,t){"use strict";t.r(n),n.default="我討厭選單，還沒找到一個好方法來做它們。\n\n"},function(e,n,t){"use strict";t.r(n),n.default="[Best sounding integer sequence](http://forums.xkcd.com/viewtopic.php?f=17&t=48821)\n\nxkcd 真是個神奇的地方，今天看到有人在討論幾個把數學變成音樂的網站：\n\n  * [the On-Line Encyclopedia of Integer Sequences](http://www.research.att.com/~njas/sequences/Seis.html)  \n    你可以找個你喜歡的數列來聽 XD\n\n  * [Metamath Music Page](http://us.metamath.org/mpegif/mmmusic.html)  \n    把證明變成音樂！\n\n"},function(e,n,t){"use strict";t.r(n),n.default="[用 Maximum Segment Sum 教演算法](http://flolac.iis.sinica.edu.tw/lambdawan/node/170)\n\n如果加成負的，就全部丟掉！\n\n---\n\n看著看著想起當年 D'NA 教 [UVa 108](http://www.algorithmist.com/index.php/UVa_108) 的身影。結果我還是不記得怎麼用 DP 解 Max Sub Matrix Sums 。\n\n"},function(e,n,t){"use strict";t.r(n),n.default="[godfat](http://godfat.tumblr.com/post/380126699):\n\n> ㄟ，我有看到這篇，不過這邊我東西都還沒調好… :(  \n> 暫時沒空慢慢調…\n>\n> [caasi](http://caasi.tumblr.com/post/378845276):\n>\n> > [godfat](http://godfat.tumblr.com/post/318414280):\n> >\n> > > 天上龍捲風捲龍上天。\n> >\n> > Knock knock，有人在家嗎？\n\n沒差啦，反正寫這個又沒有壓力 XD  \n看到你在用 tumblr嚇了一跳，因為你已經很勤地在寫星之一角了。\n\n有段時間在爬 PTT 的程式語言版，也發過一篇鱷魚蛋的。後來因此找到你的星球 XD  \n最近持續關心老外獨立遊戲的發展，之前在你那邊問有沒有看 TIGSource 跟 ByteJacker 的也是我 :p\n\n"},function(e,n,t){"use strict";t.r(n),n.default="[picture for sad children](http://www.picturesforsadchildren.com/index.php?comicID=315)\n\n[yearofgames](http://yearofgames.tumblr.com/post/414239882/pictures-for-sad-children):\n\n> video gaaaaaaaames\n\nThis comic is sooooooooo sad. lol\n\n人生ｵﾜﾀ＼(^o^)／，這真是太辛酸了 XD\n\n"},function(e,n,t){"use strict";t.r(n),n.default="[As3 buttons - hand cursor not display](http://numiko.com/labs/?p=188)\n\nAS3 鬼才知道的小技巧：要是 TextField 讓 parent DisplayObject 沒法冒出滑鼠小手，請把 parent 的 mouseChildren 設成 false ，小手就冒出來了。\n\n"},function(e,n,t){"use strict";t.r(n),n.default="```\n# compiler and path setting\nJAVA = /usr/bin/java\nJC = /usr/bin/javac\nJFLAGS = -g\nCP = ./classes\nSRC = ./src\n\n# put your main class and other classes here\nMAIN = \\\n        FirstWindow.java\n\nCLASSES = \\\n\n# rules\ndefault: classes\n\n$(CP)/%.class:$(SRC)/%.java\n        $(JC) $(JFLAGS) -sourcepath $(SRC) -d $(CP) $&lt;\n\nclasses: $(addprefix $(CP)/, $(MAIN:.java=.class)) $(addprefix $(CP)/, $(CLASSES:.java=.class))run: $(addprefix $(SRC)/, $(MAIN)) $(addprefix $(SRC)/, $(CLASSES))\n        $(JAVA) -cp $(CP) $(MAIN:.java=)\n\nclean:\n        $(RM) $(CP)/*.class\n```\n\n習慣把 .class 跟 .java 分開放，網上找到的 Java makefile 不是很好用。\n\n最後，這個學期還是修了視窗程式設計（Java Swing），雖然已經試過 Windows API 跟 Qt ，到現在才算是真的以了解 component 為目的學視窗。畢竟到頭來在 Flash 上面總有一天還是得會寫自己的 ui component 。\n\n<p>Amao則是自己在碰 GTK，不知道 GTK怎麼傳遞事件？</p>\n"},function(e,n,t){"use strict";t.r(n),n.default="到頭來覺得自己像個白癡。\n\n像小算盤這樣的程式竟然搞了半天，重點是：「需要存下剛剛用過的運算元跟運算子」，剩下的就是狀態怎麼轉換，執行不同工作。\n\n"},function(e,n,t){"use strict";t.r(n),n.default="[URLLoaderDataFormat](http://livedocs.adobe.com/flash/9.0/ActionScriptLangRefV3/flash/net/URLLoaderDataFormat.html)\n\n為什麼不是繼承出 URLBinaryLoader 、 URLTextLoader 、 URLVariablesLoader ？ AS3 中好多這種常數。\n\n"},function(e,n,t){"use strict";t.r(n),n.default="[雲風的BLOG](http://blog.codingnow.com/)\n\n這幾天在舊書攤買到「遊戲之旅-我的程式設計感悟」，是自傳，也更像是一本分享成為一個遊戲設計師應該注意哪些細節的書（無論在技術上或是其他方面）。\n\n"},function(e,n,t){"use strict";t.r(n),n.default="也許哪天我會把馬修史卡德系列看完。也許哪天我能把該念的書念到心底。也許哪天能在 MochiAds有點收入。也許......。\n\n"},function(e,n,t){"use strict";t.r(n),n.default='<iframe\n  width="400" height="225"\n  frameborder="0"\n  allowfullscreen\n  src="http://www.youtube.com/embed/fyfu4OwjUEI?wmode=transparent&autohide=1&egm=0&hd=1&iv_load_policy=3&modestbranding=1&rel=0&showinfo=0&showsearch=0"\n></iframe>\n\nAdobe 表示：/facepalm 。\n\n'},function(e,n,t){"use strict";t.r(n),n.default="[Green Threads](http://blog.generalrelativity.org/actionscript-30/green-threads/)\n\n"},function(e,n,t){"use strict";t.r(n),n.default="[zxing](http://code.google.com/p/zxing/)\n\niPhone 部份的作者是 Christian Brunschen ，自 2006年中開始在 Google UK 上班。\n\n  * r444 是第一個有 iPhone 用 code 的版本。\n\n  * r457 加入了在地化。\n\n  * r469~r471 改進 UI 。\n\n  * r478 重構了 ParsedResult 。\n\n  * r495 改進了 UI 。\n\n  * r542 移掉了 Google 的版權聲明，加上 Apache License 2.0 。\n\n  * r561 把 HintsViewController 改成 MessageViewController 。\n\n  * r563 清理 MessageViewController 。\n\n  * r589 好像因為 iPhone 聯絡人地址 API 的問題做了點折衷。\n\n  * r590 App Store icon 相關修正。\n\n  * r595 因為 UIImagePickerController 的問題，移除了 UI 自動旋轉功能。\n\n  * r596 又是 App Store 相關修正。\n\n  * r614 改進影像裁切（crop）。\n\n  * r1002 改進了錯誤處理。\n\n  * 另外 r1116 中 Bas Vijfwinkel 加入了 as3 port 。\n\n"},function(e,n,t){"use strict";t.r(n),n.default='<img src="http://31.media.tumblr.com/tumblr_l141hjDjwj1qag1m9o1_400.jpg"/>\n\n當年 j 跟我說：「Do your best!」到現在我還是沒法在玩樂和專業上都做到 best 。怎麼看都只是個心思不定愛打電動的死小鬼罷了。\n\n'},function(e,n,t){"use strict";t.r(n),n.default="[Are there any famous one-man-army programmers?](http://stackoverflow.com/questions/529757/are-there-any-famous-one-man-army-programmers)\n\n今天在 stackoverflow.com爬到有人問有哪些知名的孤狼 programmer（one man armyXD），每個回答都簡短有力：\n\n  * John Carmack： id 之神。\n\n  * Donald E. Knuth：演算法之神，自己寫了 TeX （還是先寫在紙上！）。\n\n  * Steve Wozniak：Apple的天才，下面回應說早期還自己設計硬體。\n\n  * Richard M. Stallman：開放原始碼教主，自己開始了 emacs 跟 gcc 。\n\n  * Linus Torvalds： Linux 之祖，也有人說他的成功是因為 GPL 。\n\n  * Chris Sawyer：全用組語寫了 RollerCoaster Tycoon ！\n\n  * Bill Joy： vi ，請幫助烏干達的可憐孩童。\n\n  * Guido van Rossum： Python 。\n\n  * Ada Lovelace： Babbage 的好朋友，拜倫之女。話說回來，那個年代的算嗎？\n\n  * Chuck Moore： Forth 作者。\n\nSid Meier也被提到 XD\n\n如果要說台灣的話，唐鳳、 jserv等強大的前輩也算吧 XD\n\n"},function(e,n,t){"use strict";t.r(n),n.default='<iframe\n  width="400" height="225"\n  frameborder="0"\n  allowfullscreen\n  src="http://www.youtube.com/embed/T0D4avXwMmM?wmode=transparent&autohide=1&egm=0&hd=1&iv_load_policy=3&modestbranding=1&rel=0&showinfo=0&showsearch=0"\n></iframe>\n\n可以用什麼樣的技術作這樣的東西呢？怎麼樣的編輯器能幫助編輯跟設計師做出他們想要的效果而不用非得跟程式設計師配合？總不會以後只有「多媒體設計師」才能作這樣的東西吧 XD\n\n'},function(e,n,t){"use strict";t.r(n),n.default='參考資料： [BARCODE ISLAND](http://www.barcodeisland.com/)\n\nzxing支援的條碼：\n\n<dl>\n  <dt>UPC-A</dt>\n  <dd>12 碼，第 1 碼有其意義（區分產品種類或保留給倉儲用）。最後 1 碼是檢查碼。</dd>\n  <dt>UPC-E</dt>\n  <dd>6 碼，可由 UPC-A 壓縮得來。最後 1 位是檢查碼。</dd>\n  <dt>EAN-8</dt>\n  <dd>8 碼，前 2~3 碼是 GS1 表國家，接著 4~5 碼是產品，最後 1 碼是檢查碼。</dd>\n  <dt>EAN-13</dt>\n  <dd>13 碼，前 2~3 碼使用 GS1 prefix 表示國家，接著 4~6 碼表示公司，再來 2~6 碼表產品，最後一碼是檢查碼。如果第一位是 0 ，或是不寫，那跟 UPC 相容。另外解碼時第一位也決定了左半部 6 為的編碼方式。</dd>\n  <dt>Code 39</dt>\n  <dd>編碼了 A~Z 數字等 44 個字母，可藉由符號與字母組合編碼整個 ASCII code 。</dd>\n  <dt>Code 128</dt>\n  <dd>編碼了整個 ASCII code 。</dd>\n  <dt>QR Code</dt>\n  <dd>二維條碼。</dd>\n  <dt>ITF</dt>\n  <dd>14 碼，GS1 自己為了表示 GTIN 實作的條碼。</dd>\n  <dt style="color:red;">RSS-14</dt>\n  <dd>現在為了跟網頁上用的 RSS 區別，改叫 GS1 DataBar 。</dd>\n  <dt>Data Matrix</dt>\n  <dd>二維條碼。</dd>\n  <dt style="color:red;">PDF 417</dt>\n  <dd>二維條碼。</dd>\n</dl>\n\n'},function(e,n,t){"use strict";t.r(n),n.default="[研究：螳螂蝦具第四種視覺系統](http://only-perception.blogspot.com/2008/03/blog-post_28.html)\n\n"},function(e,n,t){"use strict";t.r(n),n.default="[不存在的顏色](http://pyridine.wordpress.com/2010/03/17/%E4%B8%8D%E5%AD%98%E5%9C%A8%E7%9A%84%E9%A1%8F%E8%89%B2/)\n\n---\n\nUpdate: [pyridine](https://web.archive.org/web/20100204035546/http://pyridine.wordpress.com/) 已經不存在了，請至 [Medium](https://medium.com/@hsinhao) 尋找他的蹤跡。\n\n"},function(e,n,t){"use strict";t.r(n),n.default="> A delightful mix of laziness and incompetence.\n>\n> An anecdote I heard one time in regards to version control:\n>\n> A younger programmer asked an elder about his code and his coding style, and how the older programmer would do certain things. The older programmer said &#8216;Let&#8217;s take a look at your code&#8217;, so the younger took out his laptop, opened his editor, and showed him.\n>\n> The older programmer looked at the code, thought about it for a bit, and then started editing it. He deleted the class internals, leaving only the structure, and then rearranged the structure, saying &#8216;Here&#8217;s how I would do it to make it more efficient and readable&#8217;. After he was done, he saved the file and gave it back to the younger programmer, who was ashen-faced.\n>\n> 'That&#8230; My code is gone!' said the younger programmer. 'But you have it in version control somewhere, right?' asked the elder. 'N&#8230;. no.' was the reply. 'Well then,' said the older, 'now you've learned two lessons.'\n\n&#8212;Dan Udey\n\n"},function(e,n,t){"use strict";t.r(n),n.default="[Is 4-5 years the “Midlife Crisis” for a programming career?](http://stackoverflow.com/questions/1685985/is-4-5-years-the-midlife-crisis-for-a-programming-career)\n\n在 stackoverflow 上看到 Jeffrey 從他四年的 C# 程式設計師經驗中觀察到，他做的工作似乎都先要求東西的量而不是質。另外他看到所謂的「高級程式設計師」，「高級」多半是因為待得久而不是比較長進。於是身為一個自學的程式設計師，他質疑他該怎麼樣繼續走下去。\n\n打勾勾的回文很讚， Eric Lloyd 在這行幹了二十一年，他點出以軟體為收益來源的公司跟以其他東西為收益來源的公司本質上的差異。以軟體為主的公司，不可能不注重開發軟體的方法論。但是以其他東西為主的公司，就算把軟體包給專業的人做，也會試著箝制產品的走向。  \n一個小組中至少得有一兩個神人，這樣才有人能教育或是刷掉新人。不然爛 code 就會散佈，慢慢地變得無法維護，浪費大家的時間。直到有人重新發明輪子，並希望這次一切會不一樣。但是新人還是沒有長大，未來這些會再發生。\n\n要怎麼分出這兩類公司呢？我覺得可以看公司的產品需不需要累積過去的 code 。要是一家公司的產品只需要一兩個人在幾個月內搞出來，那開發方法不見得那麼重要。如果產品是數百個人年累積出來的，那丟掉重作肯定是個笨點子，自然會建立一些方法確保產品可以重用。另外我覺得產品的生命週期短，有常常改進的需求也會促使公司採用某種方法論。一個十年前做出來的產品今天還在用，那只要確定舊東西會動就好，寫新產品不是重點所在。\n\n"},function(e,n,t){"use strict";t.r(n),n.default='> Software is Knowledge Representation.\n>\n> Your choice of Paradigm or Model or Approach or Style is based on the answer to the following question:\n>\n> "How Can I Best Represent This Problem?"\n>\n> If the problem has objects and relationships, OO. If the problem has algorithms and transformations, maps, filters and reduces, Functional. If the problem is dynamic, changing and flexible, Dynamic. If the problem is static and will scale up rapidly, Static.\n\n&#8212;S. Lott\n\n'},function(e,n,t){"use strict";t.r(n),n.default="[iPhone開發技巧(5) 找到先前版本的 iPhone SDK 與 Xcode](http://samsharehome.blogspot.com/2010/04/iphone5-iphone-sdk-xcode.html)\n\n阿懋暫時只能用 3.1.4 。\n\n"},function(e,n,t){"use strict";t.r(n),n.default='<iframe\n  width="400" height="299"\n  frameborder="0"\n  allowfullscreen\n  src="http://www.youtube.com/embed/JfIgzSoTMOs?wmode=transparent&autohide=1&egm=0&hd=1&iv_load_policy=3&modestbranding=1&rel=0&showinfo=0&showsearch=0"\n></iframe>\n\nDouglas Engelbart 那著名的 demo ，在影片中它展示了滑鼠、文字編輯、視訊發表，跟電腦擴展人類心智的可能性。在 YouTube 上面，影片被切成九段。真的很長，看點擊數就可以發現慕名看第一段的人很多，好好全部看完的人不多 XD\n\n'},function(e,n,t){"use strict";t.r(n),n.default='<img src="http://www.tumblr.com/photo/1280/caasi/818027831/1/tumblr_kx5ccg7ZDo1qalp9r"/>\n\n(via [jotarun](http://jotarun.tumblr.com/))\n\n"What do you mean "impossible"? You&#8217;re so cruel, Roger Smith, you&#8217;re so cruel&#8230;"\n\n順便回憶一下那在台南的一年多，曾經迷著 Big-O、奈須きのこ，搞不清楚自己方向，不懂社會怎麼運作的鬼混日子。\n\n'},function(e,n,t){"use strict";t.r(n),n.default='<iframe\n  width="400" height="299"\n  frameborder="0"\n  allowfullscreen\n  src="http://www.youtube.com/embed/LGkkyKZVzug?wmode=transparent&autohide=1&egm=0&hd=1&iv_load_policy=3&modestbranding=1&rel=0&showinfo=0&showsearch=0"\n></iframe>\n\n另外一個瘋狂的 minecraft影片： 16-bit ALU 。\n\n'},function(e,n,t){"use strict";t.r(n),n.default='<iframe\n  width="400" height="225"\n  src="http://www.youtube.com/embed/kn2-d5a3r94?wmode=transparent&autohide=1&egm=0&hd=1&iv_load_policy=3&modestbranding=1&rel=0&showinfo=0&showsearch=0"\n  frameborder="0"\n  allowfullscreen\n></iframe>\n\n等比例的企業號骨架，偉哉。\n\n'},function(e,n,t){"use strict";t.r(n),n.default="[《軟體構築美學》譯者對書的介紹](http://huan-lin.blogspot.com/2010/10/brownfield-app-dev-published.html)\n\n相見恨晚啊，在當兵前就出了。\n\n"},function(e,n,t){"use strict";t.r(n),n.default="[Game Development - Stack Exchange](http://gamedev.stackexchange.com/)\n\n"},function(e,n,t){"use strict";t.r(n),n.default="[d.CAT - the RIA blog](http://ria.richtechmedia.com/)\n\n幾年前瘋 Flash 時常看的 blog ，去年短暫復活了一陣子。那時覺得 RIA 很屌，現在則對開發實務比較有興趣，對技術潮流反而不那麼興奮。\n\n---\n\n三年後 caasih 這個笨蛋還是跳進了 React 的坑... XD\n\n"},function(e,n,t){"use strict";t.r(n),n.default="[Pushing the Limits of Windows: Physical Memory](http://blogs.technet.com/b/markrussinovich/archive/2008/07/21/3092070.aspx)\n\n想起消失已久的斌斌小站。\n\n"},function(e,n,t){"use strict";t.r(n),n.default="[C 語言之修煉與實踐](http://blog.udn.com/chungchia/3340497)\n\n簡記一下，對 C 還是有怨念，還記得學別人寫 ACM UVa 的大學時光。\n\n"},function(e,n,t){"use strict";t.r(n),n.default="[Elecrto Server 5](http://www.electrotank.com/es5.html)\n\n"},function(e,n,t){"use strict";t.r(n),n.default="[IdeaPaint](http://8jliving.com/node/4371)\n\n我的公司（並不存在...）要用這個！\n\n"},function(e,n,t){"use strict";t.r(n),n.default="[List of Flash Gaming Engines](http://www.flashrealtime.com/flash-game-library-engine-list/)\n\n留個對 Flixel 還有 FlashPunk 的印象。\n\n"},function(e,n,t){"use strict";t.r(n),n.default="[ActionScript 多人互動遊戲與虛擬世界製作](http://www.tenlong.com.tw/items/9862570342?item_id=49188)\n\n順便記一下，天瓏換了新網站。\n\n"},function(e,n,t){"use strict";t.r(n),n.default="[其實台灣不只做不出百萬銷量的iOS遊戲](http://plamc.pixnet.net/blog/post/28158567)\n\n那時要收假，不然應該是要對這篇文章還有半路前輩的文章做出一點評論的。\n\n我覺得，真的有心想做 iOS遊戲的人，從一開始就不會把眼光侷限在華文市場。再來，想做自己遊戲的開發者，上頭根本不會有老闆。承上，想做自己遊戲的人，也不會去抄別人的遊戲，最多就是受到啟發。  \n另外，有能力有想法的開發者，不可能不注意細節，不管是畫面上操作的回饋還是介面用起來的感覺都好。\n\n所以我相信台灣那麼多強者，總有一天會有個傢伙做出百萬銷量的遊戲的。\n\n"},function(e,n,t){"use strict";t.r(n),n.default="[獨立遊戲製作的驕傲，革命性的作品，Minecraft](http://lightonelove.pixnet.net/blog/post/33909405)\n\n"},function(e,n,t){"use strict";t.r(n),n.default="我很懶，當了兵就幾乎沒在 coding 。\n\n警覺到這點的自己，有天在網路上查了查現在華文 Indie Games 的發展。\n\n先來看看兩個網站：\n\n  * [獨立星球（Indepla）](http://www.indepla.net/)\n\n  * [獨立星球（MyOnlyStar）](http://www.myonlystar.com/)\n\n兩個站都叫獨立星球，我不知道背後有沒有關係，但是很明顯是兩個不同的站。可能前者是指獨立遊戲的星球，後者則是延自某個遊戲強者的 id 。\n\nIndepla 讓我驚訝的是，已經有像是 TIGSource 那樣的討論區，而且也有厲害的強者在裡面開 project 子版做遊戲。而 MyOnlyStar 看得出來蒐集新聞不遺餘力。\n\n相較之下，某個快要荒廢的討論區請振作啊。另外我還要在這邊對半路前輩喊話：「除了想看你的文章外，也想看到你新的遊戲作品！」\n\n我猜台灣還是有很多地方有強大的開發者正在做自己想做的遊戲，只是現在，如果說我這懶人想找個可以駐足的地方的話，選擇的可能是對岸的論壇而不是自己的故鄉。\n\n不喜歡這樣。\n\n"},function(e,n,t){"use strict";t.r(n),n.default="[adeathjohn 的頻道](http://www.youtube.com/user/adeathjohn) 值得注意這個 john!\n\n他的新作 Cwhistle 不管是標題畫面還是遊戲本身很有感覺，  \n希望能看到他完成這個 project 。\n\n"},function(e,n,t){"use strict";t.r(n),n.default="[世界臉](http://www.worldfaceblog.com/)\n\n不是很好讀就是了\n\n"},function(e,n,t){"use strict";t.r(n),n.default="[TrntH](http://trnth.blogspot.com/)\n\ncwhistle 作者的 blog ，文章中也有 cwhistle 的 demo 可以下載。\n\n"},function(e,n,t){"use strict";t.r(n),n.default="[Fetris: A Tetris Clone](http://megaswf.com/serve/1098928)\n\n目前的進度。\n\nkerrot 建議下一個出來前至少要多幾個 tick 。接著還有很多細節要弄，計分板也還沒出來 XD\n\n"},function(e,n,t){"use strict";t.r(n),n.default="[Air Pressure](http://bentosmile.com/gameslist/air-pressure/)\n\n最後一刻才在 Indepla 看到介紹 XD  \n似乎是個有多重結局的遊戲  \n需要一些英文能力\n\n"},function(e,n,t){"use strict";t.r(n),n.default="[陳星漢](http://www.jenovachen.com/)\n\n很久以前玩過他的雲(Cloud), 沒機會玩花(Flower), 沒想到他有在 Maxis 做過。\n\n---\n\n結果 2017 年， [Flower 上了 App Store][Flower] 。\n\n還發表新作：[《光遇》][Sky]。\n\n[Flower]: https://itunes.apple.com/us/app/flower/id1279174518\n[Sky]: https://sky.163.com/\n\n"},function(e,n,t){"use strict";t.r(n),n.default="[Prototype JavaScript framework](http://www.prototypejs.org/)\n\n在某個獨立網路中，我唯一可用的 Javascript framework。\n\n"},function(e,n,t){"use strict";t.r(n),n.default="[Cloud9 IDE](http://c9.io/)\n\n因它意外發現 node.js ，看來雖然短期只能在雲端 coding ，但是能做的事情還是很多。\n\n"},function(e,n,t){"use strict";t.r(n),n.default="[DIVE INTO HTML5](http://diveintohtml5.org/)\n\n"},function(e,n,t){"use strict";t.r(n),n.default="[Eddy紫 试玩版v0.60](http://bbs.indepla.net/forum.php?mod=viewthread&tid=1959&fromuid=656)\n\n短評一下 Eddy紫。\n\n我喜歡：\n\n  * 非戰鬥時的對話系統\n\n  * 深紫這顆球\n\n倒是教學如果能更互動些就更好了，現在有些教學是刻在背景上的，另外技能的教學好像也還沒實作。另外第一個小王後變成彈幕遊戲了，不知道作者考不考慮把 Eddy 的命中區域做得小一點？再來現在還沒有射擊遊戲的爽快感 XD\n\n剛玩時我就想到經典的射擊遊戲 Abuse 或是最近的 Capsized 。\n\n技術方面，我覺得粒子系統跟濾鏡可以讓整個遊戲的質感大大向上提升，可是像粒子系統，連我自己都還沒有好好寫過用過，實在沒什麼資格說人家 XD\n\n期待未來的版本！\n\n"},function(e,n,t){"use strict";t.r(n),n.default='[ROME - "3 DREAMS OF BLACK"](http://www.ro.me/)\n\n好吧， Google 你又嚇到我一次 XD\n\n'},function(e,n,t){"use strict";t.r(n),n.default='<a href="http://www.books.com.tw/exep/prod/booksfile.php?item=0010501401"><img src="http://24.media.tumblr.com/tumblr_llhppvJJsZ1qzb7lco1_250.jpg"/></a>\n\n[zonble](http://cocoa.zonble.net/post/5664087220):\n\n> 奮鬥吧！系統工程師SE　兩週內即可上手？SE入門 1\n>\n> 這是怎樣的書啊（歪頭）\n>\n> (via [博客來書籍館&gt;奮鬥吧！系統工程師SE　兩週內即可>上手？SE入門 1](http://www.books.com.tw/exep/prod/booksfile.php?item=0010501401))\n\n有誰不希望自己的上司是萌萌美少女呢 XD\n\n可惜主角是畢業找工作才當系統工程師，再來他們也不是純寫軟體的，暫時看不下去。（擺回書櫃）\n\n'},function(e,n,t){"use strict";t.r(n),n.default="雖然在 Cloud9 開了帳號，雖然還有想寫的東西，但是在這最後的一小時，還是不想寫程式，只想好好放鬆，好好看看文章跟影片。\n\n我不是一個很有熱情的人，可是當能寫程式的時間被限制時，焦慮跟痛苦還是不會少的。\n\n真不知道該怎麼過下去？希望十月快點到。\n\n"},function(e,n,t){"use strict";t.r(n),n.default="[Things a Computer Scientist Rarely Talks About](http://cslipublications.stanford.edu/pdf/1575863278.pdf)\n\n"},function(e,n,t){"use strict";t.r(n),n.default="[FLARToolKit](http://www.libspark.org/wiki/saqoosha/FLARToolKit/en)\n\n"},function(e,n,t){"use strict";t.r(n),n.default="[Linux UVC driver and tools](http://www.ideasonboard.org/uvc/)\n\n"},function(e,n,t){"use strict";t.r(n),n.default="[Vampire Katana 歐美 MMO 情報誌](http://vkgaming.org/blog/)\n\n因為他的介紹還有以前韋勳的推薦，我對 GW2 的印象越來越好了，觀察中。\n\n"},function(e,n,t){"use strict";t.r(n),n.default="[Hong Kong Indie Game Development Blog](http://percytse.blogspot.com/)\n\n思齊&#8230;。\n\n"},function(e,n,t){"use strict";t.r(n),n.default="[如何在 Windows 作業系統安裝 Node.js 執行環境 (Cygwin)](http://blog.miniasp.com/post/2011/02/03/Getting-Started-with-NodeJS-on-Windows-using-Cygwin.aspx)\n\n為了避開一個小問題，決定把 node.js 裝起來。\n\n"},function(e,n,t){"use strict";t.r(n),n.default="Today, I tried to build node from scratch on Cygwin.  \nI chose v0.5.9, so I can also use npm. Actually, I can't build v0.5.8 by gcc4 4.5.3-3.\n\n#### Enviroment\n\n  * Cygwin: 1.7.9-1\n\n  * devel-&gt;gcc4-g++: 4.5.3-3\n  \n  * devel-&gt;git: 1.7.5.1-1\n\n  * devel-&gt;make: 3.81-2\n  \n  * devel-&gt;pkg-config: 0.23b-10\n\n  * devel-&gt;zlib-devel: 1.2.5-1\n\n  * libs-&gt;openssl-devel: 0.9.8r-2\n\n  * net-&gt;openssl: 0.9.8r-2\n\n  * python-&gt;python: 2.6.5-2\n\nI followed [official document](https://github.com/joyent/node/wiki/Building-node.js-on-Cygwin-%28Windows%29), and edit `node/deps/uv/src/unix/cygwin.c`. Let it include `unistd.h`, and it will understand what `_SC_PAGESIZE` is.\n\nLooks like the missing including is still a problem in v0.5.10, but I am not familiar with the community.\n\nEDIT: cygwin doesn't get alone well with npm, so I have to do it again on Ubuntu D:\n\n---\n\n剛剛自己在 cygwin 上編 node ，  \n為了 npm ，用的是 v0.5.9 。另外，用 gcc4 4.5.3-3 沒辦法編 v0.5.8 。\n\n#### 環境\n\n  * Cygwin: 1.7.9-1\n\n  * devel-&gt;gcc4-g++: 4.5.3-3\n  \n  * devel-&gt;git: 1.7.5.1-1\n\n  * devel-&gt;make: 3.81-2\n  \n  * devel-&gt;pkg-config: 0.23b-10\n\n  * devel-&gt;zlib-devel: 1.2.5-1\n\n  * libs-&gt;openssl-devel: 0.9.8r-2\n\n  * net-&gt;openssl: 0.9.8r-2\n\n  * python-&gt;python: 2.6.5-2\n\n參考 [官方安裝文件](https://github.com/joyent/node/wiki/Building-node.js-on-Cygwin-%28Windows%29)，還得對 `node/deps/uv/src/unix/cygwin.c` 做點修改，補上忘了 include 的 `unistd.h` ，不然老是說 `_SC_PAGESIZE` 未定義。\n\n在 v0.5.10 版中，那個 include 還是沒加進去，但是我既害羞又不瞭解 git 社群，還是先觀望什麼都別說吧。\n\nEDIT: cygwin 跟 npm 處不來，所以我投向 Ubuntu 的懷抱了 D:\n\n"},function(e,n,t){"use strict";t.r(n),n.default="[獨立遊戲競賽贊助](http://www.archilife.org/contest_sponsor/)\n\n"},function(e,n,t){"use strict";t.r(n),n.default="今天又被女友做了簡短的人生商談。\n\n想了想，其實核心跟主題很簡單：世界。  \n所以好玩的 open world 遊戲都很吸引我。\n\n有興趣的題材：\n\n  * Steering Behavior\n\n  * Real-Time Cloud Rendering\n\n  * Ambient Occlusion\n\n  * Design Patterns\n\n另外還有些是因為生活上會用到而感興趣的題材：\n\n  * Unicode Console\n\n  * Input Method\n\n  * CJKV\n\n  * BBS\n\n但也僅止於有興趣罷了，這是個大問題。\n\n"},function(e,n,t){"use strict";t.r(n),n.default="另外幾個想法：\n\n  * 和巴貝奇（Charles Babbage）交換生命最後幾天的遊戲\n\n  * 一個視覺化的 brainfuck 直譯器\n\n"},function(e,n,t){"use strict";t.r(n),n.default='[ECMA-262](http://dmitrysoshnikov.com/)\n\n為什麼人家可以有一堂叫做 "Essentials of interpretation" 的課 XD\n\n'},function(e,n,t){"use strict";t.r(n),n.default="[JSMentors 關於 Dmitry A. Soshnikov 的介紹](http://jsmentors.com/Dmitry-A-Soshnikov.html)\n\n"},function(e,n,t){"use strict";t.r(n),n.default="[p01](http://www.p01.org/)\n\n"},function(e,n,t){"use strict";t.r(n),n.default="[Android Design](http://developer.android.com/design/)\n\n"},function(e,n,t){"use strict";t.r(n),n.default="[The Word of Notch: Coding skill and the decline of stagnation](http://notch.tumblr.com/post/15782716917/coding-skill-and-the-decline-of-stagnation)\n\n[notch](http://notch.tumblr.com/post/15782716917/coding-skill-and-the-decline-of-stagnation):\n\n> The more I learn, the more I realize how little I know.\n\nI hope some day I can call myself a game programmer.\n\nThe interesting part is that the more platform I work with, the more things I learned. Different languages and different paradigms open up my mind.\n\n"},function(e,n,t){"use strict";t.r(n),n.default="[From NeXTSTEP to Cocoa: Erik Buck on the Development of Cocoa and Objective-C](http://www.informit.com/articles/article.aspx?p=1353402)\n\nWhat are asynchronous graphics?\n\n"},function(e,n,t){"use strict";t.r(n),n.default="去年中開始看 Douglas Crockford 的 &#8220;JavaScript: The Good Parts&#8221;，才知道 JavaScript 這幾年不是無緣無故翻身。而 prototype-based OOP 與 class-based OOP 的比較，讓我對 OOP 有了不同的認識。\n\n先看看 prototype 繼承的用法， Crockford 的[作法](http://javascript.crockford.com/prototypal.html)是：\n\n```javascript\nfunction beget(o) {\n  function F() {};\n  F.prototype = o;\n  return new F();\n}\n```\n\n之所以不能簡單的先隨便弄個新的 instance `n` 再讓 `n.prototype = o` ，是因為 ECMAScript 不云許隨便抽換 instance 的 prototype ，真正的 prototype 是存在一個內部變數， Dmitry Soshnikov 稱它為 `[[prototype]]` ， FireFox 的 SpiderMonkey 有個非標準的變數 `__proto__` 就是讓這個 `[[prototype]]` 可以被存取。\n\n牛人 Dmitry Soshnikov 在介紹到繼承時的[範例](http://dmitrysoshnikov.com/ecmascript/chapter-7-2-oop-ecmascript-implementation/#prototype-chain)是：\n\n```javascript\nvar inherit = (function(){\n  function F() {}\n  return function (child, parent) {\n    F.prototype = parent.prototype;\n    child.prototype = new F;\n    child.prototype.constructor = child;\n    child.superproto = parent.prototype;\n    return child;\n  };\n})();\n```\n\n之所以都要有個放在 closure 裡面的 F ，是為了避免直接用到 parent 的 constructor 。\n\n悲劇的是以前寫 AS2 時， AS2 包裝 class inheritance 的方法沒那麼好，結果無法控制 parent class 第一次初始化的時間，我的 class constructor 就在意料外的時候執行。\n\nJavaScript 的[ prototype-based 跟 class-based 不衝突](http://javascript.crockford.com/inheritance.html)很讚，而我不想，也沒能力跳到動態與靜態語言之爭。另我好奇的是，如果 OO 的重點不在於怎麼繼承而在於 reuse 的話，那種方法並不重要不是嗎？這樣要是有個專注在 reuse 上面的語言，會長什麼樣子呢？\n\n大牛 jserv 曾寫過[以 C 語言實做 Javascript 的 prototype 特性](http://blog.linux.org.tw/~jserv/archives/002057.html)這樣酷的文章，可見 C 要用 prototype 或 class 來 reuse 都可行，要是能把細節藏起來提供 syntax sugar 或是有好的 IDE 就更棒了。\n\n另外一方面，從這個角度重看[ c2.com整理的 OO定義](http://c2.com/cgi/wiki?AlanKaysDefinitionOfObjectOriented)，可以簡化為：\n\n  1. 一切皆為物件\n  2. 物件有自己的記憶體，可以包含別的物件\n  3. 物件藉由傳遞訊息來溝通，溝通的目的是為了要求別的物件作些事\n  4. 物件可以把訊息委派給其他物件\n\n所以我們有機會擁有更簡潔但是一樣強大的語言對吧？對吧？（興奮）不知道會是什麼樣的語言？搞不好已經有了但是我不知道 XDD\n\n"},function(e,n,t){"use strict";t.r(n),n.default="[Cocoa Design Patterns Errata > creating the singleton does not work](http://www.cocoadesignpatterns.com/errata/post/1403235)\n\n跟 Objective-C 還有 Cocoa 很不熟， Cocoa Design Patterns 還真是開了我的眼界。\n\n可是 Singleton 的 code 不能用了。\n\n原來是因為 `[super alloc]` 會叫到 `[self allocWithZone:]` 。文中提到的辦法是改叫 `[super allocWithZone:nil]` 來閃過，總覺得不是那麼直觀，不過也只好將就用用先。\n\nP.s. 還好沒看中文版，那句 One pattern to rule them all 的味道沒了 XD 。\n\n"},function(e,n,t){"use strict";t.r(n),n.default="> **viewDidLoad**\n>\n> &#8230;This method is called regardless of whether the view hierarchy was loaded from a nib file or created programmatically in the loadView method&#8230;.\n\n&#8212;Scumbag UIViewController Class Reference\n\n"},function(e,n,t){"use strict";t.r(n),n.default='**Updated.**\n\n```javascript\nvar f = function() {\n    var __kind = "O";\n\n    return function(name) {\n        // private things here\n        var _vars = {};\n        _vars["kind"] = function() {\n            return __kind;\n        };\n        _vars["name"] = name || "anonymous";\n        \n        // then return a new instance\n        // this should be hide by rewriting\n        return {\n            get: function(key) {\n                return _vars[key];\n            },\n            set: function(key, value) {\n                _vars[key] = value;\n            }\n        };\n    };\n};\n\n// first () create a closure with internal vars\n// second () create an instance\n// well, it also looks like "OO"\nvar o = f()();\n\n// or in this way\nvar cls = f();\nvar p = cls("sam");\n\no["set"]("x", 10);\np["set"]("x", 20);\nconsole.log("o.name: " + o["get"]("name"));\nconsole.log("o.kind(): " + o["get"]("kind")());\nconsole.log("o.x: " + o["get"]("x"));\nconsole.log("p.name: " + p["get"]("name"));\nconsole.log("p.kind(): " + p["get"]("kind")());\nconsole.log("p.x: " + p["get"]("x"));\n\n// attention: no . notation so far\n```\n\nWhat will it looks like after rewrite.\n\n```javascript\nf = () {\n    return (name) {\n        @@kind = "O";\n        @kind = () {\n            return __kind;\n        };\n        @name = name || "anonymous";\n        return $;\n    };\n};\n\no = f()();\n\ncls = f();\np = cls();\n\no.x = 10;\np.x = 20;\nlog("o.kind(): " + o.kind());\nlog("o.x: " + o.x);\nlog("p.kind(): " + p.kind());\nlog("p.x: " + p.x);\n```\n\n'},function(e,n,t){"use strict";t.r(n),n.default='```javascript\nvar Normal = function() {\n    //initialize here\n    this.x = 1;\n    this.y = 2;\n};\n\nvar Singleton = function() {\n    var shared = function() {\n        //initialize here\n        this.x = 10;\n        this.y = 20;\n    };\n    \n    shared.meow = function() {\n        console.log("meow!");\n    };\n\n    return function() {\n        return shared;\n    };\n}();\n\n/* show time! */\n\nvar a0 = new Normal();\nvar a1 = new Normal();\n\na0.x = 0;\n\nconsole.log(a0 == a1); // false\nconsole.log(a0.x); // 0\nconsole.log(a1.x); // 1\n\nvar b0 = new Singleton();\nvar b1 = new Singleton();\n\nb0.x = 15;\nb0.meow(); // meow!\n\nconsole.log(b0 == b1); // true\nconsole.log(b0.x); // 15\nconsole.log(b1.x); // 15\n```\n\nI think this is much clear than [this one](http://stackoverflow.com/questions/1479319/simplest-cleanest-way-to-implement-singleton-in-javascript), but THE reputation system on stackoverflow prevents me from answering it :D\n\nThe key of this code is that JavaScript&#8217;s construct will return an object instead of a new instance if it return any kind of object! Such a strange language!\n\nWith delegate/proxy, we can reuse without class, with closure, we can accomplish encapsulation without keywords, what&#8217;s more?\n\n'},function(e,n,t){"use strict";t.r(n),n.default="```\n# Turn off the startup message.\nstartup_message off\n\n# Hardstatus\nhardstatus alwayslastline\nhardstatus string '%{= .W}[ %H ][%=%?  %-W%?%{= .r}  * %t%{= .W}%+w%=]'\n\n# New screens\nscreen -t run 1 bash\nscreen -t main 0 bash\n```\n\n"},function(e,n,t){"use strict";t.r(n),n.default="```\nset -g utf8 on\nsetw -g utf8 on\nsetw -g mode-keys vi\n\n# status bar\nset status on\nset -g status-bg default\nset -g status-fg colour33\nset -g status-justify centre\nset -g status-left '[ #H ]'\nset -g status-left-length 20\nset -g status-right '[ %H:%M %D ]'\n\n# window title\nsetw -g window-status-fg colour24\n\n# current window\nsetw -g window-status-current-fg colour51\n\n# powered by tmux the book\nset -g prefix C-a \nunbind C-b \nset -sg escape-time 1\nset -g base-index 1\nsetw -g pane-base-index 1\nbind r source-file ~/.tmux.conf \\; display \"config reloaded\"\nbind \\ split-window -h\nbind - split-window -v\nbind h select-pane -L\nbind j select-pane -D\nbind k select-pane -U\nbind l select-pane -R\nbind -r C-h select-window -t :-\nbind -r C-l select-window -t :+\nbind -r H resize-pane -L 5\nbind -r J resize-pane -D 5\nbind -r K resize-pane -U 5\nbind -r L resize-pane -R 5\n```\n\nToo bad I have to compute colors manually.\n\n"},function(e,n,t){"use strict";t.r(n),n.default="跟 `UITableView` 很不熟，也處得很不好。\n\n最麻煩的是，如果要動態改變 `UITableViewCell` 的高度，得經由 `TableView` 的 `-beginUpdates` 讓它自己去問 `-tableView:heightForRowAtIndexPath:` ，而且在其中無法取得現在正在用的 `UITableViewCell` ，於是只好先把高度，或是有沒有被選起來，存在別的地方，而不是跟 `UITableViewCell` 放在一起。\n\n更糟的是 `-tableView:heightForRowAtIndexPath:` 有效率問題。可是 `UITableView` 是呈現資料最方便的 View ，自然希望它更方便做各種變化。\n\n要怎樣跟他變成好朋友？\n\n"},function(e,n,t){"use strict";t.r(n),n.default="試了試嵌入 gist ，可惜若要 highlight 得漂亮，還得下很多功夫。\n\n附上簡單的 style ：\n\n```css\n.gist{\n  margin: 15px 0 !important;\n}\n\n.gist-file{\n  border: none !important;\n}\n\n.gist-meta{\n  background-color: #1D1D1D !important;\n  font-size: 8pt !important;\n  padding: 8px !important;\n  border-top: 1px solid #444 !important;\n  border-bottom: 1px solid #000 !important;\n  -moz-border-radius-bottomleft: 10px;\n  -webkit-border-bottom-left-radius: 10px;\n  -moz-border-radius-bottomright: 10px;\n  -webkit-border-bottom-right-radius: 10px;\n}\n\n.gist-data{\n  background-color: #E0E0E0 !important;\n  padding: 8px !important;\n  border: none !important;\n  -moz-border-radius-topleft: 10px;\n  -webkit-border-top-left-radius: 10px;\n  -moz-border-radius-topright: 10px;\n  -webkit-border-top-right-radius: 10px;\n  -webkit-box-shadow:inset 0 0 10px #999;\n  -moz-box-shadow:inset 0 0 10px #999;\n  box-shadow:inset 0 0 10px #999;\n}\n```\n\n"},function(e,n,t){"use strict";t.r(n),n.default='IGTM，一連串孤獨的故事：\n\nJon，孤獨、自我定位、認同。  \nPhil Fish，我就是作品、作品就是我、看看我、我我我我我…。  \nEdmund，疏離、習慣疏離、完成型？  \nTommy，疏離、孤獨、規律、得失心。\n\n---\n\n我很喜歡，羽海野千花的作品，不管是「蜂蜜幸運草」，還是「三月的獅子」。\n\n她告訴我，替自己的生命掌舵，就是一場孤獨的奮鬥。  \n不是發自內心想要的，就算碰到了，最後也留不住。\n\n---\n\n小時候想做什麼？現在有相對的能力了嗎？ FO 能有更好的 modding 工具嗎？希望可以跟 k 一起作遊戲，希望可以跟 D 一起作遊戲。希望可以講一個故事。希望能幫上別人的忙。\n\n---\n\n帶著熱情做出來的原型，客觀來看完成度卻不夠高，自然從外部得不到回饋。在熱情消散後剩下的是信念。\n\n---\n\n沒有人在自己盡全力的作品被批評時，不會生氣的，沒有人在自己付出全心時，不期待受到同等對待。\n\n---\n\n讀了你的心得，覺得，有時候笑不代表不認同，反而是因為能體會。也許會邊笑邊哭也不一定？越悲傷的時候越是要笑一笑的。\n\n想到要寫點關於 IGTM 的什麼，出現在心中的不是整部片，而是一種氣氛。我猜，氣氛的成因，不只是「啊，自己也曾經這樣子！」，而是知道不但現在是這樣，以後也會繼續下去。\n\n"Nothing ends, Adrian. Nothing ever ends."\n\n---\n\n看了 A 兄的心得，提到 Edmund 說「如果沒有把遊戲做好，過去的兩年就像不存在一樣」。這樣的想法真的會把人逼到絕境。\n\n當初猶豫退伍後該怎麼走時，曾經跟 D 說不管怎樣自己都要作遊戲看看。本來的想法很不成熟，認為要是做不成，那接下來就隨便做什麼都好。  \n可是他點醒我一件事：不要忽視自己的努力。就算做得不好，達不到別人的標準，但過程中得到的經驗還有半成品是自己的一部分。\n\n當哪天得告訴別人自己會做什麼，還不會做什麼，接下來想做什麼時，這些就是材料。\n\n別讓別人阻止自己做想做的事情，也別讓自己阻止自己做想做的事情。\n\n'},function(e,n,t){"use strict";t.r(n),n.default="[404 Blog Not Found](http://blog.livedoor.jp/dankogai/)\n\n有趣，部落格主人讀數學也讀 SICP之類的經典電腦書。\n\n"},function(e,n,t){"use strict";t.r(n),n.default='<iframe\n  width="400"\n  height="300"\n  frameborder="0"\n  allowfullscreen\n  src="http://www.youtube.com/embed/41U78QP8nBk?wmode=transparent&autohide=1&egm=0&hd=1&iv_load_policy=3&modestbranding=1&rel=0&showinfo=0&showsearch=0"\n></iframe>\n\n繼續讀黑客列傳…\n\n'},function(e,n,t){"use strict";t.r(n),n.default="[Badass JavaScript](http://badassjs.com/)\n\n"},function(e,n,t){"use strict";t.r(n),n.default="[契丹文](http://zh.wikipedia.org/wiki/%E5%A5%91%E4%B8%B9%E6%96%87)\n\n"},function(e,n,t){"use strict";t.r(n),n.default="[A Parametric Texture Model Based on Joint Statistics of Complex Wavelet Coefficients](https://redwood.berkeley.edu/bruno/public/papers/portilla99-reprint.pdf)\n\n"},function(e,n,t){"use strict";t.r(n),n.default="[[Steam] Implement GLSL 1.30 (for older chipsets than SandyBridge)](https://bugs.freedesktop.org/show_bug.cgi?id=59187)\n\nIntel Gen4 顯卡很鳥蛋已經不是新聞了。之前在低階 Mac mini 上跑 Frespace 2 就遇過編譯 GLSL 出狀況，沒想到現在裝 Steam for Linux 又遇到一次。\n\n循線一路查，才知道現在 Intel [有地方](https://01.org/linuxgraphics/)專門處理 open source driver 。問題出在 Intel Gen4 顯卡驅動只支援到 GLSL 1.20 ，而 source engine 需要一些 GLSL 1.30 的功能。\n\n另外此 issue 的討論也[點出](https://bugs.freedesktop.org/show_bug.cgi?id=59187#c8)， Intel 舊顯卡有個硬體上的問題，需要靠軟體來補足。\n\n高興的是，這問題一直到昨天（ 25 號），都有人關心，也許能看到修正的一天也說不定。\n\nEDIT: 原 issue 標題改了。\n\n"},function(e,n,t){"use strict";t.r(n),n.default="> 他們把c/c++變成LLVM ir -> JS\n>\n> W.T.F\n>\n> 他們想從這種行為中表達什麼主張嗎orz\n>\n> 比起技術發展我覺得這比較像現代行動藝術阿\n>\n> 表達對既有概念的反思與抗拒還有貼近人類思考的社會關懷\n>\n> 他們從計算量無限 傳輸頻寬無限 記憶體無限的世界中降臨\n>\n> 展示予有現的人類 他們無限的存在是如何做計算的\n\n— lunadance\n"},function(e,n,t){"use strict";t.r(n),n.default="[Learn You a Haskell for Great Good!](http://learnyouahaskell.com/)\n\nmust...read...this book...\n\n"},function(e,n,t){"use strict";t.r(n),n.default="[Intersections of a Set of Segments](http://geomalgorithms.com/a09-_intersect-3.html)\n\n待讀的線段相交入門文章。\n"},function(e,n,t){"use strict";t.r(n),n.default="[The Western Computer and the Chinese Character: Recent Debates on Chinese Writing Reform](http://www.uri.edu/iaics/content/2002v11n3/06%20Changfu%20Chang%20&%20Yihai%20Chen.pdf)\n"},function(e,n,t){"use strict";t.r(n),n.default="[Entropy , Compression, and Information Content](http://www.isi.edu/~vfossum/entropy.pdf)\n"},function(e,n,t){"use strict";t.r(n),n.default="[Pioneering Images](http://www.chilton-computing.org.uk/inf/literature/reports/p001.htm)\n"},function(e,n,t){"use strict";t.r(n),n.default="[[討論] 易用與安全 - Soft_Job板 - Disp BBS](http://disp.cc/b/575-5bHO)\n\n待讀XD\n"},function(e,n,t){"use strict";t.r(n),n.default="[HTML5 for ActionScript 3.0 developers – Session video | TypedArray.org](http://typedarray.org/html5-for-actionscript-3-0-developers-session-video/)\n"},function(e,n,t){"use strict";t.r(n),n.default="[msxml - How to make Microsoft XmlHttpRequest honor cache control directive - Stack Overflow](http://stackoverflow.com/questions/5235464/how-to-make-microsoft-xmlhttprequest-honor-cache-control-directive)\n\n備參考，真的多看看別人在做啥才能知道自己能做啥。\n"},function(e,n,t){"use strict";t.r(n),n.default="[專訪：華裔數學家張益唐 張益唐破解數學世紀難題](http://www.storm.mg/article/38770)\n\n本來的連結掛了，換一篇。\n"},function(e,n,t){"use strict";t.r(n),n.default="[YouCompleteMe - A code-completion engine for Vim](https://github.com/Valloric/YouCompleteMe)\n"},function(e,n,t){"use strict";t.r(n),n.default='[RobotLovesKitty: Legend of Dungeon - Dynamic Lighting on Sprites](http://robotloveskitty.tumblr.com/post/33164532086/legend-of-dungeon-dynamic-lighting-on-sprites)\n\n[robotloveskitty](http://robotloveskitty.tumblr.com/post/33164532086/legend-of-dungeon-dynamic-lighting-on-sprites):\n\n> So I’m using normal mapping on pixel art. I’m surely not the first to think it up, but I don’t know of another game thats doing this (if so please let me know :D)\n>\n> Here’s what it looks like without normal mapping:\n>\n> <img height="600" src="http://i.imgur.com/aVCSv.png" width="689"/>\n>\n> And with:\n>\n> <img height="602" src="http://i.imgur.com/FtmVQ.png" width="689"/>\n>\n> Ignore for a moment the bricks making up the level, and&#8230;\n\namazing!\n'},function(e,n,t){"use strict";t.r(n),n.default="[![](http://25.media.tumblr.com/8c25cd1a496eeed0ad7cc3ac8fe4d100/tumblr_mpbu4yHHfs1syyiijo1_250.png)](http://ilkke.blogspot.com/)\n\n[gamedevinspirations](http://gamedevinspirations.tumblr.com/post/54455757836/ever-played-mafia-it-doesnt-require-computer):\n\n> Ever played [Mafia](http://en.wikipedia.org/wiki/Mafia_(party_game)) (it doesn’t require computer)?\n"},function(e,n,t){"use strict";t.r(n),n.default="COSCUP 後好些人來到 #g0v.tw 後，和當初的自己一樣，不得其門而入，於是想簡單提一下，我是怎麼參與[零時政府](http://g0v.tw/)。\n\n## 寫在前面\n\n本來就會的事情有：\n\n* 知道 IRC ，也試著用過，但對於人少的頻道，很久會有人回應這點十分不習慣。本來只知道人多的頻道如 ##javascript 。對現在沒有機器可以掛的我來說，不知道什麼時候會錯過訊息。\n* 有 github 帳號，但是沒有和人合作過的經驗，只用來放自己的東西，而且每個 repo 該有的東西不一定完整。\n* 曾經嚮往 Google Wave 的願景，也看過、聽過「the Mother of All Demos」的故事，但是沒有真的和別人一起用過協作平台。\n\n## 一開始\n\n去過一兩次 WebMeetup ，在那邊見到了 TH Schee 、 Jedi 、還有 ETBlue ，後來從他們在 Google+ 上的文章得知 g0v ，那時應該是第零次動員戡亂黑客松，我在高雄一邊聽 KIDS2012 一邊上 IRC。\n\n默默關心到第壹次公地放領黑客松前，才跑出來說想對公報做肉眼 OCR ，那時的想法是， g0v 長輩、大神、強者太多，還是做些雜事。沒想到這個坑沒填完，還厚著臉皮賴在 g0v （遮臉）。\n\n第壹次公地放領黑客松，響應 ETBlue 的號召，參加台中場。看到大家都那麼厲害，心想也要做自己的東西，那時還在想公報 OCR 的事，於是想弄個能自己分發圖片給別人的服務。\n\n問題來了，實際做了才發現，一直以來都在打工，沒做過強度夠大的專案的自己，根本不知道怎麼做才好。 REST API 設計？怎樣才好？看別人的 API 怎麼做？我沒有實務經驗怎麼知道他為什麼那樣做比較好。 express 怎麼用？不會用！連他的設計哲學都不清楚。（雖然後來終於看了 Smashing Node.js ）\n\n加上 RealLife™ 中的一些雜事，我想自己只能承認，我沒有獨立完成一個專案的能力。\n\n中間有段時間沒注意 g0v ，沒上 IRC 。\n\n後來去了 OSDC ，除了跟 poga 會面外，一邊文字轉播給朋友聽。就在那一天，聽到了 au 大神的 [PgREST - Node.js in the Database](http://www.youtube.com/watch?v=zW69DgaMHCk) ，之前在 IRC 與 hackpad 上親眼看到[萌典](http://moedict.tw/)是在多短的時間內架起來，再聽到這演講，內心深處，有什麼又燒了起來。\n\n身為旁觀者，在外圍，只能看到東西做出來了，並不知道背後還有那麼多細節、那麼多故事。也不知道那些曾經在故事中聽過的，開源社群驚人的合作速度，到底能有多快。\n\n對我來說，這樣的親身體會，勝過千百個遙遠的故事。\n\n於是參加了第參次客廳工廠黑客松，第一次到會場，第一次在台北主場自介，第一次體會到鴨七 coding 有多快，再一次發現東西做不出來XD\n\n## 之後\n\n然後又回到了繼續掛 IRC ，看 [Logbot](http://logbot.g0v.tw) 的日子，然後知道 ETBlue 正在設計新的 LiquidFeedback 介面，知道了什麼是非直接民主，得到很多實用有趣的關鍵字。\n\n看到 lijung 被 clkao 大神感召，神速改版 g0v 網站。\n\n自己為了想做個連連看，碰了 ember.js ，踩到一堆雷，覺得 DOM 根本就是喝醉了，請快點回家。\n\n在 COSCUP 前，注意到萌典用了教育部的筆劃資料，有幸大學時讀過那資料，記得裡面有筆劃資訊，有幸用 canvas 做了出來，沒想到就被 au 收到萌典中，拿到收發了第一個 pull-request ！\n\n## 現在\n\nCOSCUP 後，加上大家受洪仲丘案影響，公民意識抬頭，人人關心不公不義的事。 g0v 受到越來越多的關注，最近大家整理的[公報](https://g0v.hackpad.com/20138--AcN0VK6tRgK)，描述了這幾天的發展。\n\n我學到了：\n\n* 不要害怕在 IRC 上講話沒人回，但看到剛來的人說話時要多多回他XD\n* 看到別人怎麼帶開源專案，自己怎麼找切入點參與專案。\n* 先求有，再求好。\n* 把別人的有變成好。\n\n現在，我知道自己的關心不能停。知道自己沒能力帶個案子，但也知道要找能切入的點，幫忙完善案子，讓它一點一點地變好。就算不知道明天會變成什麼樣子，但今天能做什麼，掌握在自己的手中！\n\n---\n\n圖樣圖森破啊 XD\n"},function(e,n,t){"use strict";t.r(n),n.default="[JavaScript’s internal character encoding: UCS-2 or UTF-16?](http://mathiasbynens.be/notes/javascript-encoding)\n"},function(e,n,t){"use strict";t.r(n),n.default="[網絡行動科技 | 從數位公益行動出發的社會企業](http://netivism.com.tw/)\n\n我真是孤陋寡聞！\n"},function(e,n,t){"use strict";t.r(n),n.default="[protobuf -   Protocol Buffers - Google's data interchange format - Google Project Hosting](http://code.google.com/p/protobuf/)\n\n也許之後用得上，不知道能不能 custom 。\n"},function(e,n,t){"use strict";t.r(n),n.default="[Holla - P2P video/voice/data](http://wearefractal.com/holla/)\n\n走的是 WebRTC 。\n"},function(e,n,t){"use strict";t.r(n),n.default="[jitsi.org | Jitsi](https://jitsi.org/)\n\n走現有通道的加密通訊軟體。\n"},function(e,n,t){"use strict";t.r(n),n.default="[acoustic_crypt](https://github.com/zeroXzero/acoustic_crypt)\n\n> acoustic_crypt - Key-stroke detection from acoustic emanations\n\n沒想到又會去找這個來看。 TODO ：實際測測準確度。\n"},function(e,n,t){"use strict";t.r(n),n.default="[[Git]ungitでGitリポジトリ状態をグラフィカル表示[Node]](http://dev.classmethod.jp/server-side/node-js-server-side/ungit/)\n\nungit 的介面看來很友善。\n"},function(e,n,t){"use strict";t.r(n),n.default="[TWFuture深音網路廣播](http://deepsound-twfuture.podomatic.com/)\n\n待聽XD\n"},function(e,n,t){"use strict";t.r(n),n.default="[メインページ - GlyphWiki](http://glyphwiki.org)\n"},function(e,n,t){"use strict";t.r(n),n.default="update:\n\n```\n[ '臺灣', '北', '飛', ' 100 ', '班機', '，', '須', '向', '陸', '提', '計畫' ]\n1.862s\n```\n\n```\n[ '臺灣', '北', '飛', '百', '班機', '須', '向', '陸', '提', '計畫' ]\n3.328\n[ { w: '臺灣北飛' },\n  { w: '百班', p: 2097152 },\n  { w: '機' },\n  { w: '，', p: 2048 },\n  { w: '須' },\n  { w: '向', p: 262144 },\n  { w: '陸提計畫' } ]\n0.008\n```\n"},function(e,n,t){"use strict";t.r(n),n.default="Use your dark magics to fight evil orcs.\n\n## controls\n\n* move: WASD/,AOE\n* wand: Q/;\n* zombie: E/.\n* skeleton: F/U\n\n## resources\n\n* HP\n* MP, recover over time\n* corpses\n* skeletons, dropped by dead enemy or as a result of casting rising dead\n\n## style\n\nhand made 8-bit time-based sprite\n"},function(e,n,t){"use strict";t.r(n),n.default='I am wondering what will you do in the same context. What make you so different?\n\nOthers like me may question subject\'s attitude and abilities. But you just make things done.\n\n```\n/**\n* parson.h and parson.c come from:\n* https://github.com/kgabis/parson\n*/\n#include <stdio.h>\n#include <assert.h>\n#include "parson.h"\n\nint main(int argc, char **argv) {\n    JSON_Value *root;\n    JSON_Array *strokes, *track;\n    JSON_Object *stroke, *point;\n    size_t i, j;\n\n    root = json_parse_file("../data/json/840c.json");\n    assert(json_value_get_type(root) == JSONArray);\n\n    strokes = json_value_get_array(root);\n    for (i = 0; i < json_array_get_count(strokes); ++i) {\n        stroke = json_array_get_object(strokes, i);\n        track = json_object_get_array(stroke, "track");\n        for (j = 0; j < json_array_get_count(track); ++j) {\n            point = json_array_get_object(track, j);\n            printf("(%lf, %lf)\\n",\n                json_object_get_number(point, "x"),\n                json_object_get_number(point, "y")\n            );\n        }\n        printf("\\n");\n    }\n\n    return 0;\n}\n```\n'},function(e,n,t){"use strict";t.r(n),n.default="在自己的 [RFC 6902 diff](https://github.com/caasi/rfc6902) 做得差不多時，才發現 @chbrown [早就做了 diff 和 patch](https://github.com/chbrown/rfc6902) 。他沒做 move ，但無傷大雅。正如他所說， RFC 6902 diff 不是決定性的。\n\n我的實作更慘，對這些例子，生不出 RFC 範例中給的 patch ：\n\n* A.2. Adding an Array Element\n* A.4. Removing an Array Element\n* A.7. Moving an Array Element\n* A.16. Adding an Array Value\n\n肇因於將 Array 跟 Object 都視為 hash 好[簡化演算法](https://github.com/caasi/rfc6902/blob/master/lib/rfc6902.ls#L3)。如果這樣做，我只需將要比較的兩個集合中所有 key 找出來，再分別取值看有沒有那一方為 undefined 就好。要是使用簡單版的 diff ，甚至只會生出 add, remove, replace 。\n\n為了吐出 move ，我得看過所有的 add ，找出有沒有值相同的 remove 。什麼？ remove 沒有留值？只好先存起來，用完再砍掉。 copy 更慘，得看過所有的值，和所有 add 比較，看有沒有一樣的。只好把值都攤平，看完再砍掉。\n\n寫得很開心，但是為了什麼？還是說其實規格默許我按自己方便生出可用的 patch 就好？一如老瀏覽器對壞掉的 HTML 很寬容。\n"},function(e,n,t){"use strict";t.r(n),n.default="學著 [angular-livescript-seed](https://github.com/clkao/angular-livescript-seed) 弄了個 [jsl-seed](https://github.com/caasi/jsl-seed/) ，拿掉了 angular.js ，並把 static files 放在根目錄下，好靠 GitHub Pages host 。\n\n如果想馬上做點東西，還是懷念那個靠著 makefile ，跑 jade, compass, lsc 的方法，但為了管理產出怎麼放，加上將來也許得加上測試， gulp 比 make 好學很多，才倒戈做了這樣的東西。希望哪天可以只管 jade, stylus, LiveScript ，或任何它們的後繼者，然後 app 就會動，不用自己處理 build 跟 concat 這些鳥事。\n"},function(e,n,t){"use strict";t.r(n),n.default="radical: [部首](http://en.wikipedia.org/wiki/Radical_%28Chinese_characters%29)\n\n為什麼叫做 moedict-webkit ？\n\ng0v/moedict.tw 的 Makefile 在 checkout 時會 gg ，肇因於 g0v/moedict-moedict-webkit 不存在。（是現在的 audreyt/moedict-webkit 嗎？）\n\n其實 [3du](https://g0v.hackpad.com/3du.tw-ZNwaun62BP4) 的資料很完整。\n\n資料：\n\n* [moedict-epub](https://github.com/g0v/moedict-epub)\n* [moedict-data](https://github.com/g0v/moedict-data)\n* [moedict-data-twblg](https://github.com/g0v/moedict-data-twblg)\n* [moedict-data-csld](https://github.com/g0v/moedict-data-csld)\n* [moedict-data-hakka](https://github.com/g0v/moedict-data-hakka)\n\n不懂 moedict-epub 是用來做什麼的？\n\nmoedict-data-twblg 還有 moedict-data-csld 的檔案比較複雜，是資料來源害的嗎？\n"},function(e,n,t){"use strict";t.r(n),n.default='c9s 前輩在 5 月 12 號開始寫一個叫做 [r3][0] ，飛快的 url router 。隨後掀起了幫 r3 寫不同語言 binding 的熱潮。到今天（ 6 月 23 日）已經有 Perl, Python, Haskell, Vala, node.js 版，甚至還有個叫做 [pathing][1] ，受 r3 啟發，純 JavaScript 的實作。\n\n5 月 22 日，自己推坑自己，寫 node.js binding ：\n\n> 19:43:51 \\<caasihuang> 意圖使人學寫 node extension...\n\n隨即被 au 大長輩推坑 nan ，\n\n> 19:54:33 \\<au> 趁 nan 推出新版，現在學正是時候 XD\n\n幾天後又推這個 issue [node-webworker-threads#16][2] ，沒想到還真的解了。\n\n> 18:42:02 \\<au> 搞清楚了教我 XD https://github.com/audreyt/node-webworker-threads/issues/16 懸而未決久矣\n\n（沒能力教啊，誠惶誠恐，只好發願寫文章分享）\n\n途中感謝 au, c9s, C, godfat 等人協助， happy hacking XD\n\n這篇心得將分成兩部份，前面講講怎麼用 nan 寫 node extension ，後面講講為啥在 node 0.11.x 寫 extension 那麼麻煩。\n\n[0]: https://github.com/c9s/r3 "libr3 is a high-performance URL router library."\n[1]: https://github.com/fundon/pathing "A fast path lexer"\n[2]: https://github.com/audreyt/node-webworker-threads/issues/16 "Support for Node 0.11.x"\n\n## node-libr3\n\n以前就聽說可以用 C/C++ 寫 node extension ，但除了過去在學校的日子外，很久很久沒寫 C/C++ ，加上自己算不上是個好 C programmer ，一直將這塊當成黑魔法。\n\nr3 的 APIs 可以說是靠 C 寫 OO ，例如 `r3_tree_create` 和 `r3_tree_free` 負責處理 struct 的生成跟消滅， `r3_tree_*` 則用來操作 struct 。所以一開始想把 C functions 和 JavaScript functions 一一對應，那時還不知道 [node-ffi][3] 的存在，只好硬幹。\n\n[3]: https://github.com/rbranson/node-ffi "Node.js Foreign Function Interface"\n\n### Handle\\<T>, Local\\<T> and Persistent\\<T>\n\nHandleScope 是用來管理 Handle ，是 JS 值的容器，分兩種， Local\\<T> 和 Persistent\\<T> ，前者跟 HandleScope 共患難，後者會跟 gc 配合，得由開發者管理生命週期，詳見 [Google 的說明][4] 。\n\n如果只單純將 C 和 JavaScript 對應起來，那最大的問題是：「我該什麼時候呼叫 `r3_tree_free` 呢？」，在 JS 這邊並沒有 destructor ，而 GC 又不被控制。沒辦法只好放棄一一對應，在 C++ 那邊處理這些事情。\n\n[4]: https://developers.google.com/v8/embed "Embedder\'s Guide"\n\n### JS 與 C++ ，兩種不同的 OOP paradigm\n\nJS 並沒有 class ，每個 instance 以一個 function 作為 constructor 生成，新的 instance 經過 constructor 把值設定好。在 C/C++ 世界為了配合這點，至少得產生 `ObjectTemplate` 再生出 `Object` 想知道更多資訊，請見 [這篇文章][5] ，還提到了 `FunctionTemplate` 。\n\n```C++\n// nan 把 function 的 arguments 包起來了。\nNAN_METHOD(treeConstructor) {\n    if (!args.IsConstructCall()) {\n        NanThrowError("Cannot call Tree constructor as function");\n    }\n\n    // nan 把 isolate 還有 handle_scope 也包起來了。\n    NanScope();\n\n    // 生出非 V8 的 instance 。\n    int capacity = args[0]->Uint32Value();\n    r3::node *n = r3::r3_tree_create(capacity);\n    //std::cout << "r3_tree_create(" << capacity << ");" << std::endl;\n\n    // 設計好可以放一個東西的 Object 。\n    Handle<ObjectTemplate> tree_template = ObjectTemplate::New();\n    tree_template->SetInternalFieldCount(1);\n\n    // 生出該 Object ，把非 V8 的 node pointer 放進去。\n    Local<Object> instance = tree_template->NewInstance();\n    instance->SetInternalField(0, NanNew<External>(n));\n    // 把 methods 接上去，可以說是：\n    // this.insert = [C function];\n    // 這樣吧。\n    instance->Set(NanNew<String>("insert"),\n                  NanNew<FunctionTemplate>(treeInsertPath)->GetFunction());\n    instance->Set(NanNew<String>("insertRoute"),\n                  NanNew<FunctionTemplate>(treeInsertRoute)->GetFunction());\n    instance->Set(NanNew<String>("compile"),\n                  NanNew<FunctionTemplate>(treeCompile)->GetFunction());\n    instance->Set(NanNew<String>("match"),\n                  NanNew<FunctionTemplate>(treeMatch)->GetFunction());\n    instance->Set(NanNew<String>("matchRoute"),\n                  NanNew<FunctionTemplate>(treeMatchRoute)->GetFunction());\n\n    // 這個是被 nan 包裝起來，產生 weak persistent 的方法，下一段再好好說明。\n    NanMakeWeakPersistent(instance, n, &treeCleanUp);\n\n    // nan 把 handle_scope.Close() 也包起來了。\n    NanReturnValue(instance);\n}\n```\n\n[5]: http://create.tpsitulsa.com/blog/2009/01/29/v8-objects/ "V8 Objects"\n\n### 什麼時候該 free/delete\n\nPersistent\\<T> 有個方便的功能，開發者可以把一個 persistent 容器設為 weak ，當 GC 發現這個容器除了該 weak 參考外，沒別人參考它時，會觸發 callback ，讓開發者決定要不要消滅它。\n\n```C++\n// object 是將被清掉的值， parameter 則是在將一個 persistent 容器設為 weak 時提供的值，\n// 要放啥都可以（void *），這邊用來傳遞該被刪除的 r3 node pointer 。\nvoid cleanUp(Persistent<Value> object, void *parameter) {\n    std::cout << "r3_tree_free() " << std::endl;\n\n    r3::node *n = static_cast<r3::node *>(parameter);\n    r3::r3_tree_free(n);\n\n    object.Dispose();\n    object.Clear();\n}\n\nNAN_METHOD(constructor) {\n    if (!args.IsConstructCall()) {\n        return ThrowException(String::New("Cannot call constructor as function"));\n    }\n\n    NanScope();\n\n    int capacity = args[0]->Uint32Value();\n    r3::node *n = r3::r3_tree_create(capacity);\n    std::cout << "r3_tree_create(" << capacity << ");" << std::endl;\n\n    Handle<ObjectTemplate> r3_template = ObjectTemplate::New();\n    r3_template->SetInternalFieldCount(1);\n\n    Persistent<External> external_n = Persistent<External>::New(External::New(n));\n    // 第一個參數會變成 cleanUp 的 parameter 。\n    external_n.MakeWeak(n, cleanUp);\n\n    // 把包著 r3 node pointer 的容器存起來給別的 method 用。\n    Local<Object> instance = r3_template->NewInstance();\n    instance->SetInternalField(0, external_n);\n\n    NanReturnValue(instance);\n}\n```\n\n`Persistent::MakeWeak` 那部份可以看出不經過 nan 要寫 extension 也不複雜，但 node 0.11.13 剛好遇到 v8 升級，許多 APIs 都變了，靠 nan 幫忙做掉這些問題會比自己手動升級輕鬆。\n'},function(e,n,t){"use strict";t.r(n),n.default="au 晚上在 #haskell.tw 上提到 [Permutation City](http://en.wikipedia.org/wiki/Permutation_City) 。\n\n大概十年前，在重考班，卻不願意面對現實時，曾從計算到底是什麼出發，想到也許平行的事件可以是宇宙在背後循序計算出來的。宇宙計算機存在的世界，時間尺度將和內部世界不同。另外一個原因大概是自己從來沒面對過 threads ，老是在寫 single thread ，最多只到 event-driven ，想想現在會那麼鳥蛋也是剛好而已 XD\n\n當時只當成有趣的，可能成為小說題材的點子，還在台中龍軒急著打電話給 lunadance 聊。 Permutation City 更深入地探討這樣的模擬，甚至還延續了（故事中的）現實中的貧富差距到模擬的世界，不知道哪天才有機會讀？\n\n另外一個結果就是對紙筆能做的「計算」有興趣，但已經忘了是在之前還是之後，發現當時由 godfat 管的 PLT 版。此後接觸了 untyped λ calculus ，一直到今天來上 FLOLAC ，還在跟這樣的計算奮鬥，仍常常推錯，或是不知道接下來要怎麼算 XD 後來對費曼的計算機教材有興趣，也是源於此（很晚才發現 and or 之類的鬼東西會遺失資訊，要是不漏掉，就能搞可逆計算？）。\n\n高中數學唸得不好，但有幸讀了數學歸納法，除了看到自然數的推導會興奮外，也喜歡可以先猜出意義再用歸納法證的證明，唸離散時，也只對無窮數列與它的和有興趣（能把無窮數列改用有限的符號表示，並對它們做計算，再推出到第 n 項的和不是很美妙嗎？），其他都不太明白。\n"},function(e,n,t){"use strict";t.r(n),n.default="認真的東西一直拖，只好寫些有的沒有的。\n\ncaasi 這 id 是 Isaac 倒過來拼，至於為什麼選 Isaac ，則是因為：\n\n* 很常見，在不能用 caasi 的環境用 Isaac 也沒關係\n* 雖然不信教，但知道他差點被老爸拿去獻祭\n* 提醒自己哪天要把對萊布尼茲很機車的牛頓爵士寫的《自然哲学的数学原理》看完\n* Isaac Asimov\n\n尤其是最後一點。\n\n說來很傻，以前聽葉李華教授在節目中提過 Asimov 的名字常被錯寫為 Azimov （請見：[Spell My Name with an S](http://en.wikipedia.org/wiki/Spell_My_Name_with_an_S)），卻記成將 Isaac 錯寫為 Issac ，才特別在意這個要連寫兩個 a 的名字。\n\n沒想到還真的滿容易被寫成 cassi XD\n"},function(e,n,t){"use strict";t.r(n),n.default="法蘭克福書展後，公司似乎不那麼忙亂，但我的心態卻有了變化。\n\n先別急著吐槽：「你也放棄得太快了吧？」或是「就知道會這樣。」\n\n並不覺得對不起這份工作，雖然沒有忙到像天天 hackathon ，但在台北的日子，能不被打擾想著公事。這也是來之前的初衷，要像桐山零（或按訪談的說法，就是作者羽海野チカ本人）看齊，不讓自己有藉口抱怨：「要是當時再拼一點就好了。」\n\n喜歡 GitHub 這種看得到 source ，東西壞掉時找得到 issue 或是 pull request ，對這個問題什麼時候會修，或有沒有人在意有個底。加上在 #g0v.tw 頻道看到的合作模式，讓我對無法存取的檔案庫，或是會影響到自己，但是無法得知的訊息感冒（還不如一開始就不知道），不方便嘗試新想法。\n\n說到新想法，之前太拘泥於簡報檔了。看看未來的需求，如果書裡的每個資源，都有獨立的 URI ，就能方便地ç´錄讀者可以使用那些資源。網頁版的閱讀器與其試著去解析 EPUB 或其他私有格式，不如從 API 取得資源，把書組出來。\n\n那時才有空實驗這個想法？該撥空用 [Apiary](http://apiary.io/) 先做？反正工具都在，沒道理不用。行不行得通，做過才知道。\n\n---\n\n十一月底又有另外一條死線（The American Council on the Teaching of Foreign Languages, ACTFL），當然希望可以快點完成更多書，這幾天一直在整理做到一半的工具。\n\n才知道許多細節妳在兩個月前幾乎都做過了！要不是有這些 code 可以參考，真不知自己得走多少彎路？\n\n目前的方向是打算在 zip 前，把資料都複製到個別資料夾，再產生頁面跟打包用的 metadata 。沒用 `make` 是因為不熟悉除了生出額外的檔案外，有沒有更好的溝通方式。沒用 [gulp](https://www.npmjs.org/package/gulp) 則是因為 [vinyl-fs](https://www.npmjs.org/package/vinyl-fs) 有個[遇到 symbolic link 會出 EISDIR 的 issue](https://github.com/wearefractal/vinyl-fs/issues/39) 。修好前，沒法像原來那樣，做 symbolic link 再打包。正在用的 [xmlbuilder](https://www.npmjs.org/package/xmlbuilder) 很友善，但也許以 [jade](https://www.npmjs.org/package/jade) 提供頁面與 ocf 的 template ，管理起來會更方便。\n\n---\n\n就算這樣，只是兜出能動的東西而已。我還是不了解該注意什麼，還有它們代表什麼意義。\n\n從 Open Container Format 輾轉找到[汪達數位講的故事](http://wanderer.tw/post/34139362832/recyclebookstore-in-2032-2)，發現 [Extended Books](http://en.wikipedia.org/wiki/Expanded_Books) （又看到 HyperCard ），想起 [Accuracy takes power: one man’s 3GHz quest to build a perfect SNES emulator](http://arstechnica.com/gaming/2011/08/accuracy-takes-power-one-mans-3ghz-quest-to-build-a-perfect-snes-emulator/) ，為了完美模擬超任，得花那麼多工夫，還好 EPUB 是個開放的標準。\n\n但我有好好利用這個標準嗎？ HTML5 可以做的事情太多，我忽略了早已存在的 SMIL 技術。到今天才知道閱讀器正嘗試支援它，還內建了個可愛的按鈕，又能自動翻頁。知道得少，想像力也被侷限，除了靠 React 呈現 VTT ，我還可以有不同選擇 XD\n"},function(e,n,t){"use strict";t.r(n),n.default='R:\n\n這幾個月都在寫 React.js ，本來以為自己跟 React 滿合的，沒想到缺乏設計軟體系統的經驗讓自己吃了大虧。整個狀況大概可以簡化成下面這個例子：\n\n## 一切都很好\n\n一開始，要作個開關。\n\n<iframe width="100%" height="300" src="http://jsfiddle.net/tx0a8mqu/1/embedded/" allowfullscreen="allowfullscreen" frameborder="0"></iframe>\n\nReact 好棒棒，一下就做好了！還可以封裝到 `<Button>` 裡面！萬歲！\n\n## 加點什麼吧？\n\n那麼，變成三個開關吧！\n\n<iframe width="100%" height="300" src="http://jsfiddle.net/tx0a8mqu/2/embedded/" allowfullscreen="allowfullscreen" frameborder="0"></iframe>\n\n那就把開關排三次就好啦，沒什麼難的！還做了個 `<ButtonGroup>` 出來咧！\n\n## 需求又改了\n\n那如果我希望按下一個開關，可以自動把其他開關都關掉呢？只好把狀態都移上來。\n\n<iframe width="100%" height="300" src="http://jsfiddle.net/tx0a8mqu/3/embedded/" allowfullscreen="allowfullscreen" frameborder="0"></iframe>\n\n## 下一步要往哪走？\n\n可是隔壁的老王說，他想要一組原來的開關，只好。\n\n<iframe width="100%" height="300" src="http://jsfiddle.net/tx0a8mqu/5/embedded/" allowfullscreen="allowfullscreen" frameborder="0"></iframe>\n\n這樣一來， `<ButtonGroup>` 要嘛有兩種，要嘛得在 `this.props` 加個值，好決定該表現哪種行為。\n\n## Single Source of Truth\n\n還不如讓最上層管理所有的狀態。\n\n<iframe width="100%" height="300" src="http://jsfiddle.net/tx0a8mqu/6/embedded/" allowfullscreen="allowfullscreen" frameborder="0"></iframe>\n\n## 於是...\n\n才知道為什麼 React 要分 props 和 state ，也知道寫個 stateless 的 component 到底方便在哪裡。如果按以前慣用的做法，讓各個 component 保有自己的狀態，然後到處發事件，光是聽事件的 code 就會扭成一團。對開發中的應用，哪些狀態彼此相關，常常在改變，甚至在不同層級間移動。\n\n也看出 Flux 這個架構å¥½在哪裡，如果 component 沒有狀態，那麼它就是個把 props/attributes 轉換成 HTML 的函式，對一種輸入只會有一種輸出。\n\n只是知道得好像有點晚了 XDD\n\n但沒關係，對系統外面來說，[沒有時間也就沒有狀態](http://only-perception.blogspot.tw/2013/10/blog-post_24.html "其實我也沒能力吃下來源並理解它，只好看成一個有趣的新知，並嘲笑國中時的自己")，自然也沒有狀態該擺哪裡這種煩惱。\n\n## EDIT\n\n* 感謝 [@lyforever](https://twitter.com/lyforever) 建議直接嵌入 fiddles 。\n\n'},function(e,n,t){"use strict";t.r(n),n.default="前情提要：在 godfat 講「rest-core 的承諾」的那段時間，私下討論跟比較過 js 這邊慣用的 promise 用起來長怎樣。雖然一段時間前也討論過，但那時對 promise 還不熟，也沒寫 LiveScript 。\n\n最近的心得可以在[這裡](https://github.com/caasi/sandbox/blob/master/livescript/promises.ls)找到。\n\n特別喜歡這段：\n\n```Livescript\n#!/usr/bin/env lsc\nrequire! {\n  rsvp: { Promise, all, hash }:RSVP\n  'prelude-ls': { apply, is-type }\n}\n\nwrap = ->\n  switch\n  | it |> is-type 'Array'  => all it\n  | it |> is-type 'Object' => hash it\n  | otherwise              => Promise.resolve it\np       = -> Promise.resolve it\npromisy = (f) -> (...args) -> wrap args .then (args) -> wrap f `apply` args\nlog     = promisy console.log\nadd     = promisy (+)\n\nlog p(41), 43\nlog add 41, p(43)\n\n# more usages for you\nclass People\n  (@name_, @friend_) ~>\n  name:~\n    -> new Promise (resolve, reject) ~>\n      (~> resolve @name_) `setTimeout` 300\n    (v) -> @name_ = v\n  friend:~\n    -> new Promise (resolve, reject) ~>\n      (~> resolve @friend_) `setTimeout` 300\n    (v) -> @friend_ = v\nvar opal\nruby = People \\ruby\nopal = People \\opal, ruby\nruby.friend = opal\n\nstart-time = Date.now!\nps =\n  * Promise.resolve ruby\n      .then (.friend)\n      .then (.friend)\n      .then (.name)\n  * ruby.name\napply log, ps\nall ps .then -> console.log Date.now! - start-time\n```\n\n下面附上信的一部分，與提到的參考資料 XD\n\n---\n\ngodfat:\n\n> 我認為 ES6 的 generator 進來後，這 promise 其實就不太需要了\n> 當然跟現有程式溝通是另一回事就是了\n\npromise 的部分今天都當面講完了（灑花）。\n\n以前我讀到的是這篇「Call/CC与Node.js」：\nhttps://blog.kghost.info/2011/10/31/callcc-and-node-js/\n\nnode.js 在 0.1.30 前自己就有 promise ：\nhttp://japhr.blogspot.tw/2010/04/no-more-promises-in-nodejs.html\n\n嗯，然後 generator, continuation, CPS 變換什麼的，\n大概就是下一波讓 js programmer 自我感覺良好的關鍵 XD\n\n像現在的 closure 那樣。\n\n> 噢噢噢，可以開在 chrome 嗎？ :D\n\n看來是可以的？\nhttps://code.google.com/p/v8/issues/detail?id=2355\n\n我用的關鍵字是： \"enable es6 v8 chrome\"\n\n> 嘎，這是 MRI 沒錯，看來是 2.1 才改的 ><\n> 奇怪，我太早把他當 public 了...\n> 無奈 pull request 裡我是直接寫在 commit message 上，不便改.. XD\n\nXDDDD\n\n這封信沒多少以前的訊息，我會公開貼出來，\n希望朋友都看得到，也方便一起討論。\n"},function(e,n,t){"use strict";t.r(n),n.default="```Livescript\nlift-promise-n = (f) -> (...args) -> all args .then apply f\n```\n\n還真的是漫漫長路，遙望暖毛毛。\n"},function(e,n,t){"use strict";t.r(n),n.default="> Broken promises by the way actually have two varieties of broken, there is directly and indirectly broken. In the case where the operation X raised an exception then you have a directly broken promise, and with a directly broken promise you can inquire about the exception that caused it to be broken, and that is the problem. You can ask what was the problem? Why did you break your promise to me? An indirectly broken promise results from making a request where either the recipient of the request or one of the arguments of the request was itself a broken promise, because what can happen here is that I've got this int value back now what I can do with this int value is I can now make a further request of the int value, so I can take two int values and add them together and get a new int value, but it turns out that if the original x message results in a broken promise then this int value becomes a broken promise and therefore there is no integer back over here for me to ask to be added to another integer. So broken promises are never really represented by objects at all on the server, it's the comm layer that either one side of the wire or the other depending on how much information exists locally or not, can tell that this request involves a broken promise and therefore the promise that results from the broken request is indirectly broken and the broken promise that caused this guy to be indirectly broken is this guys excuse. Why did you break your promise to me? Oh don't blame me, it's his fault! And then you can track down the excuse chain to find the directly broken promises problem. You can have a chain of indirectly broken promises and that chain always has to end in a directly broken promise that has a problem.\n\n> ...it turns out that the major benefit of the promise system was not with respect to network latency, it was with respect interactive performance in the context of server latency...\n\n> If we use the garbage collector instead of ref counts over here then there would be no good guarantee about when you would find out that you didn't need f, and therefore there would be a delay before you could tell the server that you didn't it, and that would probably be a sufficient delay to ruin the effect.\n\n> I would be surprised if it took more than two man weeks to get the thing working and would be surprised if that the vast majority of that were not just the details of the TCP/IP system. As far as the rest of the promise system is concerned, I would be surprised if it took as much as a week.\n"},function(e,n,t){"use strict";t.r(n),n.default="「會拿自己和自己以外的東西相比，這種無從處理的情緒起伏就是這一集的主旨」橙乃 ままれ在《記錄的地平線 - 秋葉原的星期日》後記中這樣寫。\n\n雖然看過動畫，小說在實莉和曉心情的轉折上處理得更好。實莉注意到自己對前輩的憧憬，正視自己能力的不足與劣勢，努力以自己能做到的方式分憂解勞。曉則是意識到就算待在主公身邊，也不像實莉那樣確實地從對方角度思考，並幫上忙。同樣的聲音在兩個女孩的心中響起：\n\n「為什麼不是我？」\n\n更讓我意外的是自己怎麼理解，城惠對濡羽的拒絕。不管那樣的故事是真是假，只要對她還有一點愛憐，就不可以順著她的意思去做。為什麼要寫出這樣的小說呢？為什麼這樣的故事還會讓我困擾呢？\n"},function(e,n,t){"use strict";t.r(n),n.default="現在的案子已經靠 [Babel][learn-babel] （之前叫做 6to5 ） ，使用 ES6 寫 React(0.12.0) Component 。\n\n用到的特性有：\n\n* [Arrows][arrows]\n* [Enhanced Object Literals][enhanced-object-literals]\n* [Destructuring][destructuring]\n* [Modules][modules]\n\n最後交給 [webpack][webpack] 打包，細節就不詳述。\n\n## 所以現在是怎麼寫 React Component 的？\n\n以麵包屑為例，一開始先為 component 打個骨架：\n\n```jsx\nimport React from 'react';\n\nvar Breadcrumbs = React.createClass({\n  render() {\n    return <nav />;\n  }\n});\n\nexport default Breadcrumbs;\n```\n\n現在這個 Breadcrumbs 啥也不做，只是一個 `<nav />` 標籤。使用 ES6 的 `import` 和 `export` ，而不是 `var React = require('react')` 與 `module.exports = Breadcrumbs` 。在 ES6 的 [Enhanced Object Literals][enhanced-object-literals] 幫助下，可以少打幾個字，而不用寫：\n\n```jsx\n{\n  render: function () {\n    return <nav />;\n  }\n}\n```\n\n接著把缺少的部分補上：\n\n```jsx\nimport React from 'react';\n\nvar Breadcrumbs = React.createClass({\n  render() {\n    return (\n      <nav className=\"breadcrumbs\">\n        <a href=\"index.html\">Home</a>\n        <span><span className=\"divider\">›</span>React</span>\n        <span><span className=\"divider\">›</span>About</span>\n      </nav>\n    );\n  }\n});\n\nexport default Breadcrumbs;\n```\n\n接著希望它能發揮麵包屑該有的功能，於是在 props 裡給出現在的路徑：\n\n```jsx\nimport React from 'react';\n\nvar Breadcrumbs = React.createClass({\n  getDefaultProps() {\n    return {\n      path: ['React', 'About'];\n    };\n  },\n  render() {\n    var { path } = this.props;\n    return (\n      <nav className=\"breadcrumbs\">\n        <a href=\"index.html\">Home</a>\n        {\n          path.map((v) => {\n            return <span><span className=\"divider\">›</span>{v}</span>\n          })\n        }\n      </nav>\n    );\n  }\n});\n\nexport default Breadcrumbs;\n```\n\n這邊使用到 [Destructuring][destructuring] ，\n\n```javascript\nvar { path } = this.props;\n```\n\n相當於：\n\n```javascript\nvar path = this.props.path;\n```\n\n遇到像這樣的狀況，可以少打很多字，又讓 code 好讀：\n\n```javascript\nvar { str, con, dex, int, wiz, cha } = this.props;\n```\n\n接著靠 `Array.prototype.map` 列舉 `path` 的內容，用 [Arrows][arrows] `() => {}` 取代長長的 `function () {}` ，加上 [Fat Arrows][arrows] 會自動綁定 function 裡面的 `this` ，用在 click 之類的事件上很方便，例如：\n\n```jsx\nrender() {\n  return <div onClick={() => this.setState({ foo: 'bar' })}>foobar</div>;\n}\n```\n\n而不用再寫：\n\n```jsx\nrender() {\n  var self = this;\n  return <div onClick={() => self.setState({ foo: 'bar' })}>foobar</div>;\n}\n```\n\n最後 import 該 component 的 scss ，就完成了：\n\n```javascript\nimport React from 'react';\nimport './Breadcrumbs.scss';\n```\n\n## 別的 Component 怎麼使用這個 Component ？\n\n上層只要 `import` 即可：\n\n```jsx\nimport Breadcrumbs from './Breadcrumbs';\n\n/* 略 */\n\n  render() {\n    return (\n      <div>\n        <Breadcrumbs path={['More', 'React', 'About']} />\n      </div>\n    );\n  }\n\n/* 略 */\n```\n\n## 參考資料\n\n[6to5 改叫 Babel][not-born-to-die] 了，[它的教學][learn-babel]教了我很多，中文的 [ECMAScript 6 入门][es6-intro] 也很棒，但是沒有個別功能的連結。 [@lyforever][ly] 還推薦了 [Understanding ECMAScript 6][understanding-es6] 。\n\n## EDIT\n\n再次感謝 [@lyforever][ly] review jsx 。\n\n[arrows]: https://babeljs.io/docs/learn-es6/#arrows\n[enhanced-object-literals]: https://babeljs.io/docs/learn-es6/#enhanced-object-literals\n[destructuring]: https://babeljs.io/docs/learn-es6/#destructuring\n[modules]: https://babeljs.io/docs/learn-es6/#modules\n[webpack]: http://webpack.github.io/\n[not-born-to-die]: https://babeljs.io/blog/2015/02/15/not-born-to-die/\n[learn-babel]: https://babeljs.io/docs/learn-es6/\n[es6-intro]: http://es6.ruanyifeng.com/\n[ly]: https://twitter.com/lyforever\n[understanding-es6]: https://leanpub.com/understandinges6/read\n"},function(e,n,t){"use strict";t.r(n),n.default="* [CSP](https://blog.othree.net/log/2015/02/14/csp/) from O3noBLOG\n* [Transducers really sound like monads. Are they the same thing?](https://news.ycombinator.com/item?id=8344002)\n* [transducers.hs](https://github.com/tel/tel.github.io/blob/master/public/code/scratch/transducers.hs) by tel\n"},function(e,n,t){"use strict";t.r(n),n.default="當我第一次跟駱駝玩時，我不知道有駱民，也不知道有你。\n\n那時只知道沒有 C 罩杯，也要寫 C ，練習 ACM 。認識了 lunadance ，總算得以窺見這行在做什麼，但對真實世界的需要還是一無所知。從中學得到的懷習慣還在，不知道怎麼學習，也不知道自己的價值。\n"},function(e,n,t){"use strict";t.r(n),n.default="嗨，轉個彎您好：\n\n基於現在的信仰（ Nyarlathotep 和 Yog-Sothoth ），我覺得有必要以公開信的方式，回應您的文章，讓世界變得更有趣。\n\n大學有幸進了資訊系，乖乖學什麼 C ，那時受到很大的打擊，作業要花很多時間才寫得出來。還想學強者我摯友寫什麼 ACM UVa 題庫，根本寫不動，然後如此這般，就被踢出來了， GG 。\n\n不好意思，今天竟然還在這裡跟大家一起混飯吃。\n\n可能是因為那段經驗，對 C 很有好感（從痛苦中生出來的那種好感）。當時也和其他同學一樣，乖乖找經典來看。不得不提，《The C Programming Language》真棒，別的書教你畫聖誕樹，它教你寫未來可以用的工具。\n\n《C++ Primer》就從來沒看完過，對不了解 OO 有什麼用的我來說，根本看不下去。真的讓我認識 OO 的反而是 GUI 程式設計，從 Win32 API 到 Flash ，才學到了別人口中的設計模式和重構。\n\n---\n\n今天從不同角度學程式的人比以前更多了，同意你說的：\n\n> 他們的願望僅此而已，並沒有打算成為電腦專家...\n\n但我要為 C 抱屈，學學貼近機器的語言，還是有好處的，至少這樣可以讓自己學到，這一切背後沒有什麼神奇的魔法，只要願意花時間，總是可以一路挖下去，理解到自己需要的原理，尤其像指標這種奇怪的東西。\n\n因此我推薦大家可以從 [Brainfuck](zh.wikipedia.org/zh-tw/Brainfuck) 入門，它小巧易懂，又圖靈完備，比 HQ9+ 有用得多。光是想像怎麼樣做迴圈、四則運算，就足以激發很多想像，可惜現在沒有好的 IDE 和 package manager ，不方便重用別人的成果。\n\n---\n\n最後，感謝您分享的線上資源，但我還有一些學習上的問題。譬如，英文牘得很慢，那要怎樣才能跟你一樣爬 Reddit 和看線上課程？即使強迫自己讀英文那麼多年了，閱讀速度還是比中文慢上一截。我想有很多寫程式的äºº跟我一樣，有英文障礙，不知道有什麼克服的方法？\n\nP.S. 人生重來槍不算可接受的解決方法。\n"},function(e,n,t){"use strict";t.r(n),n.default='C ：\n\n今天頻道上提到 [Dr. Alan Kay on the Meaning of “Object-Oriented Programming”](http://userpage.fu-berlin.de/~ram/pub/pub_jf47ht81Ht/doc_kay_oop_en) ，略讀後和朋友 MW 分享了幾段 Alan Kay 在文末講的話：\n\n> [...] all through the seventies and eighties, there were many people who tried to get by with "Remote Procedure Call" instead of thinking about objects and messages. [...]\n\n這段讓我想起 Pete Hunt 的 [React: RESTful UI Rendering](https://www.youtube.com/watch?v=IVvHPPcl2TM) 。影片將 RPC 和 DOM 類比，將 RESTful API 和 React.js 類比。\n\n> [...] in which he showed that using the lamda expressions the right way would allow data to be abstracted by procedures.\n\n而這段和前面提到的 dataless programming ，讓我有點迷惑。\n\n您說：\n\n> 用 (x, y) => x 和 (x, y) => y 來代替心中的 true, false..\n\n讓我想起 [Church encoding](http://en.wikipedia.org/wiki/Church_encoding) ，就有個底了，也貼回去給 MW ，畢竟是他先跟我提é Alan Kay 的生物學背景，還有從細胞來的想像。\n\n* * *\n\n之前一直在煩惱 React 的 component 可以怎麼樣合成，才方便重用，而不會綁死自己，做重複工。\n\nReact component 和配著一起用的 jsx 對我來說是這樣的：\n\n`<Foobar />` 這個 component 就好像自訂的 HTML element ，從外面可以傳值給它，叫做 properties ，在裡面寫做 `this.props` ，寫起來像 HTML element 的 attributes ， `<Foobar foo="bar" />` 。 component 可以有自己的狀態，在裡面寫做 `this.state` （開發團隊似乎很小心地選擇了長度一樣的字，在 `getDefaultProps` 和 `getInitialState` 上也可以看到）。\n\n如果把 component 視為吃 `props` 吐 HTML/SVG 的 function ，不用到 `state` 的話，那看來沒有副作用。也難怪 @thecat 大一直強調 "single source of truth" 。也因為看來像 function ，我一直想要組合它們。\n\n在前公司做的事，讓我知道可以靠：\n\n```html\n<Foobar>\n  <Anything />\n</Foobar>\n```\n\n做出可以重複使用的 `<Foobar />` ，但複雜的互動該怎麼處理，我還沒有個底。\n\n還沒接觸 FB 的 Flux 前，我的想像是操作 "single source of truth" 來更新應用程式，那時剛好遇上 [Ludum Dare](http://ludumdare.com/compo/) ，還做了個[小遊戲](https://github.com/caasi/react-ld31) ，好處是很簡單就可以紀錄歷史。\n\nFB 的 Flux ，大意是在保持單向的事件流動下（View -> Actions -> Store -> View），寫應用程式。 View 由 React 負責, Store 聽 Actions ， Store 裡是前面提到的 "single source of truth" ， View 該怎麼畫都看它。\n\nFB 講的 Store 可以等其他 Store 處理完事件，靠一個他們稱為 `waitFor` 的 method 。這個 `waitFor` 的實作在 FB 的 Flux 和我現在用的 Alt 裡都[是 sync 的](https://github.com/facebook/flux/blob/44684a9ad8954437040130bf2d1e02e2b776b114/src/Dispatcher.js#L151)，等於強迫我不可以把 async 的程式放在 Store 中。但 Yahoo! 似乎有自己的想法，他們的 `waitFor` [是 async 的](https://github.com/yahoo/dispatchr/blob/422abf10f63ee8f59927b7b9f5f78b77c58f39e8/lib/Action.js#L79)，還得傳個 callback 給它。\n\nAlt 的作者說 Store 很便宜，於是我把應用程式的邏輯幾乎都寫在 Store 中， async 的事情都交給 Actions 做。使用者的操作會觸動 Actions ，某些事情做完後， Store 也會觸動 Actions 。雖然 View 不會更新自己這點減輕了很多負擔，但 Store 和 Store 間藉著 Actions 彼此相依賴，我擔心哪一天還是會讓應用過度複雜，無法維護，開槍打自己的腳。\n\n回到前面講的合成， ReactConf 的 [Making your app fast with high-performance components](https://www.youtube.com/watch?v=KYzlpRvWZ6c) 提到他們靠著在 component 外面再包一層專門連接 Store 的 container component ，來讓裡面的 component 保持純淨，方便測試與重用。\n\n這個 container 可以不用自己手動刻，於是有了 [Mixins Are Dead. Long Live Composition](https://medium.com/@dan_abramov/mixins-are-dead-long-live-higher-order-components-94a0d2f9e750) 和 au 推薦的 [RickWong/react-transmit](https://github.com/RickWong/react-transmit) 。\n\n之前關於 Monad 和「打開，做些事情，然後關起來」的討論，讓我還是想組合 React component ，認為：\n\n```html\n<Connecter store={ProductStore}>\n  <Connecter store={CategoryStore}>\n    <ProductPage />\n  </Connecter>\n</Connecter>\n```\n\n應該和下面有一樣的效果：\n\n```html\n<Connecter store={CategoryStore}>\n  <Connecter store={ProductStore}>\n    <ProductPage />\n  </Connecter>\n</Connecter>\n```\n\n但直到昨晚才發現，面對公司實務上的問題，這個作法更方便：\n\n```html\n// XXX: ES6\n<Container\n  stores={{ FooStore, BarStore }}\n  transformer={({ FooStore, BarStore }) => {\n    var { foo = [] } = FooStore;\n    var { bar = [] } = BarStore;\n \n    return { foo, bar };\n  }}>\n  <Foobar />\n</Container>\n```\n\n才有這樣的感想：\n\n> 最近寫 React 一直鬼打牆想 composite component ，然後才發現我該專注在處理被包起來的 data 。\n\n而且 function 該怎麼組合跟重用，已經很成熟了，我不用再打造自己的工具，讓 `<Foobar />` 用起來像 function 一樣。但這樣就對 Alan Kay 提到的 dataless programming 更好奇了 XD\n\n沒有寫過 [Om](https://github.com/omcljs/om) 和 [Elm](http://elm-lang.org/) （雖然在頻道上和 godfat 口中都聽過幾次），正好奇 Om 用的 cursor 會不會比 container component 更適合處理跨 component 間的溝通，而不會讓 Flux 的 Store 彼此靠 Actions 互相依賴？ React 也有人實作了 [cursor](https://github.com/dustingetz/react-cursor) ，也許會在 side-project 試看看。\n\n另外 LY 已經做過數個 Isomorphic JavaScript 應用，他的心得和我不同，期待和他多聊聊。搞不好我發出 Actions 的方法根本就不對 XDDD\n\n* * *\n\n補充：半夜看 [jlongster / forms-with-react.js](https://gist.github.com/jlongster/75ef6271f81527574125) ，也許我該堅持「吃什麼進去（porps），就該吐什麼出來（onChange/onUpdate）」，而且把這件事自動化。\n'},function(e,n,t){"use strict";t.r(n),n.default='<iframe width="640" height="480" src="https://www.youtube.com/embed/ZBkZI0jYi3I" frameborder="0" allowfullscreen></iframe>\n<iframe width="640" height="480" src="https://www.youtube.com/embed/K3q5n1mR9iM" frameborder="0" allowfullscreen></iframe>\n<iframe width="640" height="480" src="https://www.youtube.com/embed/KswWJ6zvBUs" frameborder="0" allowfullscreen></iframe>\n<iframe width="640" height="480" src="https://www.youtube.com/embed/rNBtjEBYFPk" frameborder="0" allowfullscreen></iframe>\n'},function(e,n,t){"use strict";t.r(n),n.default="和摯友提到 Clay Shirky 講的：\n\n「黑客松的作用是對問題更透徹的理解。黑客松的產物不是能動的程式，而是在參與者間所建立的社會資本。」\n\n而他提醒我：\n\n「這是一個附帶贈品，是一個你為了解決問題付出的努力的贈品。」\n\n希望我不要本末倒置。\n"},function(e,n,t){"use strict";t.r(n),n.default="使用 Alt 這套 Flux framework 時，我知道 Store 的 `this.waitFor(anotherStore)` 是 sync 的，於是 async 的操作，都得放到 actions 中。\n\n## TL;DR\n\n把 Promise 記起來，避免重複操作，並讓 action 寫起來跟原本的一樣。但該怎麼記，我還沒有個好方法。\n\n[@tomchentw](https://twitter.com/tomchentw) 建議該在 fetch 時解決一切，還提到可以用 [prfun 的 Promise.guard](https://github.com/cscott/prfun#promiseguardfunctionnumber-condition-function-fn--function) ，其他補充在後面。\n\n## 一開始...\n\n按 Alt 的[教學](http://alt.js.org/guide/async/)，會寫出這樣的 action ：\n\n```javascript\nfetchLocations() {\n  // we dispatch an event here so we can have \"loading\" state.\n  this.dispatch();\n\n  LocationsFetcher.fetch()\n    .then((locations) => {\n      // we can access other actions within our action through `this.actions`\n      this.actions.updateLocations(locations);\n    })\n    .catch((errorMessage) => {\n      this.actions.locationsFailed(errorMessage);\n    });\n}\n\nlocationsFailed(errorMessage) {\n  this.dispatch(errorMessage);\n}\n```\n\n其中第一個 `this.dispatch()` 表示「這件事情將要發生了」，然後 `this.actions.updateLocations(locations)` 表示「成功」， `this.actions.locationsFailed(errorMessage)` 表示失敗。並配上這樣的 store ：\n\n```javascript\nhandleUpdateLocations(locations) {\n  this.locations = locations;\n  this.errorMessage = null;\n}\n\nhandleFetchLocations() {\n  // reset the array while we're fetching new locations so React can\n  // be smart and render a spinner for us since the data is empty.\n  this.locations = [];\n}\n\nhandleLocationsFailed(errorMessage) {\n  this.errorMessage = errorMessage;\n}\n```\n\n為了知道現在是不是正在抓資料，也許會加上：\n\n```javascript\nhandleUpdateLocations(locations) {\n  this.fetching = false;\n  // ...\n}\n\nhandleFetchLocations() {\n  this.fetching = true;\n  // ...\n}\n\nhandleLocationsFailed(errorMessage) {\n  this.fetching = false;\n  // ...\n}\n```\n\n如果我希望今天一個操作只會發生一次，我該怎麼做？最傻的方法是在 `handleFetchLocations` 裡面拋個 error 出來：\n\n```javascript\nhandleFetchLocations() {\n  if(this.fetching) {\n    throw new Error('in progress');\n  }\n  this.fetching = true;\n  // ...\n}\n```\n\n但是這麼一來， action 就會變成：\n\n```javascript\nfetchLocations() {\n  try {\n    this.dispatch();\n\n  \tLocationsFetcher.fetch()\n      .then((locations) => {\n        this.actions.updateLocations(locations);\n      })\n      .catch((errorMessage) => {\n        this.actions.locationsFailed(errorMessage);\n      });\n  } catch(error) {\n    this.actions.locationsFailed(error);\n  }\n}\n```\n\n呃，兩套處理錯誤的方法寫在一起。\n\n## 全部交給 Promise\n\n現在想到的解法是，寫個 function 包在 async 動作之外，記下這個動作是不是正在執行：\n\n```javascript\nvar doOnce = function doOnce(action) {\n  var p = null;\n  var release = () => p = null;\n  return function() {\n    if(p) {\n      return { p, isNew: false };\n    }\n    p = action.apply(this, arguments);\n    if(!p.then) {\n      p = Promise.resolve(p);\n    }\n    p.then(release, release);\n    return { p, isNew: true };\n  }\n};\n```\n\n把 `LocationFetcher` 用 `doOnce` 包起來：\n\n```javascript\nvar LocationsFetcher = {\n  fetch: doOnce(function () {\n    return new Promise(function (resolve, reject) {\n      setTimeout(function () {\n\n        // resolve with some mock data\n        resolve(mockData);\n      }, 250);\n    });\n  })\n};\n```\n\n然後 action 就可以寫成：\n\n```javascript\nfetchLocations() {\n  this.dispatch();\n\n  var { p, isNew } = LocationsFetcher.fetch();\n  \n  if(isNew) {\n    p\n      .then((locations) => {\n        this.actions.updateLocations(locations);\n      })\n      .catch((errorMessage) => {\n        this.actions.locationsFailed(errorMessage);\n      });\n  }\n}\n```\n\n因為 Alt 會 bind 正確的 this ，於是可以寫成：\n\n```javascript\nfetchLocations() {\n  this.dispatch();\n\n  var { p, isNew } = LocationsFetcher.fetch();\n  \n  if(isNew) {\n    p\n      .then(this.actions.updateLocations)\n      .catch(this.actions.locationsFailed);\n  }\n}\n```\n\n要是不在意 then 和 catch 可能被觸發多次（像是你的 store 不會再發出別的 action ，也很放心讓 React 幫你檢查 DOM 是否需要更新），稍微修改 `doOnce` 後，甚至可以寫成：\n\n```javascript\nfetchLocations() {\n  this.dispatch();\n\n  LocationsFetcher.fetch();\n    .then(this.actions.updateLocations)\n    .catch(this.actions.locationsFailed);\n}\n```\n\n跟本來的 action 幾乎一樣 :D\n\n## 更多\n\n[@tomchentw](https://twitter.com/tomchentw) 在 comment 中提到了個[好方法](https://gist.github.com/tomchentw/b462f574164ac117a276)，只要改寫 `doOnce` ，就可以做到類似的事：\n\n```javascript\nvar doOnce = function doOnce(action) {\n  var p = null;\n  var release = () => p = null;\n  return function() {\n    if(p) {\n      return Promise.reject(new Error('in progress'));\n    }\n    p = Promise.resolve(action.apply(this, arguments));\n    p.then(release, release);\n    return p;\n  }\n};\n```\n"},function(e,n,t){"use strict";t.r(n),n.default="有工作的人，精神變差了。\n\n沒工作的人，氣色變好了。\n\n我的觀察啦。\n"},function(e,n,t){"use strict";t.r(n),n.default="讀[臺灣自由軟體社群在地發展 - 困境與提案](https://l10n-tw.hackpad.com/--wUb3x5an8Nk)，覺得 jserv 、 [igdshare](https://igdshare.org/) 和[開放文化基金會](http://ocf.tw/)的策略很像：辦聚會，強化在地社群與國際社群的關係，並且培養後進直接與國際接軌，希望可以避開台灣/亞洲市場的「先有雞？先有蛋？」問題。\n\n這樣看來在地化，得等這種跨出台灣的生態建立起來後，才能利用滿出來的資源穩定運作也不一定。\n"},function(e,n,t){"use strict";t.r(n),n.default='從 HN 看到 [50 years ago today the word “hypertext” was introduced](https://gigaom.com/2015/08/24/hypertext-50/) 才注意到 HyperText 50 歲了！\n\n雜感：\n\n* Ted Nelson 寫詩、編雜誌、寫搖滾音樂劇還拍過[短片](https://www.youtube.com/watch?v=rFgul6rwNbQ)，父親是名編劇，母親是名演員。\n* 意識到電腦是台通用機器，是新媒體，正好適合視自己為電影製作人、哲學家和媒體人的他。\n* 互動不是新鮮事，書也是互動的，只是在六零年代他怎麼講都很難讓人理解。\n* 還是將軟體與電影視為同一件事：在一系列的事件與互動中影響觀者的身心。\n* 曾獨立發明光跡追蹤（ray tracing）硬體。\n* 發表完才在 Bob Taylor 的介紹下認識 [Douglas Engelbart](http://worrydream.com/Engelbart/) 。\n* A.I. 研究者一直覺得 HyperText 踩到他們的線 XD\n* 一個 HyperText 各自表述， Ted Nelson 覺得像 [HyperCard](https://en.wikipedia.org/wiki/HyperCard) 就是個很奇怪的系統 XD\n* 醫生與心理學家對 hyper 這個字的用法跟數學家完全不同。\n* 覺得能一起看好幾頁是 HyperText 的核心概念。\n* 礙於 WWW 沒法好好[視覺化文件與文件間的關係](http://xanadu.com/xanademos/MoeJusteOrigins.html)，他覺得自己還是待在高地，讓其他人處理 JavaScript 和 HTML 吧。\n\n附上 Douglas Engelbart 過世時，讓我鼻酸的影片，也見證 Ted Nelson 與他的友誼：\n\n<iframe width="560" height="315" src="https://www.youtube.com/embed/yMjPqr1s-cg" frameborder="0" allowfullscreen></iframe>\n\n* * *\n\n如果能用他想像中的工具，遨遊在有著版本控制、無法刪除的文件網路中，不知道是怎樣的光景？\n\n'},function(e,n,t){"use strict";t.r(n),n.default="我的數學不好，但說不清楚哪裡不好。不好到當有人問起，「你為什麼被退學？」時，會拿它來當藉口。\n\n但我還是可以欣賞數學歸納法的美，覺得從皮阿諾公設推出自然數是很棒的事情，也因此對 church encoding 有好感。偶爾看看數學少女，在[結城 浩](https://twitter.com/hyuki)老師的引導下，看看怎樣從不同角度攻擊問題，最後發現殊途同歸。但要把微積分課本都做完、考個高分、好好啃原文書什麼的，大概辦不到吧。\n\n看到你貼了[Re: \\[問卦\\] 李遠哲和建構式數學的八卦](https://www.ptt.cc/bbs/Gossiping/M.1440890788.A.391.html)，講到李遠哲並不是教育的罪人，讓我想起以前到處亂爬文時，曾聽過「新數學」，是早我一代的教改，聽說高中之所以先教「若且唯若」，是那時留下的遺產。到現在我還是想讀讀傳說中的實驗本，看看怎樣把公理化數學，落實到教育上。\n"},function(e,n,t){"use strict";t.r(n),n.default='前幾周 C 開始了個[快快樂樂寫 Haskell compiler ](https://github.com/CindyLinz/BYOHC-Workshop)的活動。按傳統，學 FP 要從 lambda calculus 開始，前兩週的作業就是寫 lambda calculus interpreter ，再試著使用實作環境內建的 function 並想辦法加速計算過程。\n\n據說 interpreter 比 parser 好寫，於是一開始大家一起操作著以 JSON 表示的 AST 。\n\n```\nλa λb b a\n```\n\n寫成：\n\n```\n\\a \\b b a\n```\n\n表示成：\n\n```\n["lam", "a",\n\t["lam", "b",\n  \t["app",\n    \t["var", "b"],\n      \t["var", "a"]]]]\n```\n\n已經有[測資](https://github.com/CindyLinz/BYOHC-Workshop/blob/master/workshop-2015.9.24.md#測試用範例資料)，但手寫 JSON 實在是太苦悶了，不管怎樣還是想弄個 parser 出來。技術不好，不追求 one-pass ，只求能動就好。\n\n## parsing\n\n處理 lambda calculus 時，我沒想清楚 lambda application 該怎麼處理，繞了很多路。其實只要算好這層有哪些 lambda term ，就可以處理好。\n\n例如在省略括號時：\n\n```\n(Y (\\a \\b a) c d \\a \\b b)\n```\n\n有五個 lambda term ： `Y`, `\\a \\b a`, `c`, `d`, `\\a \\b b` 。注意省略括號時，看到 lambda abstract 開頭的 `\\` ，就可以知道從這個字到最後，是一整個 lambda term ，先不用費心處理。\n\n所有的 lambda abstract （可以說就是 function 啦）都 currying 化了，只有一個參數。於是只要把：\n\n```\n["Y", "\\a \\b a", "c", "d", "\\a \\b b"]\n```\n\n變成這樣的 binary tree ：\n\n```\n[[[["Y", "\\a \\b a"], "c"], "d"], "\\a \\b b"]\n```\n\n就好了！裡面的東西，再遞迴地做下去。\n\n## lazy evaluation （偽）\n\n有了 parser 和[照著教學](https://github.com/CindyLinz/BYOHC-Workshop/blob/master/workshop-2015.9.24.md)做的 interpreter ，接下來要試著加速計算過程。\n\n@LCamel 提供了個好測資：\n\n```\n(\\w\n  (w (w (w (w (w (w (w (w (\\x x)))))))))\n)(\\x (x (x (x (x (x (x (x (x (x x))))))))))\n```\n\n如果不做任何加速，我的 interpreter 要跑 1m5.417s 。要是把算過的結果記下來，只要 0m0.325s ！\n\n現在的作法是：\n\n1. 先把 AST 中的變數名稱都丟掉，用不需要名稱的 [De Bruijn index](https://www.wikiwand.com/en/De_Bruijn_index) 來表示。\n2. 把正要計算的 application serialize 成以 De Bruijn index 表示的字串，當成 key ，把計算結果當成 value 。\n3. 存到 key-value map 裡。\n\n於是：\n\n```\n(\\a \\b a)(\\a \\b b)(\\a \\b a)\n```\n\n會變成：\n\n```\n(\\ \\ 2)(\\ \\ 1)(\\ \\ 2)\n```\n\n其中 2 表示「跟我這個變數 bind 在一起的是，在我外面 2 層的 lambda abstract」， 1 同理。\n\n計算結果是 `(\\a \\b b)` 則以：\n\n```\n["lam", "a",\n\t["lam", "b",\n  \t\t["var", "b"]]]\n```\n\n的形狀存下來，之後可以直接用。\n'},function(e,n,t){"use strict";t.r(n),n.default="昨天在 HN 看到 [The Implementation of Functional Programming Languages](https://news.ycombinator.com/item?id=10609960) ，翻譯一下回應，好激勵自己。\n\n[djfm](https://news.ycombinator.com/item?id=10610737):\n\n> I've read (part of) this book and used it to implement a toy compiler. It helped me a lot in getting a better understanding of Haskell and other functional languages. This is really an amazing book, well worth investing some time into. It starts from simple definitions and concepts and builds up on them - very easy to follow even with little to no previous knowledge of the field.\n>\n> 讀了一部分並用來實作一個玩具編譯器。在理解 Haskell 和其他函數式語言上，幫了很大的忙。真的是本很棒的書，值得花時間在上面。整本書從簡單的定義跟概念開始建立起來，就算沒有該領域的背景，也很好上手。\n\n[hcarvalhoalves](https://news.ycombinator.com/item?id=10611674):\n\n> Once you get to the final chapters, where an intermediate representation of lambda calculus is presented (G-code), read this accompanying paper [1] and wonder where we could be now if the market and hardware manufacturers took a π degree turn to fully support functional paradigms.\n>\n> 一旦你讀到講一種 lambda calculus 的中間形式（G-code）的最後幾章，配著這篇論文 [1] 並好奇，如果市場跟硬體製造商轉個 π 度，完全支援函數式（程式設計）典範，我們現在會在哪裡。\n>\n> [1] [https://www.doc.ic.ac.uk/~wl/icprojects/papers/reduceron08.p...](https://www.doc.ic.ac.uk/~wl/icprojects/papers/reduceron08.pdf)\n\n[brudgers](https://news.ycombinator.com/item?id=10610722):\n\n> The Prentice-Hall Series in Computer Science has a lot of timeless content. C.A.R. Hoare was an outstanding editor.\n>\n> Prentice-Hall 的電腦科學系列有很多經典。 C.A.R. Hoare 是位了不起的編輯。\n\n[amelius](https://news.ycombinator.com/item?id=10610972):\n\n> This is an amazing book. We need more people with writing capabilities like SPJ. Reading this book is almost like inventing compilers for lazy functional languages yourself. There really is no substitute other than actually doing it yourself.\n>\n> 一本驚奇的書。需要更多有著像 SPJ 那樣的寫作能力的人。讀這書就像自己發明 lazy 函數式語言。除了自己作一次外，沒有別的替代方案。\n\n你看看，完全都沒有翻譯到講[編譯器實作](https://news.ycombinator.com/item?id=10610662)的回應，就可以知道我還在看熱鬧，覺得對面的草坪比較綠，月亮比較圓。\n"},function(e,n,t){"use strict";t.r(n),n.default="跟著 [BYOHC](https://github.com/CindyLinz/BYOHC-Workshop) 做自己的 compiler ，也兩個月了。\n\n目前 [C](https://github.com/CindyLinz/Haskell.js/tree/master/trans) 和 [AlexLu](https://github.com/op8867555/BYOHC-transpiler) 做到 transpiler 。還跟不上。\n\n為了觀察每一步是怎麼 reduce ，近一個月前全部重做，從 LiveScript 移到 [ES2015](https://github.com/caasi/ulc-playground) 上。 interpreter 倚賴 Promise 完成 async 操作，於是 internal functions 可以傳回 Promise 好處理 I/O 。\n\n略讀了 [The Implementation of Functional Programming Languages](https://news.ycombinator.com/item?id=10609960) ， 1987 年流行的作法還是 `[Response] -> [Request]` ，而不是 I/O monad 。前幾天才找到 SPJ 的 [Tackling the awkward squad](http://research.microsoft.com/en-us/um/people/simonpj/papers/marktoberdorf/)，想搞清楚 IO 到底在做什麼。\n\n文中提到 IO 很像 state monad （但不是...），還不明白 GHC 是怎麼做的，只好真的用 state monad 做看看：\n\n```\nbind :: IO a -> (a -> IO b) -> IO b\nbind = \\IOa \\f IOa \\a \\RealWorld pair (f a) RealWorld\n```\n\n於是可以把在 `IO a` 中的 `RealWorld` 傳到 `IO b` ，正如 #haskell.tw 上大家形容的那樣：「把 RealWorld 傳下去」。\n\n問題出在中間的 `a -> IO b` 裡面用到的 `return`，把 `b` 變成 `IO b` 的是它，於是它需要知道 `IO a` 中的 `RealWorld` 是什麼東西（當然要是我可以把 `RealWorld` 變不見，又能留下它造成的效果最好，可是我還不懂該怎麼做）。\n\nuntyped lambda calculus 中沒有 type class 可用，我又不是用 env 實作 interpreter ，最好只好把 `bind` 的 type 改成：\n\n```\nbind :: IO a -> ((b -> IO b) -> a -> IO b) -> IO b\n```\n\n那個 `b -> IO b` 就是 `return` 。（讓我想起 Angular.js 的 dependency injection ）\n\n看 [How to desugar Haskell code](http://www.haskellforall.com/2014/10/how-to-desugar-haskell-code.html) 說 type class 在 desugar 後會直接呼叫對的 function ，應該不用像我這樣亂改 type 。\n\n接下來沒有 haskell-src-exts 跟 haskell-src 可以用，該怎麼做才好？\n\n---\n\n這次學到兩件事，一是傻傻找 left-most out-most 的效能有多慘，現在 playground 沒有 delay ，每步都用 requestAnimationFrame ，也要好久才能把讀進去的字串吐出來。難怪那麼多論文都在講，怎麼有效率地 reduce 。二是對 pure functional language 來說，時間順序不重要，只有在和困在時間中的人類互動時，才需要考慮這點。\n\n欸，中二病又發了，快去睡覺比較實在。\n\n"},function(e,n,t){"use strict";t.r(n),n.default="這樣說來，我是該忌妒那位表哥的。\n\n他有著天時（出生年）、地利（台北）、人和（數學教授父親），他家有他家的難處，但可能是我身邊的人中，最接近那幾屆長輩的。也許正因為看過太多厲害人物，才會覺得我只是個依賴心重的孩子。但他卻又在自家長輩面前，積極追求認同。\n\n***\n\n不要放棄。\n"},function(e,n,t){"use strict";t.r(n),n.default='為了讓大家可以簡單地寫 desugar function ， C 使用 Template Haskell ，以便編譯時自動產生程式碼，輸出給 `Haskell.Src.Exts` 用的 desugar function template ，於是做 `if` 的 desugar 時，只要寫：\n\n```\n-- 注意：這是最早的版本，沒有使用帶更多資訊的 `Haskell.Src.Exts.Annotated`\ndeIfExp (If exp1 exp2 exp3) = deIfExp $\n\tCase exp1\n  \t[ Alt (SrcLoc "" 0 0) (PApp (UnQual (Ident "False")) []) (UnGuardedRhs exp3) Nothing\n    , Alt (SrcLoc "" 0 0) (PApp (UnQual (Ident "True")) []) (UnGuardedRhs exp2) Nothing\n    ]\n```\n\n省掉手寫處理其他 Syntax 的三百多行。\n\n但身為一個連 Monoid, Functor, Applicative 都還搞不清楚的笨蛋，怎麼可能一下子就懂 TH （Template Haskell）在搞什麼呢？\n\n所以來拆解 [7e37b79](https://github.com/CindyLinz/Haskell.js/commit/7e37b79d3b05c2b315e73d4e343bad910818da58) 吧！看看 TH 到底是怎麼幫助我們的 XD\n\n文末附上的是只處理 `Haskell.Src.Exts.Syntax.Module` 的精簡版，沒有 [7e37b79](https://github.com/CindyLinz/Haskell.js/commit/7e37b79d3b05c2b315e73d4e343bad910818da58) 那麼複雜，以下一點一點說明：\n\n# deriveDesugarTemplate\n\n程式的進入點是 `deriveDesugarTemplate :: String -> Q [Dec]` ，吃的 `String` 是之後用來生 desugar template 的 function 名稱，吐出來的 `Q [Dec]` 在 `$()` 裡面會變成程式，在 Main.hs 中這樣寫：\n\n```\n-- 前面有些 code\n\n$(deriveDesugarTemplate "xx")\n\n-- 後面有些 code\n```\n\n之後就有個叫 `xx` 的 function 可以用。寫 `xx "DeIf" "deIf"` 就會生出想要的三百多行程式。\n\n```\nderiveDesugarTemplate :: String -> Q [Dec]\nderiveDesugarTemplate funName = do\n  Just moduleName <- lookupTypeName "Module"\n\n  moduleInfo <- reify moduleName\n  runIO $ putStrLn $ show moduleInfo\n\n  let code = genDataTransformer "deIf" moduleInfo\n  runIO $ putStrLn $ code\n\n  fmap pure $ funD (mkName funName) [clause (map (varP . mkName) ["modName", "funPrefix"]) (normalB (varE (mkName "undefined"))) []]\n```\n\n一開始的：\n\n```\nJust moduleName <- lookupTypeName "Module"\n```\n\n先從看得見的地方（在此例中是 Main.hs 和 DeriveDesugarTemplate import 的 modules），找出叫做 `"Module"` 的 [`Name`](http://hackage.haskell.org/package/template-haskell-2.10.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name) ，再靠：\n\n```\nmoduleInfo <- reify moduleName\n```\n\n把 Module 的形狀拆出來。\n\n`runIO` 則可以幫我們在 `Q` 中印出 `moduleInfo` ，看看接下來該怎麼寫。\n\n# Language.Haskell.Src.Exts.Syntax.Module\n\n[Module](https://hackage.haskell.org/package/haskell-src-exts-1.17.1/docs/Language-Haskell-Exts-Syntax.html#t:Module) ：\n\n```\nModule SrcLoc ModuleName [ModulePragma] (Maybe WarningText) (Maybe [ExportSpec]) [ImportDecl] [Decl]\n```\n\n在 TH 中長這個樣子：\n\n```\nTyConI\n  ( DataD\n    [] -- Cxt\n    Language.Haskell.Exts.Syntax.Module -- Name\n    [] -- [TyVarBndr]\n    [ NormalC -- [Con]\n      Language.Haskell.Exts.Syntax.Module\n      [ (NotStrict, ConT Language.Haskell.Exts.SrcLoc.SrcLoc) -- SrcLoc\n      , (NotStrict, ConT Language.Haskell.Exts.Syntax.ModuleName) -- ModuleName\n      , (NotStrict, AppT ListT (ConT Language.Haskell.Exts.Syntax.ModulePragma)) -- [ModulePragma]\n      , (NotStrict, AppT (ConT GHC.Base.Maybe) (ConT Language.Haskell.Exts.Syntax.WarningText)) -- Maybe WarningText\n      , (NotStrict, AppT (ConT GHC.Base.Maybe) (AppT ListT (ConT Language.Haskell.Exts.Syntax.ExportSpec))) -- Maybe [ExportSpec]\n      , (NotStrict, AppT ListT (ConT Language.Haskell.Exts.Syntax.ImportDecl)) -- [ImportDecl]\n      , (NotStrict, AppT ListT (ConT Language.Haskell.Exts.Syntax.Decl)) -- [Decl]\n      ]\n    ]\n    [] -- [Name]\n  )\n```\n\n我們關心的，主要是 `[Con]` 中那些 Types ， `genDataTransformer` 會幫忙產生處理 Module 的 function 。\n\n# genDataTransformer\n\n`genDataTransformer` 吃新函數的 prefix 和 Module 在 TH 中的形狀。可以拆成兩部分看，先看後半用 [`LambdaCase`](https://downloads.haskell.org/~ghc/latest/docs/html/users_guide/syntax-extns.html#lambda-case) 寫的部分：\n\n```\n\\case\n  TyConI (DataD [] (Name (OccName tyNameStr) _) [] cons _) ->\n    let\n      typeSig = funPrefix ++ tyNameStr ++ " :: " ++ tyNameStr ++ " -> " ++ tyNameStr ++ "\\n"\n    in\n      concat $ typeSig : map (conToDef tyNameStr) cons\n  others -> error $ "genDataTransformer " ++ show others ++ " not implemented"\n```\n\n在 Module 的例子中， typeSig 會變成 `"deIfModule :: Module -> Module\\n"` ，而下面的 `map (conToDef tyNameStr) cons` 生出來的就是 function body 。\n\n```\nconToDef tyNameStr (NormalC (Name (OccName conNameStr) _) slots) =\n  let\n    varNames = varNamesForNormalSlots slots\n  in\n    funPrefix ++ tyNameStr ++\n      " (" ++ intercalate " " (conNameStr : varNames) ++ ") = " ++\n      intercalate " " (conNameStr : zipWith (\\varNameStr (_, ty) -> exprFromType varNameStr funPrefix ty) varNames slots) ++\n      "\\n"\n```\n\n其中：\n\n```\nfunPrefix ++ tyNameStr ++\n  " (" ++ intercalate " " (conNameStr : varNames) ++ ")"\n```\n\n會生出：\n\n```\ndeIfModule (Module srcLoc moduleName modulePragma warningText exportSpec importDecl decl)\n```\n\n也就是說， `varNamesForNormalSlots` 會把 slots 收集起來，變成可以 pattern match 的樣子。\n\n[`intercalate`](http://hackage.haskell.org/package/base-4.8.1.0/docs/Data-List.html#v:intercalate) 在這裡做的事情只是在 name 之間插入空白，再接成 String 。\n\n---\n\n```\nintercalate " " (conNameStr : zipWith (\\varNameStr (_, ty) -> exprFromType varNameStr funPrefix ty) varNames slots)\n```\n\n會生出：\n\n```\nModule (deIfSrcLoc srcLoc) (deIfModuleName moduleName) (fmap (deIfModulePragma) modulePragma) (fmap (deIfWarningText) warningText) (fmap (fmap (deIfExportSpec)) exportSpec) (fmap (deIfImportDecl) importDecl) (fmap (deIfDecl) decl)\n```\n\n`exprFromType` 生出了遞迴遍歷各個 slot 需要寫的 code 。\n\n# varNamesForNormalSlots\n\n```\nfinalNames = go M.empty rawNames where\n  go nameCount (nameStr : others) =\n    if S.member nameStr dupNames then\n      let\n        nameCount\' = M.insertWith (+) nameStr 1 nameCount\n        serial = nameCount\' M.! nameStr\n      in\n        (nameStr ++ show serial) : go nameCount\' others\n    else\n      nameStr : go nameCount others\n  go _ _ = []\n```\n\n這段做的事情是，找出重複的名字，並在名字後面加上數字。這麼一來， `Exp Exp Exp` 就不會變成 `exp exp exp` ，而是可以區分彼此的 `exp1 exp2 exp3` 。先看現在的 `nameStr` 在不在放著重複名字的 `dupNames` 中，如果在的話，就用加上數字的名字（`nameStr ++ show serial`），不然用普通的名字就好（`nameStr`）。\n\n---\n\n```\ndupNames :: S.Set String\ndupNames = go S.empty S.empty rawNames where\n  go res seen (nameStr : others) =\n    if S.member nameStr seen then\n      go (S.insert nameStr res) seen others\n    else\n      go res (S.insert nameStr seen) others\n  go res _ _ = res\n```\n\n`dupNames` 也很好玩，一開始有兩個空的 Set ，前面的用來放重複的名字，後面的用來放看過的名字。從 `rawNames` 中把名字一個一個拿出來看，如果這個名字已經看過了（`S.member nameStr seen`），就塞到 `res` 中；如果沒看過，就塞到 `seen` 中。\n\n---\n\n`rawNames` 又是怎麼來的？靠 varNameFromType 從 slots 裡面拆出來的：\n\n```\nrawNames = map (\\(_, ty) -> case varNameFromType ty of Name (OccName str) _ -> lowerHead str) slots\n```\n\n拆出來後把字首小寫（`lowerHead`）。\n\n# varNameFromType\n\n```\nvarNameFromType :: Type -> Name\nvarNameFromType (ConT name) = name\nvarNameFromType (all @ (AppT f x)) = case maybeVarNameFromType all of\n  Just o -> o\n  Nothing -> varNameFromType x\nvarNameFromType others = error $ "varNameFromType " ++ show others ++ " not implemented"\n```\n\n拆 Name 出來時，有意思的是那個 `maybeVarNameFromType` 。會濾掉包裝或基本的 Type ：\n\n```\ntrivialTypes :: S.Set String\ntrivialTypes = S.fromList ["String", "Maybe", "Int", "Rational", "Char", "Integer", "Bool"]\n```\n\n做法是：\n\n```\nmaybeVarNameFromType :: Type -> Maybe Name\nmaybevarNameFromType (ConT (name @ (Name (OccName nameStr) _)))\n  | S.member nameStr trivialTypes = Nothing\n  | otherwise = Just name\nmaybeVarNameFromType (AppT f x) = maybeVarNameFromType f <|> maybeVarNameFromType x\nmaybeVarNameFromType _ = Nothing\n```\n\n這樣就不用特地把 `Maybe WarnText` 寫成 `mWarnText` ，只要寫成 `warnText` 就好。該如何正確地處理它們，則交給 `exprFromType` 。\n\n# exprFromType 和 transExprFromType\n\n```\nexprFromType :: String -> String -> Type -> String\nexprFromType name funPrefix ty = "(" ++ transExprFromType funPrefix ty ++ " " ++ name ++ ")"\n```\n\n`exprFromType` 套上了最外面的 `()` 與目標物（`name`）。重點在：\n\n```\ntransExprFromType :: String -> Type -> String\ntransExprFromType funPrefix = genExpr where\n  genExpr = \\case\n    ConT (Name (OccName name) _)\n      | S.member name trivialTypes -> "id"\n      | otherwise -> funPrefix ++ name\n    AppT ListT x -> "fmap (" ++ genExpr x ++ ")"\n    AppT (ConT (Name (OccName "Maybe") _)) x -> "fmap (" ++ genExpr x ++ ")"\n    AppT (AppT (TupleT 2) a) b -> "(" ++ genExpr a ++ ") *** (" ++ genExpr b ++ ")"\n    others -> error $ "exprFromType " ++ show others ++ " not implemented"\n```\n\n這邊才真的看每個 Type 的形狀，決定該不該加 `fmap` ，該加幾層。\n\n那個 [`***`](https://hackage.haskell.org/package/base-4.8.1.0/docs/Control-Arrow.html#v:-42--42--42-) 是 `Control.Arrow` 裡的東西，又提醒我，得把看到一半的文章看完，這樣才有機會搞懂 FRP 。\n\n# 簡化過的 DerivieDesugarTemplate.hs 全文\n\n```\nmodule DeriveTemplate where\n\nimport Data.Functor\nimport Data.List\nimport Data.Char\nimport Data.Monoid\nimport Control.Applicative\nimport Control.Monad\nimport qualified Data.Set as S\nimport qualified Data.Map as M\nimport Language.Haskell.TH\nimport Language.Haskell.TH.Syntax\n\ntrivialTypes :: S.Set String\ntrivialTypes = S.fromList ["String", "Maybe", "Int", "Rational", "Char", "Integer", "Bool"]\n\nderiveDesugarTemplate :: String -> Q [Dec]\nderiveDesugarTemplate funName = do\n  Just moduleName <- lookupTypeName "Module"\n\n  moduleInfo <- reify moduleName\n  runIO $ putStrLn $ show moduleInfo\n\n  let code = genDataTransformer "deIf" moduleInfo\n  runIO $ putStrLn $ code\n\n  fmap pure $ funD (mkName funName) [clause (map (varP . mkName) ["modName", "funPrefix"]) (normalB (varE (mkName "undefined"))) []]\n\nmaybeVarNameFromType :: Type -> Maybe Name\nmaybevarNameFromType (ConT (name @ (Name (OccName nameStr) _)))\n  | S.member nameStr trivialTypes = Nothing\n  | otherwise = Just name\nmaybeVarNameFromType (AppT f x) = maybeVarNameFromType f <|> maybeVarNameFromType x\nmaybeVarNameFromType _ = Nothing\n\nvarNameFromType :: Type -> Name\nvarNameFromType (ConT name) = name\nvarNameFromType (all @ (AppT f x)) = case maybeVarNameFromType all of\n  Just o -> o\n  Nothing -> varNameFromType x\nvarNameFromType others = error $ "varNameFromType " ++ show others ++ " not implemented"\n\nvarNamesForNormalSlots :: [StrictType] -> [String]\nvarNamesForNormalSlots slots =\n  let\n    dupNames :: S.Set String\n    dupNames = go S.empty S.empty rawNames where\n      go res seen (nameStr : others) =\n        if S.member nameStr seen then\n          go (S.insert nameStr res) seen others\n        else\n          go res (S.insert nameStr seen) others\n      go res _ _ = res\n\n    rawNames = map (\\(_, ty) -> case varNameFromType ty of Name (OccName str) _ -> lowerHead str) slots\n\n    finalNames = go M.empty rawNames where\n      go nameCount (nameStr : others) =\n        if S.member nameStr dupNames then\n          let\n            nameCount\' = M.insertWith (+) nameStr 1 nameCount\n            serial = nameCount\' M.! nameStr\n          in\n            (nameStr ++ show serial) : go nameCount\' others\n        else\n          nameStr : go nameCount others\n      go _ _ = []\n  in\n    finalNames\n\ntransExprFromType :: String -> Type -> String\ntransExprFromType funPrefix = genExpr where\n  genExpr = \\case\n    ConT (Name (OccName name) _)\n      | S.member name trivialTypes -> "id"\n      | otherwise -> funPrefix ++ name\n    AppT ListT x -> "fmap (" ++ genExpr x ++ ")"\n    AppT (ConT (Name (OccName "Maybe") _)) x -> "fmap (" ++ genExpr x ++ ")"\n    AppT (AppT (TupleT 2) a) b -> "(" ++ genExpr a ++ ") *** (" ++ genExpr b ++ ")"\n    others -> error $ "exprFromType " ++ show others ++ " not implemented"\n\nexprFromType :: String -> String -> Type -> String\nexprFromType name funPrefix ty = "(" ++ transExprFromType funPrefix ty ++ " " ++ name ++ ")"\n\nlowerHead :: String -> String\nlowerHead (c:cs) = toLower c : cs\n\ngenDataTransformer :: String -> Info -> String\ngenDataTransformer funPrefix =\n  let\n    conToDef tyNameStr (NormalC (Name (OccName conNameStr) _) slots) =\n      let\n        varNames = varNamesForNormalSlots slots\n      in\n        funPrefix ++ tyNameStr ++\n          " (" ++ intercalate " " (conNameStr : varNames) ++ ") = " ++\n          intercalate " " (conNameStr : zipWith (\\varNameStr (_, ty) -> exprFromType varNameStr funPrefix ty) varNames slots) ++\n          "\\n"\n  in\n    \\case\n      TyConI (DataD [] (Name (OccName tyNameStr) _) [] cons _) ->\n        let\n          typeSig = funPrefix ++ tyNameStr ++ " :: " ++ tyNameStr ++ " -> " ++ tyNameStr ++ "\\n"\n        in\n          concat $ typeSig : map (conToDef tyNameStr) cons\n      others -> error $ "genDataTransformer " ++ show others ++ " not implemented"\n```\n\n讀到這裡，認為有機會靠 TH 寫出簡潔的 pretty print ，但還是不確定從何下手才好。\n\n順其自然吧。\n'},function(e,n,t){"use strict";t.r(n),n.default="Bobby 前輩整理了 [EPUB 3.1版初稿](http://wanderer.tw/post/138637489838/epub-31%E7%89%88%E5%88%9D%E7%A8%BF)，列出新版規格改了些什麼。\n\n什麼時候我會回到電子書上呢？自己追逐著扭曲的目標，看不見未來，很不樂觀。\n"},function(e,n,t){"use strict";t.r(n),n.default='嗨， 1/14 的 caasi ， commits 看得怎麼樣了？下一次活動是 1/28 ，然後就要過年了。我是 2/28 的 caasi ，現在要跟你說一些未來的事情，像是你會去一趟上海，你會很煩，但是你知道你必須要了解中國。你會在上海交大讀著印出來的程式，自我感覺良好，卻還是沒能完全搞懂。\n\n但最重要的是，我要捏他！這樣也許你在學習的路上可以開心一點 XD\n\n--\n\n```Haskell\nmain = rhs\n```\n\n會變成：\n\n```Haskell\nPatBind l\n  (PVar l (Ident l "main"))\n  rhs\n  Nothing\n```\n\nl 是那長長一大串，包含這段 AST 來自程式碼那邊的原始資訊。可以靠著 `forgetL` 一次清掉。 PVar 的 P 是 Pattern 的 P 。 Nothing 是 where 的 binds ，在此例中什麼都沒有，故為 Nothing 。\n\n```Haskell\ncase Just (Just (Pair 3 5)) of\n```\n\n成了：\n\n```Haskell\nCase l\n  (App l\n    (Con l (UnQual l (Ident l "Just")))\n    (Paren l\n      (App l\n        (Con l (UnQual l (Ident l "Just")))\n        (Paren l\n          (App l\n            (App l\n              (Con l (UnQual l (Ident l "Pair")))\n              (Lit l (Int l 3 "3"))\n            )\n            (Lit l (Int l 5 "5"))\n          )\n        )\n      )\n    )\n  )\n```\n\n後面接著的是 `[Alt l]` 。\n\n```Haskell\n_ | False -> exp\n```\n\n成了：\n\n```Haskell\nAlt l\n  (PWildCard l)\n  (GuardedRhss l\n    [ GuardedRhs l\n        [ Qualifier l (Con l (UnQual l (Ident l "False")))\n        ]\n        exp\n    ]\n  )\n  Nothing\n```\n\n`Rhs` 分為 `UnGuardedRhs` 和 `GuardedRhss` 兩種，前者直接帶個 `exp` ；後者帶一串 `GuardedRhs` ，都是 `| stmts = exp` 或 `| stmts -> exp` 這種樣子。\n\n```Haskell\n| Nothing -> exp\n```\n\n成了：\n\n```Haskell\nAlt l\n  (PApp l (UnQual l (Ident l "Nothing")) [])\n  (UnGuardedRhs l exp)\n  Nothing\n```\n\n原程式中的 `Nothing` 是 data constructor 喔，所以才包在 `PApp` 裡面，後面的 `[]` 表示沒有參數。\n\n```Haskell\na | False -> exp0\n  | True  -> exp1\n```\n\n則成了：\n\n```Haskell\nAlt l\n  (PVar l (Ident "a"))\n  (GuardedRhss l\n    [ GuardedRhs l\n        [ Qualifier l (Con l (UnQual l (Ident l "False")))\n        ]\n        exp0\n    , GuardedRhs l\n        [ Qualifier l (Con l (UnQual l (Ident l "True")))\n        ]\n        exp1\n    ]\n  )\n  Nothing\n```\n\n可以清楚看見 `GuardedRhss` 中的兩個 `GuardedRhs` 。\n\n現在你知道你可以放心看看 `altToPartial` 、 `dataConToShape` 、 `buildReorder` 與 `orderedCaseToExp` 這些 function 。 AST 只要靜下心來就能懂，接下來交給時間就是了。\n'},function(e,n,t){"use strict";t.r(n),n.default='想在工作用得上的 side-project 裡試試 Frege 。初衷是：如果大家都在 production 用 FP language ，我也必須這樣。不然經驗永遠不夠，只能把 FP 當玩具。\n\n[Frege: Hello Java - mmhelloworld][Frege-Hello-Java] 介紹了如何用 Frege 跟 Java 溝通，可以看到不純的 class 要放在長長的 `ST s (Mutable s (ClassName a))` 中，可以簡寫成 `STMutable s (ClassName a)` 。\n\n`ST s a` 的說明可以在 [PreludeBase.fr][PreludeBase.fr] 中找到：\n\n> @(ST s a)@ is an abstract data type and is\n> a computation that encapsulates side effects in state thread @s@\n> and returns a value of type @a@.\n\n配上 [talios/frege-testing][frege-testing] ，只靠 `mvn compile exec:exec` 就把程式跑起來！\n\nFrege 社群有個工具， [Frege/frege-native-gen][frege-native-gen] ，能幫忙自動產生和 Java classes 溝通的程式碼，但我打算先自己寫幾次，了解 `ST s a` 到底是什麼、用起來是什麼感覺後，再學工具。\n\n[Frege-Hello-Java]: http://mmhelloworld.github.io/blog/2013/07/10/frege-hello-java/\n[PreludeBase.fr]: https://github.com/Frege/frege/blob/master/frege/prelude/PreludeBase.fr\n[frege-testing]: https://github.com/talios/frege-testing\n[frege-native-gen]: https://github.com/Frege/frege-native-gen\n\n## 接接看 Apache.POI\n\n來看看要怎麼包 `HSSFWorkbook` 這種實用的 lib 。\n\n首先我們需要把 Java constructor 包起來：\n\n```Frege\ndata HSSFWorkbook = native org.apache.poi.hssf.usermodel.HSSFWorkbook where\n  native new :: () -> ST s (Mutable s HSSFWorkbook)\n```\n\n其中 `ST s (Mutable s HSSFWorkbook)` 可以[簡寫][STMutable]為 `STMutable s HSSFWorkbook` ，兩個 `s` 的 type 相同：\n\n```Frege\ndata HSSFWorkbook = native org.apache.poi.hssf.usermodel.HSSFWorkbook where\n  native new :: () -> STMutable s HSSFWorkbook\n```\n\n接著處理 `HSSFWorkbook::write` ：\n\n```Frege\ndata HSSFWorkbook = native org.apache.poi.hssf.usermodel.HSSFWorkbook where\n  native new :: () -> STMutable s HSSFWorkbook\n  native write :: MutableIO HSSFWorkbook -> OutputStream -> IO ()\n    throws IOException\n```\n\n`MutableIO` 是 `Mutable RealWorld` 的[別名][MutableIO]， `IO` 是 `ST RealWorld` 的[別名][IO]。還有個現在沒出現的 `IOMutable` 是 `IO MutableIO` 的[別名][IOMutable]。\n\n[STMutable]: https://github.com/Frege/frege/blob/master/frege/prelude/PreludeIO.fr#L318\n[MutableIO]: https://github.com/Frege/frege/blob/master/frege/prelude/PreludeIO.fr#L297\n[IO]: https://github.com/Frege/frege/blob/master/frege/prelude/PreludeBase.fr#L2014\n[IOMutable]: https://github.com/Frege/frege/blob/master/frege/prelude/PreludeIO.fr#L314\n\n---\n\n接著還需要產生 `HSSFSheet` ，在 `HSSFWorkbook` 中加上 `createSheet` function ：\n\n```Frege\ndata HSSFWorkbook = native org.apache.poi.hssf.usermodel.HSSFWorkbook where\n  native new :: () -> STMutable s HSSFWorkbook\n  native createSheet :: Mutable s HSSFWorkbook -> String -> STMutable s HSSFSheet\n  native write :: MutableIO HSSFWorkbook -> OutputStream -> IO ()\n    throws IOException\n```\n\n補上其他 type ：\n\n```Frege\ndata HSSFSheet = native org.apache.poi.hssf.usermodel.HSSFSheet where\n  native createRow :: Mutable s HSSFSheet -> Int -> STMutable s Row\n  \ndata Cell = native org.apache.poi.ss.usermodel.Cell where\n  native setCellValue :: Mutable s Cell -> String -> ST s ()\n\ndata Row = native org.apache.poi.ss.usermodel.Row where\n  native createCell :: Mutable s Row -> Int -> STMutable s Cell\n```\n\n處理一下例外：\n\n```Frege\npure native showThrowable toString :: Throwable -> String\n```\n\n---\n\n整個寫起來像這樣：\n\n```Frege\nmodule frege.Main where\n\ndata HSSFSheet = native org.apache.poi.hssf.usermodel.HSSFSheet where\n  native createRow :: Mutable s HSSFSheet -> Int -> STMutable s Row\n\ndata HSSFWorkbook = native org.apache.poi.hssf.usermodel.HSSFWorkbook where\n  native new :: () -> STMutable s HSSFWorkbook\n  native createSheet :: Mutable s HSSFWorkbook -> String -> STMutable s HSSFSheet\n  native write :: MutableIO HSSFWorkbook -> OutputStream -> IO ()\n    throws IOException\n\ndata Cell = native org.apache.poi.ss.usermodel.Cell where\n  native setCellValue :: Mutable s Cell -> String -> ST s ()\n\ndata Row = native org.apache.poi.ss.usermodel.Row where\n  native createCell :: Mutable s Row -> Int -> STMutable s Cell\n\npure native showThrowable toString :: Throwable -> String\n\nmain _ = do\n  let filename = "out.xls"\n  workbook <- HSSFWorkbook.new ()\n  sheet <- HSSFWorkbook.createSheet workbook filename\n  row <- HSSFSheet.createRow sheet 0\n  cell <- Row.createCell row 0\n  Cell.setCellValue cell "hello, world"\n  file <- File.new filename\n  out <- FileOutputStream.new file\n  try (\\book -> HSSFWorkbook.write book out) workbook\n    `catch` (\\(exception :: IOException) -> println $ showThrowable exception)\n\n```\n\n再來要挑戰 [Vert.x][vertx.io] ！\n\n[vertx.io]: http://vertx.io/\n'},function(e,n,t){"use strict";t.r(n),n.default="> 我無從知道你的感受是怎樣的。不能了解他的種種，但我可以依當時的時空背景理解他的種種。\n>\n> 我和他是真正的青梅竹馬、愛情、親情還是友情我都混成一團。他有才氣、也有理想，只是不知從那一天開始他被酒色財氣虛偽的社會拉走了。我想他就不是當年那有抱負的青年了，攔不住了。\n"},function(e,n,t){"use strict";t.r(n),n.default="目前狀態：\n\n* 一天最多讀 4 小時的 code ，通常要分兩次\n* 平常一天讀 2 小時，通常集中在凌晨\n* 一天最多寫 6 小時的 code ，中間有 2 小時昏迷（汗\n* 打字不快，錯誤率高\n* 很容易分心，還不能被打擾，自然也無法放鬆心情\n\n和打桌球一樣，應該專注在「想達成的目的」，而不是「如何操控自己的身體」上。\n\n希望今年在各方面都能進步。\n"},function(e,n,t){"use strict";t.r(n),n.default='[AltspaceVR][AltspaceVR] 實在是個很奇怪的地方。可以一起看 YouTube 這點，讓我想起消失很久的 [Google Lively][Lively] ，在那裡有個小房間、當隻小豬也甘願。\n\n[AltspaceVR]: http://altvr.com/\n[Lively]: https://en.wikipedia.org/wiki/Google_Lively\n\n不幸的是，現在 Rift DK2 和 HTC Vive 正夯，沒有人理 DK1 ，如果不幸跟我一樣只有 DK1 ，那在 OSX 下需要做兩件事才能進入 Altspace ：\n\n* 取消「鏡像顯示器」：不然滑鼠無法點選任何選單\n* 使用以下的[指令][gist:1a9ff84927cf9e9654c2]打開 RiftConficUtil ，關閉健康警告：\n\n```\n# Run this in shell\n# Then create/load user profile, click "Advanced..." and tick "Disable Warning"\nOculus_LibOVR_HSWToggleEnabled=1 /Applications/Oculus/Tools/RiftConfigUtil.app/Contents/MacOS/RiftConfigUtil\n```\n  \n[gist:1a9ff84927cf9e9654c2]: https://gist.github.com/LeZuse/1a9ff84927cf9e9654c2\n'},function(e,n,t){"use strict";t.r(n),n.default="> 應引用她演講中的話\n\n可是我覺得那不像是刻意去忘記。\n\n在逼著自己先不讀教學（雖然之前不是沒讀過），直接看不熟悉的結構，並試著理解「它做了什麼」，自然就會把本來學到的名詞忘記，剩下的只有猜測與觀察。等到勉強對整個程式有了認識以後，才恍然大悟：「原來你們以前說的...就是這種東西啊」，這時聽過的名詞才跟新認識到的結構連結起來。\n\n於是那個秋天才跟同事說：「我不知道怎麼介紹 FP 」，而自己直到現在，還在經歷這個「重建」。\n\n---\n\n30 歲再打掉自己的世界觀重建，是不是有點晚了？難怪 PG 曾說：「But I don't expect to convince anyone (over 25) to go out and learn Lisp.」\n\n如果是 25 該多好？如果是 20 該多好？這樣的問題開始偷偷地爬上來。於是我開始質疑自己的生活態度與時間管理。我在寫什麼？（JavaScript）；算不算 functional language ？（沾得上邊但是不算）；現在工作主要用什麼？（Java）；算不算 functional language ？（沾得上邊但是不算）；那該怎麼辦？什麼比較重要？是自以為重要，還是真的重要？\n\n搞得好像 30 歲就經歷什麼中年危機一樣，糟透了 |||\n\n但該負責的是自己，這是付諸行動的代價。期待跟堅持並不重要，在過程中隨時調整自己的方向才重要。一開始，就是太堅持自己一定要做到什麼，或者一定要完成什麼事情，才讓壓力一直累積。 lambda interpreter 寫完了，正如我本來設下的目標，可見對自己能力的評估沒出太多問題，但並不覺得快樂； Workshop 接下來的方向偏向教學，正如數個月前希望的那樣，可是成員的變動卻讓我焦慮不安，沒辦法開心。\n\n---\n\n還是覺得存在就是錯誤。然後猜她或誰有能力把我從 freenode 踢出去什麼的。根本沒有足夠的資料，不知道的就是不知道。連莫名其妙的發想都沒有意義，像是請她來台中講 functional programming 什麼的。我沒有那個正當性，但是卻覺得她來可能會開心，至少，當 Alex 沒法到台北時，可以到台中找他吧？\n"},function(e,n,t){"use strict";t.r(n),n.default="目前狀態：\n\n* 一天最多讀 1 小時的 code ，通常要分兩次\n* 一天最多寫 6 小時的 code ，中間有 0.5 小時昏迷（汗\n* 打字不快，錯誤率還是高\n\n跟之前相比變爛了，這才是正常狀態？\n"},function(e,n,t){"use strict";t.r(n),n.default="vim 8 的消息已經出來半個月，現在才想到該看看 [version8.txt][version8] 。\n\n[version8]: https://github.com/vim/vim/blob/master/runtime/doc/version8.txt\n\n* 不再支援 MS-DOS 和 16 bits Windows\n\n* 非同步 I/O 、 channels\n\n\t```\n  Vim can now exchange messages with another process in the background.  The\n  messages are received and handled while Vim is waiting for a character.  See\n  |channel-demo| for an example, communicating with a Python server.\n  ```\n  \n  不知道能溝通到什麼程度？可以從 channel 拿到檔案嗎？\n  \n來裝 vim 8 好了。\n"},function(e,n,t){"use strict";t.r(n),n.default="2016-04-29 的 Workshop 重新開始，使用 [stack][stack] 管理開發環境，寫自己的 transpiler 。\n\n## stack\n\n> 「lts 是比較穩定的版本，什麼 nightly build 是他們還在 try 的版本。心臟比較大顆的可以試試看。」\n\n行前先預習一下 stack 基本操作：\n\n```\nstack new my-project\ncd my-project\nstack setup\nstack build\nstack exec my-project-exe\n```\n\n下 `stack new my-project` 時， stack 會幫忙生出整個專案目錄，包含：\n\n```\napp/\n  Main.hs\nsrc/\n  Lib.hs\ntest/\n  Spec.hs\nLICENSE\nSetup.hs\nstack.yaml\nmy-project.cabal\n```\n\n除了 `stack.yaml` 外，今天要關心的只有 `my-project.cabal` 和 `Main.hs` 。\n\n記得 Workshop 剛開始時， C 用的是 cabal 配上秘藏的工具，好在不同的 GHC 版本間切換。後來 Alex 推薦了 stack ，就轉換到 stack 上了。我一開始並不熟練，花了一段時間才搞清楚，原來有兩個檔案要注意，一個是 stack 的 `stack.yaml` ，裡面指定了 GHC 的版本、套件、架構等。我還不清楚那裡面指定的 `extra-deps:` 與 cabal 檔中的有何不同？只記得用 cabal 時手動裝本地套件很麻煩。今天 silverneko 注意到， `stack.yaml` 裡的 `packages:` 應該是用來處理本地套件的。\n\n[stack]: http://docs.haskellstack.org/en/stable/README/\n\n`stack.yaml` 中有個重要的設定是 `resolver:` ，可以手動改，也能在跑 `stack new my-project` 時，加上參數 `--resolver` 。例如：\n\n```\nstack new my-project --resolver lts-5.14\n```\n\n[lts-5.14][lts] 的 lts 表示 long term support ，是穩定的版本。另外還有 [nightly-2016-04-28][nightly] ，其中的 nightly 表示是 nightly bulid ，每天晚上自動編譯出來的最新版。\n\n[lts]: https://www.stackage.org/lts-5.14\n[nightly]: https://www.stackage.org/nightly-2016-04-28\n\n---\n\n接著下 `stack setup` ， stack 會把這個專案用的 GHC 準備好：\n\n```\nstack will use a locally installed GHC\nFor more information on paths, see 'stack path' and 'stack exec env'\nTo use this GHC and packages outside of a project, consider using:\nstack ghc, stack ghci, stack runghc, or stack exec\n```\n\n訊息中也提到要使用 `ghc`, `ghci` 與 `runghc` 時，前面得加上 `stack` 。\n\n再來使用 `stack bulid` 編譯，最後下 `stack exec my-project-exe` ，就能看到輸出：\n\n```\nsomeFunc\n```\n\n如果打開 `app/Main.hs` ，可以看到：\n\n```Haskell\nmodule Main where\n\nimport Lib\n\nmain :: IO ()\nmain = someFunc\n```\n\n其中 `someFunc` 來自 `src/Lib.hs` ，只做一件事：輸出 `\"someFunc\"` ：\n\n```Haskell\nmodule Lib\n    ( someFunc\n    ) where\n\nsomeFunc :: IO ()\nsomeFunc = putStrLn \"someFunc\"\n```\n"},function(e,n,t){"use strict";t.r(n),n.default="## 預習\n\n按 C 的計畫，這天要利用 Language.Haskell.Exts 這套件讀出原始碼本身屬於哪個套件、 import 了哪些套件，再把它們通通讀出來，然後印出來。建議先讀過的套件有：\n\n  * [haskell-src-exts][src-exts]\n  * [Language.Haskell.Exts.Annotated.Syntax][annotated-syntax]\n  * [Language.Haskell.Exts.Annotated.Parser][annotated-parser]\n  * [Language.Haskell.Exts.Pretty][pretty]\n  * [Haskell Standard Library][libraries]\n  * [Data.Map.Strict][data-map-strict]\n  * [System.IO][system-io]\n  * [System.FilePath][system-filepath]\n  * [Control.Exception][control-exception]\n\nhaskell-src-exts 在做那個愚蠢的、不 pretty 的 print 看過好幾次了。那時看的是 Language.Haskell.Exts.Syntax ，後來大家用的是 Language.Haskell.Exts.Annotated.Syntax 。要注意的是，後者的結構跟前者完全不同。 petercommand 一下子就發現了這件事。\n\nLanguage.Haskell.Exts.Annotated.Syntax 下的 `ann` 和 `amap` 是操作 annotations 的[工具][afuncs]，以前 Alex 有提過。前者把 annotation 拔出來，後者只對 annotation 作用。註解中還提到： `if all nodes in the AST tree are to be affected, use fmap.` ，這次可以用得上。\n\nLanguage.Haskell.Exts.Pretty 比較妙的是， pretty 完就變回 Haskell 了，跟有縮排的 AST 不同。但對我們來說，更需要後者。那時曾試著看 TH 的，發現 [Text.PrettyPrint][HPJ] ，但沒看懂。現在不知道看不看得懂 XDXD\n    \n另外 Hackage 多用 [Haddock][Haddock] [註解][CodingStyle]。但是 Base 的 lhs 多用 `\\begin{code}` 跟 `\\end{code}` 把 code 包起來（LaTex suggestions）。這樣還有什麼意思呢？ github 上只有到 2001 年的 commit ，不知道最早是不是就這樣？\n    \nControl.Exception 的作者是[嘴吐][cokmett] category theory 的 ekmett ！\n\n[src-exts]: https://hackage.haskell.org/package/haskell-src-exts\n[annotated-syntax]: https://hackage.haskell.org/package/haskell-src-exts-1.17.1/docs/Language-Haskell-Exts-Annotated-Syntax.html\n[afuncs]: https://github.com/haskell-suite/haskell-src-exts/blob/master/src/Language/Haskell/Exts/Annotated/Syntax.hs#L1052\n[annotated-parser]: https://hackage.haskell.org/package/haskell-src-exts-1.17.1/docs/Language-Haskell-Exts-Annotated-Parser.html\n[pretty]: https://hackage.haskell.org/package/haskell-src-exts-1.17.1/docs/Language-Haskell-Exts-Pretty.html\n[HPJ]: https://hackage.haskell.org/package/pretty-1.1.3.3/docs/Text-PrettyPrint.html\n[libraries]: https://downloads.haskell.org/~ghc/latest/docs/html/libraries/\n[data-map-strict]: https://downloads.haskell.org/~ghc/latest/docs/html/libraries/containers-0.5.6.2/Data-Map-Strict.html\n[system-io]: https://downloads.haskell.org/~ghc/latest/docs/html/libraries/base-4.8.2.0/System-IO.html\n[system-filepath]: https://downloads.haskell.org/~ghc/latest/docs/html/libraries/filepath-1.4.0.0/System-FilePath-Posix.html\n[Haddock]: https://www.haskell.org/haddock/\n[CodingStyle]: https://ghc.haskell.org/trac/ghc/wiki/Commentary/CodingStyle\n[control-exception]: https://downloads.haskell.org/~ghc/latest/docs/html/libraries/base-4.8.2.0/Control-Exception.html\n[cokmett]: https://www.reddit.com/r/haskell/comments/1ssa5g/edward_kmett_such_mathematical_wow_algebraic/\n\n## 準備\n\n一開始要以 haskell-src-exts 讀檔案，於是先在 `app/Main.hs` 中加上 `import Language.Haskell.Exts.Annotated` ；\n\n```Haskell\nmodule Main where\n\nimport Language.Haskell.Exts.Annotated\n\nimport Lib\n\nmain :: IO ()\nmain = someFunc\n```\n\n並修改 `my-project.cabal` ，在 `executable my-project-exe` 那段的 `build-depends:` 加上 `haskell-src-exts` ：\n\n```\nexecutable my-project-exe\n  hs-source-dirs:      app\n  main-is:             Main.hs\n  ghc-options:         -threaded -rtsopts -with-rtsopts=-N\n  build-depends:       base\n                     , my-project\n                     , haskell-src-exts\n  default-language:    Haskell2010\n```\n\n接著執行 `stack build` ，會看到它開始下載並編譯套件，需要花一點時間。\n"},function(e,n,t){"use strict";t.r(n),n.default='## 附錄： C 的 `Parse.hs`\n\n以下程式按閱讀順序重新編排過。\n\n從 Main.hs 來看，該從 `getAllModules` ，還有 `prettyPrintAllModules` 看起。 `getAllModules` 在做的是，從給定的檔案內容中取得 Module 名稱與所 imports 的其他 Modules 名稱，再存到 Map 中。\n\n一直留著 `ParseResult` ，猜想是把它當 `Maybe` 用了。\n\n```Haskell\ngetAllModules :: String -> IO (ParseResult (M.Map String (Module SrcSpanInfo)))\ngetAllModules src =\n  case parseModule src of\n    ParseFailed loc msg -> return $ ParseFailed loc msg\n    ParseOk mod -> do\n      let\n        modName = case mod of\n          Module _ Nothing _ _ _ -> "Main"\n          Module _ (Just (ModuleHead _ (ModuleName _ modName) _ _)) _ _ _ -> modName\n\n        imports = moduleImports mod\n\n      addMoreModules (M.singleton modName mod) imports\n```\n\n存到 Map 中的工作，由 `addMoreModules` 完成。有趣的是，在 Haskell 中打兩次 `M.Map String (Module SrcSpanInfo)` 不是什麼問題，但 Java 中就會想用一個 `<T>` 解決就好。\n\n```Haskell\naddMoreModules :: M.Map String (Module SrcSpanInfo) -> [String] -> IO (ParseResult (M.Map String (Module SrcSpanInfo)))\naddMoreModules = go where\n  -- 覺得常見的 `go acc []` 和 `go acc (m : ms)` 這種 local 遞迴用起來很像\n  -- reduce/fold ，不知道作者是怎麼看的？\n  go acc [] = return $ pure acc\n  go acc (m : ms)\n    | M.member m acc = go acc ms -- 已經 import  過了\n    | m == "Prelude" = go acc ms -- 略過 Prelude\n    | otherwise = do\n      res <- getModule m\n      case res of\n        ParseFailed loc msg -> return (ParseFailed loc{srcFilename = m} msg)\n        -- insert 後的 Map 變成下一次 go 的 acc 。 moduleImports 則從 mod 中取得\n        -- 更多的 module names ，交給下次的 go 。\n        ParseOk mod -> go (M.insert m mod acc) (moduleImports mod ++ ms)\n```\n\n`moduleImports` 把 `[ImportDecl l]` 中的 module 一個個拆出來。\n\n```Haskell\nmoduleImports :: Module l -> [String]\n-- Module 長這樣：\n--   Module l (Maybe (ModuleHead l)) [ModulePragma l] [ImportDecl l] [Decl l]\n-- 這裡只留下 [ImportDecl l]\nmoduleImports (Module _ _ _ imports _) = map takeOne imports where\n  takeOne imp = case importModule imp of\n    ModuleName _ modName -> modName\n\n-- getModule 是包裝好的 parseModule\n-- 原來 Control.Exception 用在這裡！\ngetModule :: String -> IO (ParseResult (Module SrcSpanInfo))\ngetModule modName = do\n  let filename = modNameToPath modName\n  catch\n    ( do\n      src <- readFile filename\n      return (parseModule src)\n    )\n    (\\e -> return $ ParseFailed (SrcLoc filename 0 0) (show (e :: SomeException)))\n```\n\n`modNameToPath` 用到 `System.FilePath` 中的 `extSeparator` 和 `pathSeparator` ，好在不同的平台上生出可以用的 filepath 。\n\n```Haskell\nmodNameToPath :: String -> FilePath\nmodNameToPath = go where\n  go [] = extSeparator : "hs"\n  go (\'.\' : ns) = pathSeparator : go ns\n  go (n : ns) = n : go ns\n```\n\n最後 `prettyPrintAllModules` 把放在 `Map` 裡的 module 都印出來。\n\n```Haskell\nprettyPrintAllModules :: M.Map String (Module SrcSpanInfo) -> IO ()\nprettyPrintAllModules = go . M.toAscList where\n  go [] = return ()\n  go ((modName, mod) : ms) = do\n    putStrLn $ modName ++ ":"\n    putStrLn $ prettyPrint mod\n    putStrLn ""\n    go ms\n```\n\n---\n\n> 探しものは何ですか？見つけにくいものですか？\n'},function(e,n,t){"use strict";t.r(n),n.default='## parseModule\n\n> 其實他很邪惡，要用到時才開始讀，雖然他叫 lazy ，但是跟 lazy evaluation 沒有關係。 m*******m 很不喜歡。\n\n先開個新檔案 `sample/A.hs` ：\n\n```Haskell\nmodule Main where\n\nimport Prelude ()\n\nmain = putStrLn "hello, world"\n```\n\n讀檔可以用 `Prelude` 中的 `getContents` ，它會還給你一個 `IO String` ，可以用在 `main` 的 do notation 裡面：\n\n```Haskell\nmain = do\n  inputStr <- getContents\n  putStrLn inputStr\n```\n\n這樣子輸入一行就能看到程式輸出一行。\n\n把 `inputStr` 餵給來自 Language.Haskell.Exts.Annotated 的 `parseModule` ，可以得到 [`ParseResult`][ParseResult] ，再以 `case ... of` 看看結果是 `ParseOk` 還是 `ParseFailed` ，從裡面拆出 AST ：\n\n```Haskell\nmain = do\n  inputStr <- getContents\n  let res = parseModule inputStr\n  putStrLn $ case res of\n    ParseOk mod -> show mod\n    ParseFailed _ msg -> msg\n```\n\nLanguage.Haskell.Exts.Annotated 吐出來的 AST 包含了描述程式碼位置的 `SrcSpanInfo` ，直接印出來大概像：\n\n```Haskell\nModule (SrcSpanInfo {srcInfoSpan = SrcSpan "<unknown>.hs" 1 1 6 1, srcInfoPoints = [SrcSpan "<unknown>.hs" 1 1 1 1,SrcSpan "<unknown>.hs" 1 1 1 1,SrcSpan "<unknown>.hs" 3 1 3 1,SrcSpan "<unknown>.hs" 5 1 5 1,SrcSpan "<unknown>.hs" 6 1 6 1,SrcSpan "<unknown>.hs" 6 1 6 1]}) (Just (ModuleHead (SrcSpanInfo {srcInfoSpan = SrcSpan "<unknown>.hs" 1 1 1 18, srcInfoPoints = [SrcSpan "<unknown>.hs" 1 1 1 7,SrcSpan "<unknown>.hs" 1 13 1 18]}) (ModuleName (SrcSpanInfo {srcInfoSpan = SrcSpan "<unknown>.hs" 1 8 1 12, srcInfoPoints = []}) "Main") Nothing Nothing)) [] [ImportDecl {importAnn = SrcSpanInfo {srcInfoSpan = SrcSpan "<unknown>.hs" 3 1 3 18, srcInfoPoints = [SrcSpan "<unknown>.hs" 3 1 3 7]}, importModule = ModuleName (SrcSpanInfo {srcInfoSpan = SrcSpan "<unknown>.hs" 3 8 3 15, srcInfoPoints = []}) "Prelude", importQualified = False, importSrc = False, importSafe = False, importPkg = Nothing, importAs = Nothing, importSpecs = Just (ImportSpecList (SrcSpanInfo {srcInfoSpan = SrcSpan "<unknown>.hs" 3 16 3 18, srcInfoPoints = [SrcSpan "<unknown>.hs" 3 16 3 17,SrcSpan "<unknown>.hs" 3 17 3 18]}) False [])}] [PatBind (SrcSpanInfo {srcInfoSpan = SrcSpan "<unknown>.hs" 5 1 5 31, srcInfoPoints = []}) (PVar (SrcSpanInfo {srcInfoSpan = SrcSpan "<unknown>.hs" 5 1 5 5, srcInfoPoints = []}) (Ident (SrcSpanInfo {srcInfoSpan = SrcSpan "<unknown>.hs" 5 1 5 5, srcInfoPoints = []}) "main")) (UnGuardedRhs (SrcSpanInfo {srcInfoSpan = SrcSpan "<unknown>.hs" 5 6 5 31, srcInfoPoints = [SrcSpan "<unknown>.hs" 5 6 5 7]}) (App (SrcSpanInfo {srcInfoSpan = SrcSpan "<unknown>.hs" 5 8 5 31, srcInfoPoints = []}) (Var (SrcSpanInfo {srcInfoSpan = SrcSpan "<unknown>.hs" 5 8 5 16, srcInfoPoints = []}) (UnQual (SrcSpanInfo {srcInfoSpan = SrcSpan "<unknown>.hs" 5 8 5 16, srcInfoPoints = []}) (Ident (SrcSpanInfo {srcInfoSpan = SrcSpan "<unknown>.hs" 5 8 5 16, srcInfoPoints = []}) "putStrLn"))) (Lit (SrcSpanInfo {srcInfoSpan = SrcSpan "<unknown>.hs" 5 17 5 31, srcInfoPoints = []}) (String (SrcSpanInfo {srcInfoSpan = SrcSpan "<unknown>.hs" 5 17 5 31, srcInfoPoints = []}) "hello, world" "hello, world")))) Nothing]\n```\n\n如果覺得自己在操作 AST 時，會被 `SrcSpanInfo` 干擾，可以加上 `fmap (const ())` ：\n\n```Haskell\nmain = do\n  inputStr <- getContents\n  let res = parseModule inputStr\n  putStrLn $ case res of\n    ParseOk mod -> show (fmap (const ()) mod)\n    ParseFailed _ msg -> msg\n```\n\n`fmap` 讓 `const ()` 作用在整個 AST 上（前面提到的 `ann` 和 `amap` 則作用在單一個 node 上），把全部的 `SrcSpanInfo` 清光光，變成：\n\n```Haskell\nModule () (Just (ModuleHead () (ModuleName () "Main") Nothing Nothing)) [] [ImportDecl {importAnn = (), importModule = ModuleName () "Prelude", importQualified = False, importSrc = False, importSafe = False, importPkg = Nothing, importAs = Nothing, importSpecs = Just (ImportSpecList () False [])}] [PatBind () (PVar () (Ident () "main")) (UnGuardedRhs () (App () (Var () (UnQual () (Ident () "putStrLn"))) (Lit () (String () "hello, world" "hello, world")))) Nothing]\n```\n\n在還沒有真正的 pretty print 前，手動排版後，看起來是：\n\n```Haskell\nModule\n  ()\n  (Just (ModuleHead () (ModuleName () "Main") Nothing Nothing))\n  []\n  [ ImportDecl\n      { importAnn = ()\n      , importModule = ModuleName () "Prelude"\n      , importQualified = False\n      , importSrc = False\n      , importSafe = False\n      , importPkg = Nothing\n      , importAs = Nothing\n      , importSpecs = Just (ImportSpecList () False [])\n      }\n  ]\n  [ PatBind\n      ()\n      (PVar () (Ident () "main"))\n      (UnGuardedRhs\n        ()\n        (App\n          ()\n          (Var () (UnQual () (Ident () "putStrLn")))\n          (Lit () (String () "hello, world" "hello, world"))))\n      Nothing\n  ]\n```\n\n對我來說，在習慣查文件前，可以對整個 AST 長什麼樣子，有個概念。\n\n[ParseResult]: https://hackage.haskell.org/package/haskell-src-exts-1.17.1/docs/Language-Haskell-Exts-Parser.html#t:ParseResult\n'},function(e,n,t){"use strict";t.r(n),n.default='## 讀檔與蒐集\n\n用了 `readFile` ，就脫離不了 `IO` 。於是只好把希望得到的，放在 `IO` 裡面：\n\n```Haskell\nreadModule :: String -> IO (Maybe (Module SrcSpanInfo))\n```\n\n一開始先來個 `do` ，躲到 `IO` 裡面去：\n\n```Haskell\nreadModule mod = do\n  content <- readFile $ modName ++ ".hs"\n  let res = parseModule content\n  return $ case res of\n    ParseOk mod -> Just mod\n    ParseFailed _ msg -> Nothing\n```\n\n蒐集 AST 中 import 的 `Module` 時，要用到 `readModule` 的結果， `IO` 也跟著出現了：\n\n```Haskell\ncollectModule :: Module SrcSpanInfo -> IO (M.Map String Bool)\n```\n\n這件事一直讓我想起 [What Color is Your Function][function-color] 。對了，別忘記 import `Map` ：\n\n```Haskell\nimport Language.Haskell.Exts.Annotated\nimport qualified Data.Map.Strict as M\n```\n\n並在 `my-project.cabal` 中補上 `containers` ：\n\n```\nexecutable my-project-exe\n  hs-source-dirs:      app\n  main-is:             Main.hs\n  ghc-options:         -threaded -rtsopts -with-rtsopts=-N\n  build-depends:       base\n                     , my-project\n                     , containers\n                     , haskell-src-exts\n  default-language:    Haskell2010\n```\n\n先試著蒐集不重複的 `Module` 就好，不遞迴讀檔：\n\n```Haskell\ncollectModule mod = do\n  retrun $ case mod of\n    Module _ mModuleHead _ imports _ -> go M.empty imports where\n      modName = case mModuleHead of\n        Just (ModuleHead _ (ModuleName _ name) _ _) -> name\n        Nothing -> "Main"\n      go acc [] = acc\n      go acc (m : ms) =\n        let\n          (Module _ name) = importModule m\n        in\n          case M.member name acc of\n            False -> go (M.insert name True acc) ms\n            True -> go acc ms\n    _ -> M.empty\n```\n\n回到 `main` ，可以這樣印出單一個檔案中 import 的東西：\n\n```Haskell\nmain = do\n  mMod <- readModule "A"\n  res <- case mMod of\n    Just mod -> collectModule mod\n    Nothing -> return M.empty\n  putStrLn $ show res\n```\n\n[function-color]: http://journal.stuffwithstuff.com/2015/02/01/what-color-is-your-function/\n'},function(e,n,t){"use strict";t.r(n),n.default="## 遞迴讀檔\n\n> 想要知道自己這個 `Module` 叫什麼名字的話，看 `ModuleHead` ，想要看 import 出些什麼的話，看 `[ImportDecl]` 。\n>\n> 在上面還推薦大家要看的一個 library 叫做 Data.Map.Strict 。這個是我用來記錄 `Module` 到底讀過了沒有。你也可以用 `List` ，但這個效率會比較好一點。只是用起來比較複雜一點。\n\n在遞迴讀檔前，花了不少時間整理思路，最後的想法是：\n\n1. 我需要一個 `Map` 來蒐集 module name 與 module AST 的對應關係。\n2. 我希望得到的結果在 `IO` 裡面，因為 `readFile` 會給我 `IO` ，我也需要 `IO` 才能 pretty print 。\n3. 我希望可以遞迴地處理所有 import 進來的檔案。\n\n於是 type 長這樣：\n\n```Haskell\ncollectModule :: IO (M.Map String (Module SrcSpanInfo)) -> Module SrcSpanInfo -> IO (M.Map String (Module SrcSpanInfo))\n```\n\n程式一開始先處理 `Module` ：\n\n```Haskell\ncollectModule ioMap mod =\n  case mod of\n    Module _ mModuleHead _ imports _ -> -- 略\n    _ -> ioMap\n```\n\n然後問問 Map 裡面是不是已經有現在要加入的 `Module` 了：\n\n```Haskell\ncollectModule ioMap mod =\n  case mod of\n    Module _ mModuleHead _ imports _ -> do\n      let\n        modName = case mModuleHead of\n          Just (ModuleHead _ (ModuleName _ name)) -> name\n          Nothing -> \"Main\"\n      map' <- ioMap\n      let\n        map'' = case M.member modName map' of\n          False -> M.insert modName mod map'\n          True -> map'\n        -- 略\n    _ -> ioMap\n```\n\n在那個 `do` 之後就是 `IO` 的領域了，於是 `let` 後面不用 `in` ， `map'` 則是把 type 是 `IO (M.Map String (Module SrcSpanInfo))` 的 `ioMap` 裡的 `(M.Map String (Module SrcSpanInfo))` 拿出來。\n\n奇怪的是那兩個 `let` 與 `case ... of` 的組合，如果寫：\n\n```Haskell\nlet modName = case mModuleHead of\n  Just (ModuleHead _ (ModuleName _ name)) -> name\n  Nothing -> \"Main\"\n```\n\n是會得到 parsing error 的，但是寫：\n\n```Haskell\nlet modName = case mModuleHead of Just (ModuleHead _ (ModuleName _ name)) -> name\n                                  Nothing -> \"Main\"\n```\n\n會過，像前文那樣寫也會過。覺得前文那種寫法比較美觀，故沒有把 `let` 和 `case ... of` 寫在一起。\n\n---\n\n最後則是讀檔，再遞迴地呼叫自己：\n\n```Haskell\ncollectModule ioMap mod =\n  case mod of\n    Module _ mModuleHead _ imports _ -> do\n      let\n        modName = case mModuleHead of\n          Just (ModuleHead _ (ModuleName _ name)) -> name\n          Nothing -> \"Main\"\n      map' <- ioMap\n      let\n        map'' = case M.member modName map' of\n          False -> M.insert modName mod map'\n          True -> map'\n        go acc [] = acc\n        go acc (m : ms) = go modMap ms where\n          modMap = do\n            let (ModuleName _ name) = importModule m\n            case name of\n              \"Prelude\" -> acc\n              _ -> do\n                mMod <- readModule name\n                case mMod of\n                  Just mm -> collectModule acc mm\n                  Nothing -> acc\n        go (return map'') imports\n    _ -> ioMap\n```\n\n`go` 的 type 其實是：\n\n```Haskell\ngo :: IO (M.Map String (Module SrcSpanInfo)) -> [ImportDecl] -> IO (M.Map String (Module SrcSpanInfo))\n```\n\n當 `go` 吃到的 `[ImportDecl]` 空了（`[]`）時，就把 `acc` 原封不動地還回去。\n\n當 `[ImportDecl]` 中還有東西時，就先把裡面第一個東西處理完，放到 `modMap` 中，再把剩下的交給 go 繼續處理。而 `modMap` 是什麼呢？是先看看這第一個叫 `m` 的 `ImportModule` 的名字，如果不是預設會自動 import 的 `Prelude` 的話，才交給 `readModule` 把 module 讀進來，看看有沒有讀成功（是 `Just mm` 還是 `Nothing`），成功就交給 `collectModule acc mm` 遞迴處理，失敗就傳回本來的 `acc` 。不用先把 `acc` 這個 `IO (M.Map ...)` 裡的 `Map` 拆出來，那在下一次遞迴時會被 `collectModule` 處理好。\n\n最後 `go (return map'') imports` 之所以要加上 `return` ，是為了把沒è¢«放在 `IO` 裡的 `map''` 放進去，這樣才能交給 `go` 處理。\n\n---\n\n然後 `main` 只要這樣寫：\n\n```Haskell\nmain :: IO ()\nmain = do\n  inputStr <- getContents\n  let res = parseModule inputStr\n  allMods <- case res of\n    ParseOk mod -> collectModule (return M.empty) mod\n    ParseFailed _ msg -> return M.empty\n  mapM_ putStrLn $ fmap prettyPrint allMods\n```\n\n最後那行 `mapM_ putStrLn $ fmap prettyPrint allMods` 可以讀作：把 `prettyPrint` 套到所有 modules 上面，然後一個一個印（`putStrLn`）出來， `mapM_` 最後會還給我們 `IO ()` ，功德圓滿。\n\n只剩處理檔案路徑，就完成這次的進度了。\n"},function(e,n,t){"use strict";t.r(n),n.default='## 檔名、路徑\n\n把 `sample/` 下的檔案做了些調整：\n\n```Haskell\n-- A.hs\nmodule Main where\n\nimport Prelude ()\nimport B\n\nmain = putStrLn $ hello ++ ", " ++ world\n```\n\n```Haskell\n-- B.hs\nmodule B where\n\nimport Prelude ()\nimport Chat.C\n\nhello = "hello"\n```\n\n```Haskell\n-- Chat/C.hs\nmodule Chat.C where\n\nworld = "world"\n```\n\n現在要把 `"Chat.C"` 變成 `"Chat/C.hs"` 。\n\n在 [System.FilePath][filepath] 的協助下，很簡單就能做到。\n\n先在 `my-project.cabal` 加上\n\n```\nbuild-depends:       base\n                   , my-project\n                   , filepath\n                   , -- 略\n```\n\n然後：\n\n```Haskell\ntoModPath :: String -> String\ntoModPath str = map go str where\n  go \'.\' = pathSeparator\n  go c = c\n```\n\n處理 module 名時則：\n\n```Haskell\nimport System.FilePath\n-- 略\ncontent <- readFile $ toMdoPath modName ++ (extSeparator : "hs")\n-- 後略\n```\n\n`pathSeparator` 和 `extSeparator` 都是 System.FilePath 提供的函數，會按使用的平台（POSIX 或 Windows），給出正確的 `Char` 。\n\n[filepath]: https://hackage.haskell.org/package/filepath-1.4.1.0\n\n## 然後\n\n第一次 BYOHC 重開機（？）的進度就到此。\n\n當初許下的願望，像是 lambda calculus interpreter ，已經做出來了。也學到很多沒想過會去學的事，像英文閱讀速度就比之前快。可是這其實只是入門，離能把 Haskell 當成自己的工具、在日常與工作上使用，還有很長一段距離。也許接下來還是回到初衷，看看一個 functional language compiler 是怎麼建立的、看看前人踩了多少雷，補足匱乏的知識，才有往前走的動力。\n'},function(e,n,t){"use strict";t.r(n),n.default="太久沒寫，先回憶一下進度：\n\n* 實作 desugar 的骨幹, 走訪整個 syntax tree  \n  (可以定義一個 class, 然後把所有的 syntax node type 加進 instance;  \n   或是為每一個 syntax node type 定義一個不一樣的函數名的作法也可以;  \n   也可以兩種都有...)\n\n* 定義自己的 monad 來攜帶未來要加的資料結構, 讓這個骨幹的運行是在這個 monad 裡  \n  (使用 mtl 的 Control.Monad.State 也可以)\n  \n一直聽不懂 desugar 的骨幹是什麼，只記得要把資料存在 monad 的 context 中，但對於何時修改 context 中的資料，還有該 monad 的 type 該長什麼樣子，一點概念都沒有。\n\n這次乖乖讀 LYaH ，才知道 value constructor 和 type constructor 的差別、才知道他們本來長什麼樣子。例如平常寫 `data Maybe a = Nothing | Just a` ，其中 Maybe 是 type constructor ，它的 type 是 `* -> *` ，而 `Nothing` 和  `Just` 是 value constructor ，，它們的 type 是 `Maybe a` 和 `a -> Maybe a` 。\n\n**它們都是 function ！它們都是 function ！ 它們都是 function ！**\n\n寫成 GADT 更清楚（謝謝 petercommand 介紹 KindSignatures ）：\n\n```\ndata Maybe :: * -> * where\n  Nothing :: Maybe a\n  Just a :: a -> Just a\n```\n\n了解這件事，之後才懂得靠 `(<$>)` 和 `(<*>)` 在拜訪 AST 時，記錄下資訊。\n\n---\n\n回到坑裡，坑主所謂：\n\n> 可以定義一個 class, 然後把所有的 syntax node type 加進 instance\n\n指的是現在 [DesugarClass.hs][DesugarClass.hs] 的作法，定義了：\n\n```\nclass Monad m => Desugarable m a where\n  desugar :: a -> m a\n```\n\n那傳說中五百多行的 [Desugar.hs][Desugar.hs] 在做的事情，就是為 Annotated.Syntax 下每個 data 實作 `desugar` 。\n\n而：\n\n> 或是為每一個 syntax node type 定義一個不一樣的函數名的作法也可以\n\n指的應該是較早的作法，也就是 transpiler 剛開始時，靠 Template Haskell 生出來的那些 `deIfName :: Name -> Name` 、 `deIfOp :: Op -> Op` 。\n\n[DesugarClass.hs]: https://github.com/CindyLinz/Haskell.js/blob/78429a49181a15f6bdae426f17bdae722ad17141/trans/src/DesugarClass.hs\n[Desugar.hs]: https://github.com/CindyLinz/Haskell.js/blob/78429a49181a15f6bdae426f17bdae722ad17141/trans/src/Desugar.hs\n"},function(e,n,t){"use strict";t.r(n),n.default='坑主在五月底時曾建議可以從最簡單的 context 開始 -- 記錄現在 AST 中含的 expression 數量就好：\n\n```\ntype Info = Int\n```\n\n然後會有一個叫做 Desugar 的 data ：\n\n```\ndata Desugar a = D (Info, a)\n  deriving (Show)\n```\n\n根據她的建議：\n\n> 定義自己的 monad 來攜帶未來要加的資料結構, 讓這個骨幹的運行是在這個 monad 裡\n\n我們必須要實作：\n\n```\ninstance Monad Desugar where\n  return = pure\n  D (info, module) >>= f = ...\n```\n\n但是， `return` 所代表的 minimum context 是什麼？我該在何時改變 info 來反應 expression 數量更新了呢？光看 `return` 和 `(>>=)` 一點頭緒也沒有。事後我才知道， desugar 這件事可以分成兩個問題來看。\n\n其一是如何從 AST 中把我們要的資訊找出來，如果不對 AST 做任何改變，那就是單純把 AST 拆開，經過一些計算再組合回去。這件事可以靠 Applicative 的 `(<$>)` 和 `(<*>)` 幫我們做到。\n\n其二是當遇上放在其他 context （例如 `Maybe` 或 `List` ）中的 `Desugar` 時，要怎麼把已經找出來的資訊組合起來？這件事情靠 Monad 的 `(>>=)` 做到。\n\n---\n\n整個 Haskell.Src.Exts 的 AST 太複雜了，不如先從簡單的 AST 開始。哪裡有簡單的 AST 呢？剛好 BYOHC 前面做過 lambda calculus XD\n\n```\ndata Term a = Var a\n            | Lam a (Term a)\n            | App (Term a) (Term a)\n  deriving (Show)\n```\n\n現在準備我們的 `Desugar` ：\n\n```\ntype Info = Int\n\ndata Desugar a = D { runDesugar :: (Info, a) }\n  deriving (Show)\n```\n\n`Term` 裡面沒有 `Maybe` 或 `List` ，於是做到 Applicative 就可以了：\n\n```\ninstance Functor Desugar where\n  fmap f (D (info, term)) = D (info, f term)\n\ninstance Applicative Desugar where\n  pure term = D (0, term)\n  D (info, f) <*> D (info\', t) = D (info + info\', f t)\n```\n\n為了方便直接寫 `desugar` 而不是 `desugarVar`, `desugarLam`, `desugarApp` ，來做一個自己的 type class ：\n\n```\n-- 需要用到 MultiParamTypeClasses 這個 language extension ，我還不是很明白它的意義與重要性\nclass (Applicative m) => Desugarable m t where\n  desugar :: t -> m t\n```\n\n然後就可以實作給各種 `Term` 用的 `desugar` ：\n\n```\ninstance Desugarable Desugar (Term a) where\n  desugar (Var a) = Var <$> pure a\n  desugar (Lam a term) = Lam <$> pure a <*> desugar term\n  desugar (App term term\') = App <$> desugar term <*> desugar term\'\n```\n\n看看 `Lam a term` 和 `Lam <$> pure a <*> desugar term` ，是不是就像拆開來做些什麼，再組合起來？ XD\n\n現在算算有幾個 `Lam` 。加上陽春的 count function ：\n\n```\nincrease :: Desugar a -> Desugar a\nincrease (D (info, term)) = D (info + 1, term)\n```\n\n並把 `desugar` 改成：\n\n```\ninstance Desugarable Desugar (Term a) where\n  desugar (Var a) = Var <$> pure a\n  desugar (Lam a term) = increase (Lam <$> pure a <*> desugar term)\n  desugar (App term term\') = App <$> desugar term <*> desugar term\'\n```\n\n之後會再改進這個 `increase` ，讓它跟 `(>>=)` 合作，現在先：\n\n```\nmain :: IO ()\nmain =\n  putStrLn . show . runDesugar . desugar $\n    App (Lam "x" (Lam "y" (Var "x"))) (Var "z")\n```\n\n就能看到它輸出：\n\n```\n(2,App (Lam "x" (Lam "y" (Var "x"))) (Var "z"))\n```\n\n的確有 2 個 `Lam` 。\n'},function(e,n,t){"use strict";t.r(n),n.default="明明只是入門，卻讓苦惱了半年，程度真差。\n\n```\ninstance Functor Desugar where\n  fmap f (D (info, term)) = D (info, f term)\n\ninstance Applicative Desugar where\n  pure term = D (0, term)\n  D (info, f) <*> D (info', t) = D (info + info', f t)\n```\n\n上次讓 `Desugar` 成為了 Functor 還有 Applicative ，於是可以讓一個函式作用在被 `Desugar` 包起來的 `Term` 上面（`fmap :: (a -> b) -> f a -> f b`）。也有了最小最小的 context （`pure :: a -> f a`），跟將收在 `Desugar` 中的函式作用在被包起來的其他東西的辦法（`(<*>) :: f (a -> b) -> f a -> f b`）。\n\n再來我好奇的是，他們符合各自該符合的 laws 嗎？LYaH 教我 Functor 和 Applicative 得符合某些規定，而那些規定是 compiler 沒辦法幫忙驗證的。\n\n# Functor Laws\n\n```\nfmap id = id\nfamp (p . q) = fmap p . fmap q\n```\n\nFunctor Laws 有兩個，一是 `fmap id` 和 `id` 作用起來是一樣的。 `Desugar` 的 `fmap` 對裡面的 `Term` 和藏起來的 `Info` 沒有做多餘的事情，很明顯滿足這點。另外一條是 `fmap (p . q)` 和 `fmap p . fmap q` 作用起來是一樣的，如果從「打開...做事情...關起來」的角度看，那前者是打開來做兩件事然後關起來，後者是打開做一件事，關起來，然後再打開做一件事情，再關起來。也很明顯滿足了。\n\n注意到 `fmap` 的數量，在第一條 law 裡，從 1 個變成 0 個，在第二條 law 裡，從 1 個變成 2 個，我還不知道該怎麼理解這件事、或是這件事有沒有什麼意義。\n\n# Applicative Functor Laws\n\n```\npure id <*> v = v\npure f <*> pure x = pure (f x)\nu <*> pure y = pure ($ y) <*> u\npure (.) <*> u <*> v <*> w = u <*> (v <*> w)\n```\n\n第一條 `pure id <*> v = v` 可以說是 `fmap id = id` 的進階版（或者寫成 `fmap id a = a` 比較一致？），只是前者的 `id` 先放在一個最小的 context 中了。\n\n第二條 `pure f <*> pure x = pure (f x)` ，也算明顯。對 `Desugar` 來說，最小 context 裡的 `Info` 都是 `0`，相加和本來一樣沒有變化，也符合這條 law 。\n\n第三條 `u <*> pure y = pure ($ y) <*> u` ，我想重點也不是在 `u` 裡面的函式怎麼作用在 `y` 上，而是在 `pure` 從右邊換到左邊的過程中，是不是不造成多餘的改變？在 `Desugar` 中， `pure` 在右邊會變成 `info + 0` ，和 `pure` 在左邊的 `0 + info` 是一樣的。\n\n第四條我一開始是看不明白的，現在看來，對 `Desugar` 來說，是表示 `0 + u的info + v的info + w的info` 與 `u的info + (v的info + w的info)` 不該有差別。\n\n---\n\n再來想加上被 `[]` 包起來的 `Term` ，然後需要讓 `Desugar` 也是個 `Monad` ，接著配上個和 do notation 合作起來更融洽的 `increase` ，就可以把這一切用在 [haskell-src-exts][haskell-src-exts] 給我們的 AST 上了。\n\n[haskell-src-exts]: https://hackage.haskell.org/package/haskell-src-exts-1.17.1\n"},function(e,n,t){"use strict";t.r(n),n.default="兔子好像很怕我，每次見面，都小心翼翼。  \n她一邊露出友好的笑容，一邊搬著鐵柱繞來繞去。\n\n（嘿咻，這邊插一支）  \n（然後那邊插一支）  \n（剩下屋頂，籠子就蓋好了！）\n\n「好吧，就待在妳的籠子裡吧」，我這樣想著。\n\n這樣至少還可以保持人形。\n"},function(e,n,t){"use strict";t.r(n),n.default="[haskell-src-exts][haskell-src-exts] 的 AST 複雜很多，會遇到放在 `Maybe` 和 `[]` 裡面的 AST 。這時要是只用 `famp` ，就會遇上把 `[Term a]` 變成 `[Desugar (Term a)]` 這種窘境。真正想得到的是 `Desugar [Term a]` ，接著才可以繼續 `(<*>)` 下去。\n\n[haskell-src-exts]: https://hackage.haskell.org/package/haskell-src-exts-1.17.1\n\n先把本來的 Term 改成這樣：\n\n```\ndata Term a = Var a\n            | Lam [a] (Term a)\n            | App (Term a) [Term a]\n  deriving (Show)\n```\n\n表示現在 `Lam` 可以吃多個變數。（我知道這樣不對，畢竟有 currying 就好了，但為了練習就... XD）\n\n`desugar` 函數就變成：\n\n```\ninstance Desugarable Desugar (Term a) where\n  desugar (Var a) = Var <$> pure a\n  desugar (Lam aList term) = Lam <$> traverse pure aList <*> desugar term\n  desugar (App term termList) = App <$> desugar term <*> traverse desugar termList\n```\n\n# increase\n\n在這個練習中，我給自己的目標是算出 term 的數量，於是得增加 `Lam <$> traverse pure aList <*> desugar term` 生出來的 `Desugar (Term a)` 中的 `info` 。\n\n為了可以這樣寫：\n\n```\ndesugar (Lam aList term) = do\n  increase 1\n  Lam <$> traverse pure aList <*> desugar termm\n```\n\n就得做出這樣的函數：\n\n```\nincrease :: Int -> Desugar ()\nincrease i = D (i, ()) :: Desugar ()\n```\n\n當兩個 `Desugar a` 被 `(>>=)` 接在一起時，得把 tuple 的後面那項送給 monad 使用者，再將得出的結果中的 `info` （第一項）加在一起計數，做出新的 `Desugar a` ：\n\n```\ninstance Monad Desugar where\n  return = pure\n  D (info, a) >>= f =\n    let\n      D (info', a') = f a\n    in\n      D (info + info', a')\n```\n\n# Monad Laws\n\n最後檢查一下這個 monad 有沒有遵守 monad laws ：\n\n```\nreturn a >>= f = f a -- left identity\nm >>= return = m -- right identity\n(m >>= f) >>= g = m >>= (\\x -> f x >>= g) -- associativity\n```\n\n在 left identity law 中， `return a` 得到的 `info` 是 `0` ，不影響 `f a` 的結果。\n\n在 right identity law 中， `m` 帶的 `info` 會和 `return` 帶來的 `0` 加在一起，一樣不影響 `m` 。\n\n在 associativity law 中，先完成 `m >>= f` 會把 `m` 和 `f` 帶來的 `info` 先加在一起，再加上 `g` 帶來的 `info` ；而等號右邊，會加把 `f` 和 `g` 帶來的 `info` 相加，再加上 `m` 的， `+` 自己就有結合律，故此 monad 也有。\n\n---\n\n拖了三個月。這段時間斷斷續續讀著 [Haskell Programming from First Principle][haskellbook] ，大概讀了四分之一。 haskell-src-exts 在這之中升到了 0.18 版，現在只有 Annotated AST ，還補上了一些 type 。十月初試著[升級看看][upgrade]，沒什麼困難，就是打字罷了。剛發現已經到了 0.19 版，不知道又改了些什麼？\n\n[haskellbook]: http://haskellbook.com\n[upgrade]: https://github.com/caasi/trans/commit/ed8cf0b2cab2bd6f581a2a453035c60ac6cd37c2\n\n前途茫茫，越來越在意自己沒有扎實的電腦科學基礎。之前被推薦過 coursera 上的 Programming Languages, Part A ，也許是個起點。\n"},function(e,n,t){"use strict";t.r(n),n.default="這一年來學習了函數式程式語言，才發現自己因為缺乏資訊本科訓練、貪玩不求甚解，給自己帶來多大的劣勢。剛好今年鐵人賽正要開始，想把它當成自我挑戰，撐 30 天，把想補的知識補起來。\n\n目前鎖定 [Implementing functional languages: a tutorial][IFL] ，希望可以把書上的內容實作一遍，並記錄下自己的思考和心得，以期待哪一天成為同事、朋友的助力。\n\n[IFL]: http://research.microsoft.com/en-us/um/people/simonpj/Papers/pj-lester-book/\n"},function(e,n,t){"use strict";t.r(n),n.default="```\ndata Expr a\n  = EVar Name\n  | ENum Int\n  | EConstr Int Int\n  | EAp (Expr a) (Expr a)\n  | ELet\n      IsRec\n      [(a, Expr a)]\n      (Expr a)\n  | ECase\n      (Expr a)\n      [Alter a]\n  | ELam [a] (Expr a)\n```\n\n今天幾乎完成了 `pprint` ， `pprint` 把 `CoreProgram` 還有 `CoreExpr` 轉成中間格式 `Iseq` ，最後再轉成 `String` 。\n\n```\ndata Iseq\n  = INil\n  | IStr String\n  | IAppend Iseq Iseq\n  | INewline\n  | IIndent Iseq\n```\n\n`CoreExpr` 有 `EVar`, `ENum`, `EConstr`, `EAp`, `ELet`, `ECase`, `ELam` 七種 data constructor ，但排版用的 `Iseq` 只有 `INil`, `IStr`, `IAppend` 三種，就算加上未來的 `IIndent` 和 `INewline` 也不過五種。最後輸出的 `String` 就只有一種了。\n\n可見 `pprint` 是個損失資訊的過程，資訊變少的新結構 `Iseq` 是專門為 pretty print 設計的，但原來的 `CoreExpr` 是為了直譯或是編譯而設計的。\n\n在寫 `pprint` 時的錯誤少了，表示過去一年沒白寫吧？但繞了好多彎路。\n\n---\n\n加上了 `INewline` 和 `IIndent` ， `flatten` 時要多一個參數追蹤現在印到哪個 column ，但只在 `IIndent` 出現時，才真的把位移與當下的 `Iseq` 綁在一起。\n\n接下來要為 infix operators 加上 precedence level ，並看情況補括號，棄用自動加括號的 `pprAExpr` 函數。\n"},function(e,n,t){"use strict";t.r(n),n.default="趁機複習一下這幾天學到的東西，我會看到什麼？\n\nImplementing Functional Languages 一書不講 front-end ，也就是把目標語言 desugar 成 Core language 那部分，不像前身 the Implementation of Functional Languages 。另外一開始就當做讀者知道 supercombinator 是什麼東西。\n\n書中範例是以 Miranda 寫成，似乎沒有 type classes ，學習起來也許會輕鬆些？現在讀到的程式都可以翻譯成 Haskell 。\n\n雖然可以把值參數當成零個參數的函數，但是這東西有個名字叫做 constant applicative forms (CAFs) ，得另外處理。\n\n```\nPack{7,2} (Pack{6,1} 3) (Pack{6,1} 4)\n```\n\ntype 會被表示成 `Pack{1, 0}`, `Pack{2, 2}` ，前面的數字是 tag ，後面的是參數數量。STG 的 Tagless ，莫非指的就是這個 tag ？\n\n之後想比較 Core 和 [Haskell-基本語法與-lambda-程式的對應][desugared] 的異同，願能幫我把實作拆得更合理。\n\n[desugared]: https://github.com/CindyLinz/BYOHC-Workshop/blob/master/workshop-2015.11.12.md#haskell-基本語法與-lambda-程式的對應\n\n---\n\n今天才知道原來 Miranda 不是開源的，想用它寫也不成 XD\n\n查 Miranda 和 type classes 時又遇到 [A History of Haskell: Being Lazy With Class][BLwC] ，也許是時候讀完它了。\n\n[BLwC]: http://haskell.cs.yale.edu/wp-content/uploads/2011/02/history.pdf\n\n---\n\n今天做完了 pretty print 中的 operator precedence ，正如書中所說：\n\n> The easiest way to achieve this is to give pprExpr an extra argument which indicates the precedence level of its context, and then use this to decide whether to add parentheses around the expression it produces.\n\n將 `pprExpr` 的 type 改成 `Int -> CoreExpr -> Iseq` ，第一個參數表示這個 `CoreExpr` 外面的 operator precedence ，接著和裡面的 operator precedence 比較，決定該不該加括號就好了。\n\n瞭解 pretty print 怎麼運作後，就不用像去年那樣手工幫 [haskell-src-exts][haskell-src-exts] 的 data constructors 縮排了，照理說應該可以做自己的 pretty print ，不像它給的那樣印出真正的 Haskell code ，而是把 data constructors 漂亮地印出來。\n\n接下來要面對 parser 。\n\n[haskell-src-exts]: https://hackage.haskell.org/package/haskell-src-exts\n"},function(e,n,t){"use strict";t.r(n),n.default="接著書上教大家做 parser ，把 parser 分成兩個部分： lexical analysis `clex :: String -> [Token]`和 syntax analysis `syntax :: [Token] -> CoreProgram` 。 \n\n`clex` 那部分就是切 token ，保留行號並移除註解（ Core 的註解竟然是 `||` 開頭，是要跟 Haskell 的 `--` 正交嗎？）。\n\n因為沒受過教育（沒念到大三，活該），本來很怕 parser 超難，沒想到竟然是從 parser combinator 講起，而且沒有 monoid 也沒有 monad （但是還是可以看到他們的影子）！查了一下， Haskell 到了 1996 年才把 monad 用在 I/O 上，而這個問題 [Who invented Haskell's type classes?][who-type-classes] 中提到 type classes 出自 [How to make ad-hoc polymorphism less ad-hoc][type-classes] ，是 1988 年的事。\n\n至於 Haskell 是不是從設計之初就有 type classes ，也許讀完 Being Lazy with Class 後才會知道 XD\n\n[who-type-classes]: http://softwareengineering.stackexchange.com/questions/247023/who-invented-haskells-type-classes\n[type-classes]: http://homepages.inf.ed.ac.uk/wadler/topics/type-classes.html\n\n---\n\n按之前的習題，現在 token 長這樣：\n\n```\ntype LineNum = Int\ntype Token = (LineNum, String)\n```\n\n而 parser 要做的事情有：\n\n  * 把一串 token 轉成某種結構\n  * 結果可能不只一種，也有可能沒結果（失敗）\n  * 得留下剩下的 token ，好交給下一棒\n  * 小 parser 的結果可以組合成大的\n\n於是 parser 長這樣：\n\n```\ntype Parser a = [Token] -> [(a, [Token])]\n```\n\n想起 Learn you a Haskell 把 list 稱為 non-deterministic values ，就是這樣用吧。\n\n---\n\n最基本的 parser 是 `pLit` 和 `pVar` ：\n\n```\npLit :: String -> Parser String\npVar :: Parser String\n```\n\n`pLit` 讀到跟它的 String 相同的 token 時，會成功，否則得到 `[]` 。 `pVar` 現在則是看到 token 就成功。\n\n為了把不同可能性串在一起，有了 `pAlt` ：\n\n```\npAlt :: Parser a -> Parser a -> Parser a\npAlt p1 p2 toks = (p1 toks) ++ (p2 toks)\n```\n\n那個 `(++)` 看起來很眼熟，如果換成 `(<>)` 就聞到了 monoid 的味道...。\n\n這邊還有一個陷阱，是由 `type` 關鍵字造成的。明明 `pAlt` 只有兩個 `Parser a` 參數，實作時卻吃 `p1`, `p2`, `toks` 三個東西...。原來是因為 `Parser a` 實際上是 `[Token] -> [(a, [Token])]` ，所以 `pAlt p1 p2 toks` 其實可以看成 `(pAlt p1 p2) toks` 。\n\n記得她在「實例介紹 Monad 應用設計與實作」演講中也抱怨過初學時踩過這個雷。\n\n另外這次讀 IFL 才知道 Haskell 可以有很多怪寫法，想是把 pattern matching 跟 guard 混著用：\n\n```\nclex _ [] = []\nclex lineNum (c:cs)\n  | c == '\\n' = clex (lineNum + 1) cs\n```\n\n還有在 Miranda 裡，\n\n```\nclex (c:cs) = c == '\\n' | clex cs\n```\n\nguard 看起來像 JS 的 `||` XD\n\n---\n\n為了把小 parser 組合在一起，有了 `pThen` ：\n\n```\npThen :: (a -> b -> c) -> Parser a -> Parser b -> Parser c\npThen combine p1 p2 toks\n  = [ (combine v1 v2, toks2) | (v1, toks1) <- p1 toks\n                             , (v2, toks2) <- p2 toks\n    ]\n```\n\n要是 `p1 toks` 或是 `p2 toks` 沒結果，那整個就都沒結果，這點讓我想到 `(>>=)` 。而且 Miranda 沒有 monad 但是卻出現上述這種 list comprehension ，可見它還不是 do notation 的 syntactic sugar 。\n\n---\n\n還可以組合出找 0~n 個東西的 parser ：\n\n```\npEmpty :: a -> Parser a\npEmpty a toks = [(a, toks)]\n\npZeroOrMore :: Parser a -> Parser [a]\npZeroOrMore p = (pOneOrMore p) `pAlt` (pEmpty [])\n\npOneOrMore :: Parser a -> Parser [a]\npOneOrMore p = pThen (:) (pZeroOrMore p)\n```\n\n`pEmpty` 看起來就一副 `mempty` 或 `pure` 的樣子， `pOneOrMore` 中用到的 `(:)` 則讓我想起 `mappend` ... = =|||\n\n有趣的是，第一次寫，誤把 `pOneOrMore` 寫成：\n\n```\npOneOrMore p = pThen (:) (pOneOrMore p)\n```\n\n成了 `pInfinite` ，對上有限長度的 `[Token]` ，自然失敗，得到 `[]` 。\n\n還有長得像 `fmap`, `<*>` ，根本就是 `<**>` 的 `mApply :: Parser a -> (a -> b) -> Parser b` ，等這些工具都準備好，才真的開始 parse Core language 。\n\n今天先這樣。\n"},function(e,n,t){"use strict";t.r(n),n.default='<iframe width="740" height="555" src="https://www.youtube.com/embed/06x8Wf2r2Mc" frameborder="0" allowfullscreen></iframe>\n\n沒想到 SPJ 同樣以 Being Lazy with Class 為名講過 Haskell 的歷史，非常歡樂 XD\n\n目前好奇的部分有：\n\n  * [type classes][type-classes] 一開始就存在了，是為了 `(==)` ，還用一張投影片展示其實作背後的概念\n  * 介紹 [QuickCheck][QuickCheck] 如何善用 type classes （一半聽不懂），並建議大家讀論文 XD\n  * 介紹了 GHC 中的 [SystemFC][SystemFC] ，和 IFL 中的 Core 差距滿大的，但小到一張投影片就塞得下！\n\n```\ndata Expr\n  = Var    Var\n  | Lit    Literal\n  | App    Expr Expr\n  | Lam    Var Expr\n  | Let    Bind Expr\n  | Case   Expr Var Type [(AltCon, [Var], Expr)]\n  | Cast   Expr Coercion\n  | Note   Note Expr\n  | Type   Type\ntype Coercion = Type\ndata Bind   = NonRec Var Expr | Rec [(Var, Expr)]\ndata AltCon = DEFAULT | LitAlt Lit | DataAlt DataCon\n```\n\n不知道哪天可以搞懂？ XD\n\n---\n\n最後一個問問題的人是 Guy Steele ！？\n\n[type-classes]: https://youtu.be/06x8Wf2r2Mc?t=1513\n[QuickCheck]: https://youtu.be/06x8Wf2r2Mc?t=1790\n[SystemFC]: https://youtu.be/06x8Wf2r2Mc?t=2291\n'},function(e,n,t){"use strict";t.r(n),n.default="`pOneOrMoreWithSep` 和 `pSat` 都很平常，要把 `pZeroOrMore` 和 `pOneOrMoreWithSep` 中多餘的可能性清掉也很容易（只留比較長的結果就對了）。\n\n`pExpr` 很長很苦工，好在有 `Parser a` ，讓 `pExpr` 的結構和 `Expr a` 的很相似。\n\n有趣的是， `Parser a` 越來越像 applicative functor 。帶著 1992 年沒有的知識，現在我們知道該把 `pApply` 的參數位置調換一下：\n\n```\npFmap :: (a -> b) -> Parser a -> Parser b\npFmap = flip pApply\n```\n\n而且還知道了將 function 放到 `Parser` 中的重要性：\n\n```\npAp :: Parser (a -> b) -> Parser a -> Parser b\npAp pf p toks\n  = [ (f v, toks2) | (f, toks1) <- pf toks\n                   , (v, toks2) <- p toks1\n                   ]\n```\n\n於是 `pThen`, `pThen3` 等工具都能簡單造出來：\n\n```\npThen :: (a -> b -> c) -> Parser a -> Parser b -> Parser c\npThen combine p1 p2 = combine `pFmap` p1 `pAp` p2\n\npThen3 :: (a -> b -> c -> d) -> Parser a -> Parser b -> Parser c -> Parser d\npThen combine p1 p2 p3 = combine `pFmap` p1 `pAp` p2 `pAp` p3\n```\n\n先這樣，今天要聽 ptrcmd 講「Rust 的記憶體安全機制: ownership, borrowing, 和 lifetime」，之後再來解決 `pExpr` 。\n"},function(e,n,t){"use strict";t.r(n),n.default='補上了之前沒實作的 `syntax :: [Token] -> CoreProgram` ：\n\n```\nsyntax :: [Token] -> CoreProgram\nsyntax = take_first_program . pProgram\n         where\n           take_first_program ((prog, []) : others) = prog\n           take_first_program (parse      : others) = take_first_program others\n           take_first_program others                = error $ "Syntax error: " ++ (show others)\n```\n\n翻成白話是：\n\n  * 如果現在看到的是一個 parse 完成的 program ，那就是它了！\n  * 如果現在看的沒 parse 完，那就看下一個，\n  * 如果看到最後都沒找到 parse 完的，就報錯。\n\n`pProgram` 只要用已經建立好的 parsers ，就能按書上第 18 頁的 BNF syntax 做出來。但要注意，該濾掉的關鍵字得濾乾淨，不然連簡單的 `f = x` 都 parse 不出來。\n\n昨天自己亂做，馬上撞到 left recursion ，也就是：\n\n```\npExpr = pThan EAp pExpr pAexpr\n```\n\n造成 `pExpr` 自己呼叫自己，停不下來的慘劇。\n\n建議的解法是改成：\n\n```\n(pOneOrMore pAexpr) `pApply` mk_ap_chain\n```\n\n雖然 `pOneOrMore` 保證回來的陣列至少會有一個元素，但得在 `mk_ap_chain` 裡寫下 `error "Syntax error"` 還是覺得不舒服 XD\n\n```\nmk_ap_chain :: [CoreExpr] -> CoreExpr\nmk_ap_chain [] = error "Syntax error: EAp"\nmk_ap_chain (x:[]) = x\nmk_ap_chain (x:y:xs) = mk_ap_chain (EAp x y : xs)\n```\n\n明天要處理 infix operators 。然後第二章講的是 template interpreter ，第三章才是我一直想了解的 G-machine 。\n\n長路漫漫～\n'},function(e,n,t){"use strict";t.r(n),n.default='<iframe width="740" height="555" src="https://www.youtube.com/embed/uR_VzYxvbxg" frameborder="0" allowfullscreen></iframe>\n\n整場演講配上 SPJ 的語調與活力，超歡樂！可惜投影片看不太清楚 XD\n\n本來以為只是介紹 Core 有多精巧，沒想到後面在講 Core optimisations ：\n\n* Inlining\n* Rewrite rules\n* Beta reduction\n* Case of case\n* Case of known constructor\n* ...\n\n> But once you done this. Very good things happen!\n\n目前我聽得懂的部分中，最讓我驚訝的是把 beta reduction 到 let 的那段。我才剛剛在心中建立起 `let x = expr2 in expr1` 和 `(\\x . expr1) expr2` 的關係，沒想到 GHC 反過來做，看到後者就轉成本來就存在 Core 中的前者。也許我在 [Implementing functional languages: a tutorial][IFL] 中也會讀到這樣的應用？\n\n> ... the transformations cascade! meaning you do one thing and that exposes the opportunity for another thing and that exposes the opportunity for another thing ...\n\n另外讓我驚訝的是，這些最佳化彼此相輔相成地。於是會發生先把 beta reduction 變成 let ，再 inline ，或是 case of case 後，再 inline ... 一直做下去。\n\n雖然最後指出和這主題相關的論文還有二三十篇（這輩子看得完嗎？），像是 [Secrets of the GHC inliner][inliner] ，但這充滿感染力的演講一掃週一夜晚的煩悶。我錯了，如果可以的話，真想成為這樣帶來知識和歡笑的人 XD\n\n演講尾聲時還提到：\n\n> ... compile strict language and lazy language into the same thing.\n\n猜就算幾年後再重聽，一定還會從中學到東西。\n\n[IFL]: http://research.microsoft.com/en-us/um/people/simonpj/Papers/pj-lester-book/\n[inliner]: https://ghc.haskell.org/trac/ghc/wiki/Inlining\n'},function(e,n,t){"use strict";t.r(n),n.default='infix operator 的 precendence 是寫死在文法中的。\n\n才有書中 figure 1.3 這樣結構：\n\n```\nexpr -> ...\n     |  ...\n     |  expr1\n\nexpr1 -> expr2 | expr1\n      |  expr2\nexpr2 -> expr3 & expr2\n      |  expr3\nexpr3 -> ...\n```\n\n直接寫起來會變成：\n\n```\npExpr1 :: Parser CoreExpr\npExpr1\n  = ((\\e1 op e2 -> EAp (EAp (EVar op) e1) e2) `pFmap` pExpr2 `pAp` (pLit \'|\') `pAp` pExpr1) `pAlt`\n    pExpr2\n```\n\n為了避免 `expr1` 不管成功或失敗，都各 parse `expr2` 一次，引進了新的資料結構： `PartialExpr` 。\n\n```\ndata PartialExpr = NoOp | FoundOp Name CoreExpr\n```\n\n就可以寫成：\n\n```\npExpr1 :: CoreExpr\npExpr1 = assembleOp `pFmap` pExpr2 `pAp` pExpr1c\n\npExpr1c :: PartialExpr\npExpr1c = (FoundOp `pFmap` (pLit "|") `pAp` pExpr1) `pAlt` (pEmpty NoOp)\n\npExpr2 :: CoreExpr\npExpr2 = assembleOp `pFmap` pExpr3 `pAp` pExpr2c\n\npExpr2c :: PartialExpr\npExpr2c = (FoundOp `pFmap` (pLit "&") `pAp` pExpr2) `pAlt` (pEmpty NoOp)\n\n-- 略\n```\n\n而把 `PartialExpr` 組合成 `CoreExpr` ，則需要：\n\n```\nassembleOp :: CoreExpr -> PartialExpr -> CoreExpr\nassembleOp e1 NoOp = e1\nassembleOp e1 (FonudOp op e2) = EAp (EAp (EVar op) e1) e2\n```\n\n從現在的角度看，這讓我想起 `Maybe` ，但是 `CoreExpr` 和 `PartialExpr` 就算是 monoid ，也是兩種不同的 monoid ，如果真的要把它們接起來，那 `assembleOp` 對應的，會是現在的什麼函數呢？我還沒想清楚。\n'},function(e,n,t){"use strict";t.r(n),n.default="\n---\n\n第二章開始時提到的例子：\n\n```\nsquare x = x * x ;\nmain = square (square 3)\n```\n\n其中 `square x = x * x` （也就是 `square x = (*) x x`） 畫成 graph （圖）長這樣：\n\n```\n-- 不知道為什麼 logdown\n-- 需要多空一行才不會吃掉空白\n\n    @\n   / \\\n  @   x\n / \\\n*   x\n```\n\n才會有將：\n\n```\n\n       @\n      / \\\nsquare   @\n        / \\\n  square   3\n```\n\n換成：\n\n```\n\n       @\n      / \\\n     /   \\\n    /     \\\n   /       \\\n  @         \\\n / \\         \\\n*   square 3  square 3\n```\n\n這種事。而兩個 `square 3` ，也就是兩個 `x` ，指的是同一個東西，於是寫成：\n\n```\n\n    @\n   / \\\n  @   \\\n / \\___@\n*     / \\\nsquare   3\n```\n\n真是辛苦古時候用 ASCII 畫圖了 |||\n\n---\n\n"},function(e,n,t){"use strict";t.r(n),n.default="讀完 CanvasDesigner 了。還有不明白的地方，但學到很多。\n\nCanvasDesigner 設計了一個小語言，該語言中的值（數字 num 和點 pt ）都是隨時間變化的值，於是寫的人可以簡單地敘述複雜的關係。\n\n在 Planets system 這個例子中：\n\n```\n_A = O + (cos(tha), sin(tha)) * ar\n_B = O + (cos(thb), sin(thb)) * br\n_C = B + (cos(thc), sin(thc)) * cr\n```\n\n`tha`, `thb`, `thc` 是隨時間改變的角度，它們決定了星球 A, B, C 所在的位置 `_A`, `_B`, `_C` 。\n\nCanvasDesigner 執行時，所有的 expression 到 eval （也就是畫到畫面上）的時候才求值。\n\n---\n\nparsing 相關的 functions 有 `parseExpr`, `parseTuple`, `parseRange`, `parseTerm` 和 `parseOne` 。\n\n```\n_A = O + (cos(tha), sin(tha)) * ar\n```\n\n`=` 左邊的是 symbol ，放在 symbol table `symTab` 中，不能重複定義。右邊的是 expression ，由 `parseExpr` 處理。\n\n`parseExpr` 會從內而外找出所有 `()` 和 `[]` ，前者是 tuple ，交給 `parseTuple` ，後者是隨時間改變的 range ，交給 `parseRange` 處理。\n\n這些 tuple 和 range 會被賦予新的名字，放在 symbol table 中待用。\n\n然後 `parseExpr` 處理 `+` 和 `-` ，把 `*` 和 `/` 交給 `parseTerm` 處理。 num 和 pt 都可以任意 `*` 和 `/` ，但我還不明白 pt * pt 和 pt / pt 代表的意義。\n\n`parseTerm` 再把 `*` 和 `/` 間的值交給 `parseOne` ，看看是不是在 symbol table 中，還是是個 JavaScript `Math` 函數，或者是內建的函數 `seg`, `bzr`, `qdr`, `arc`, `pi`, `dot` 。\n\n結果都是 `function(timestamp){ return [...] }` 這樣的函數。\n\n每次 `evalCanvas` 時，再賦予 `symTab` 中所有 symbol 當下的時間，求出值，並將沒有藏起來的 symbol 畫在畫面上。\n\n---\n\n每次讀她的程式碼時，都讓我重新思考，如果我抱著 OOP 思維、從頭搭建 2D 繪圖架構，是不可能在 500 行內做出小而精巧的語言的。也很難想像沒有受到 FP 思維的影響（例如 state monad ），會想到可以將時間靠一個 lambda 藏起來。\n\n## 然後\n\n後來還是公開問了，在朋友和作者的協助下，才知道原來 pt 的乘法和除法是對複數做的，於是 `(a + bi) * (c + di)` 得到 `(ac - bd) + (ad + bc)i` 。 `(a + bi) / (c + di)` 變成 `(a + bi)(c - di) / (c^2 + d^2)` ，然後寫成 `((ac + bd) - (ad - bc)i) / r^2` 。\n\n前面跟旋轉矩陣很像（畢竟複數平面也是轉來轉去），我沒想通就一直在 `cos`, `sin` 上打轉。\n"},function(e,n,t){"use strict";t.r(n),n.default="（原來有個安心的地方，才有餘力面對世界）\n\n雖然生命中看過不少令人安心的地方，但那都是「別人」經營出來的。待在那些地方很輕鬆，可以放心做事，但不是隨時都能去，對空間的存續也無能為力。\n\n（對不起，不會再闖進別人的 safe space 了）\n\n就算是虛幻的也好，讓我經營屬於自己的角落。\n\n---\n\n謝謝你讓我知道人在無能為力時，可以嘗試從來沒有想過的事情。\n\n（像一面鏡子）\n\n技術不是最重要的，「無法取代的事情」從小就知道了，只是沒有好好思考過得花多少功夫來保護它。\n\n（對不起，對不起，對不起）\n\n然後我想知道，開開心心地學習、撰碼是什麼感覺。\n"},function(e,n,t){"use strict";t.r(n),n.default='昨天（11/23）在母校圖書館發現 "the Haskell School of Expression: Learning Functional Programming through Multimedia" 。\n\n還想說誰那麼狂，竟然取這種書名，原來是大佬 Paul Hudak 。\n\n#haskell.tw 上， monochrom 說：\n\n> 視乎你好哪個學習方向. Hudak 應該是唯一一個一早就有 graphics 有 IO 的.  \n> 所以看你喜歡一開始就有眼睛冰淇淋還是一開始就有 pure function 和 algebraic data types.\n\n— monochrom@freenode\n\n其實看到標題時，第一個念頭還是想到那喜歡 pure functional language 也喜歡工程的朋友。不知道能不能從中找到對方也會有興趣的 lib 或技巧？再來我很需要看看別人怎麼用 Haskell 做「真正的應用程式」，之前讀的教學書，主題仍是 compiler 。\n\n---\n\n朋友說她寫 CanvasDesigner 時，的確想著 Haskell 。\n\n---\n\n在 1/4 的 [Funth #59][Funth-59] 給了個 book review ，果然私下 re 兩遍是不夠的，該找人實際講講才能知道別人想聽什麼、哪些細節可以不用說。投影片在[這裡][Talk-SchoolOfExpression]，錄影還沒放出來。\n\n聽 scm 老師講才知道， Paul Hudak 是[陳恭老師][DrKungChen]的指導教授，到過中研院演講。那時講的題目正是這本書提到的 Functional Music Composition ，而且還是從波形開始 XDDD\n\n這次趕著上場，來不及讀前一章的 An Imperative Robot Language 和音樂合成這部分。現在終於可以以輕鬆的心情看下去了 XD\n\n[Funth-59]: https://www.meetup.com/Functional-Thursday/events/245823929/\n[Talk-SchoolOfExpression]: http://caasih.net/Talk-SchoolOfExpression\n[DrKungChen]: http://www.cs.nccu.edu.tw/~chenk/index-en.htm\n'},function(e,n,t){"use strict";t.r(n),n.default="## （第七集）\n\n為什麼加藤可以得救啊？\n\n> saemcro> 因為...倫理道歉時有點到重點? 當朋友之類?   不過要是說這裡加藤沒感情我還不信\n\n這種事情我當然知道！為什麼我要受這種對待，但是加藤卻可以得救啊？\n\n（入戲太深 XD）\n\n雖然大家拿加藤那張圖開玩笑，我覺得那張圖很棒。\n\n圖中的她，好像在說：「太好了，倫也有看見我的努力」，同時又想忍著不哭。被這種心情打到了。\n\n加藤當然可以得救，因為這是小說。人類的注意力不可能像小說那樣，維持在少數幾個人身上。被忽視是常態，所以小說才動人。\n\n---\n\n看了一下動畫，覺得加藤的聲音比想像中的幼一些 XD\n\n## （第六集）\n\n賀 gone gold ！\n\n第六集對 err 的描述，讓我想到 [NaBaBa][PaNaMa] 的圖。\n\n[PaNaMa]: https://twitter.com/NaBaBa\n\n沒辦法對 err 萌起來的原因，大概是哪種「所有屬性都被搶走，還要被丟下」的心情，讓我覺得好像在看自己= =\n\n也就是說，要是霞詩子老師是我想成為的女孩的話，那麼柏木英理就是我想逃避的自己。不過不管哪邊都是不可能的，畢竟天生就不是女孩子，也已經健康地（？）長成宅大叔啦。\n\n## （第五集）\n\n是掉進了丸戶的陷阱，還是被丸戶治癒了呢？\n\n就這麼一次，感謝倫也那種個性。\n\n當霞之丘學姊完成腳本後，自顧自地暴走、鑽牛角尖，把心情塞到文字裡，「再一次」逼倫也選擇時，只有倫也這種個性，才能跳出霞詩子的「遊戲」，把她從洞裡拉出來。\n\n拉出來後，還合作了腳本跟筆名，可以說是兩個人的結晶。\n\n也因為倫也這種個性，《不起眼》才沒有變成 WA3 吧？畢竟這次加藤把學姊的心情看得很清楚，卻沒有預料到倫也的答案。她再淡然，也陷在霞詩子的遊戲中。\n\n是說，為什麼寫程式的是加藤啊？程式碼這種東西，可沒辦法傳遞心意耶。\n"},function(e,n,t){"use strict";t.r(n),n.default='一邊逃避工作一邊把讀 code 機裝好，繼續和 stack, xmonad 打架。\n\n這次升級 Arch 後剛好遇上 `ld` 一直要求加上 `-fPIC` 的錯誤。但是文件中的 [I get strange ld errors about recompiling with "-fPIC"\n][fPIC] 幫不上忙。安裝 AUR 上的 `ncurses5-compat-libs` 也無法解決此問題。\n\n踩到的其實是 [Stack 1.6 linking issues on Arch Linux][linking-issues] 。\n\n解法是使用 [stack-setup-2: nopie fixes for Arch, Gentoo, and Void Linux][stack-setup-2] 中的 yaml 。從檔案中可以看到， GHC 7 到 GHC 8.0.1 都被拿掉，所以得換掉包含這些 GHC 版本的 resolver ，例如 lts-7.9 。\n\n`stack setup` 時，使用自訂 yaml 的方法是：\n\n```\nstack setup --setup-info-yaml=https://raw.githubusercontent.com/fpco/stackage-content/nopie-fixes-arch-gentoo/stack/stack-setup-2.yaml\n```\n\n等該 PR merge 後，才能把 `--setup-info-yaml` 拿掉。\n\n[fPIC]: https://docs.haskellstack.org/en/stable/faq/#i-get-strange-ld-errors-about-recompiling-with-fpic\n[linking-issues]: https://github.com/commercialhaskell/stack/issues/3518\n[stack-setup-2]: https://github.com/fpco/stackage-content/pull/34\n\n---\n\n既然用 stack ，就跟 C 一樣連 xmonad 也用 stack 裝吧。\n\n參考 [How to install xmonad and xmobar via stack][stack-xmonad-xmobar] ：\n\n1. 建立一個直接用到 GitHub 上的 xmonad, xmonad-contrib, xmobar 的 stack 專案\n1. 從該專案建置與安裝 xmonad 與 xmobar （`stack install`）\n1. 利用 xmonad 0.13 後支援自訂 build script 這功能，讓 `xmonad --recompile` 時可以叫 stack 做事\n\n未來修改 `.xmonad/xmonad.hs` 後只要：\n\n```\nxmonad --recompile && xmonad --restart\n```\n\n更新 xmonad 等 GitHub repos 時才需要：\n\n```\nstack install\n```\n\n[stack-xmonad-xmobar]: http://brianbuccola.com/how-to-install-xmonad-and-xmobar-via-stack/\n\n---\n\n最後準備好 `.xinitrc` 、安裝 [simple terminal][st] 、\n\n交換 Control 和 CapsLock ：\n\n```\nxmodmap -e \'remove Lock = Caps_Lock\'\nxmodmap -e \'remove Control = Control_L\'\nxmodmap -e \'keysym Control_L = Caps_Lock\'\nxmodmap -e \'keysym Caps_Lock = Control_L\'\nxmodmap -e \'add Lock = Caps_Lock\'\nxmodmap -e \'add Control = Control_L\'\n```\n\n靠 [`feh`][feh] 設定背景，又有 Linux 桌面可以用啦 XD\n\n對了，看 [t][kuanyui] 考證才知道，\n\n> rc (as in ".cshrc" or "/etc/rc") = "RunCom"\n>\n> "rc" derives from "runcom", from the MIT CTSS system, ca. 1965.\n>\n> \'There was a facility that would execute a bunch of commands stored in a file; it was called "runcom" for "run commands", and the file began to be called "a runcom." "rc" in Unix is a fossil from that usage.\'\n\n原來 rc 是 [RUNCOM][RUNCOM] 的簡寫，出自使用 IBM 7094 的 CTSS 系統：\n\n> Louis Pouzin also invented RUNCOM for CTSS. This facility, the direct ancestor of the Unix shell script, allowed users to create a file-system file of commands to be executed, with parameter substitution. Louis also produced a design for the Multics shell, ancestor of the Unix shell.\n\n[st]: https://st.suckless.org/\n[feh]: https://wiki.archlinux.org/index.php/feh\n[kuanyui]: http://kuanyui.github.io/\n[RUNCOM]: http://multicians.org/thvv/7094.html\n'},function(e,n,t){"use strict";t.r(n),n.default='Ilya 前年介紹了 Matthew Fuller 在 caa-ins 上的一場，有關數據結構與空間結構的演講。那時沒辦法到場聽，但最近發現有[錄影與逐字稿][caa-ins-1213]。\n\n\n開場就引用 Kurt Gödel 的不完備定理，接著說明編碼、轉譯、解碼這樣的過程，在我們的社會、文化中隨處可見。將各種程式語言的表現方式視為紋理、物料，好像混凝土、陶土那樣，有各自的特質和使用方式。這點有很有意思。\n\n但我不懂，拿 [Gödel numbering][goedel-numbering] 來類比之後所有的編碼、解碼方式，是不是有點牽強？\n\nGödel 編碼的是一個公理系統中的命題，雖然最後以自然數來表現，但不會用到所有自然數的性質，目的是用它來完成證明。而後面提到的編碼、解碼（例如 Shannon 在訊息理論上的工作）牽扯到的是把自然界連續的訊號轉換成數位訊號，還要面對資訊損失。\n\n我覺得編碼是人類拆分一個系統，試著去了解該系統的方法。例如有些程式語言的型別系統，表達能力比較強，所以用它描述要處理的資料時，可以設下較多限制，避免在轉譯成其他編碼時出錯。有些比較弱，但在趕著開發程式時，限制比較少。\n\n最近聽到一種反思，讓我好奇「這反映的是人類自身的結構，還是世界的結構？」。（例如 Bartosz Milewski 在他的 category theory 課程 37:22 提到的）\n\n<iframe width="560" height="315" src="https://www.youtube.com/embed/I8LbkfSSR58" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>\n\n如果這反映的是人類自己的結構，那麼 array, list, table, matrix, stack, heap 這些資料結構，它們的命名雖然有空間隱喻，表示的其實是人類用對空間的經驗來識別這些資料結構。它們是人類經驗延伸出來的抽象，城市的結構（也是人類的延伸）中本來就包含它們，而不是分開的、需要結合的兩種東西。\n\n[caa-ins-1213]: http://caa-ins.org/archives/1213\n[goedel-numbering]: https://en.wikipedia.org/wiki/G%C3%B6del_numbering\n'},function(e,n,t){"use strict";t.r(n),n.default="前幾天 [@lovecankill][lovecankill-twitter] 提到 [The Haskell School of Music: From Signals to Symphonies][school-of-music] 出版了。\n\n查了下才知道在 Paul Hudak 過世後， Donya Quick 接手完成整本書。\n\nReddit 上的 lovaz 快三年前擔心沒人接手，[曾問][lovaz-3pt3dg]：\n\n> But, as some of you know, Mr. Hudak passed away earlier this year and the book is now finished - chapters on frequency modulation are only half way done. Physical Modelling chapter has a lot of empty spaces. I can't understand ideas presented there if there is no explanation :(\n\nhsyl20 回答道：\n\n> You should ask Donya Quick: http://donyaquick.com/ I have been told she is to complete the book.\n\n---\n\n但我連 [The Haskell School of Expression][school-of-expression] 都還沒讀完，現在衝動購物也沒意思 XD\n\n[lovecankill-twitter]: https://twitter.com/lovecankill\n[school-of-music]: http://euterpea.com/haskell-school-of-music/\n[lovaz-3pt3dg]: https://www.reddit.com/r/haskell/comments/3pt3dg/continuation_of_haskell_school_of_music_by_paul/\n[school-of-expression]: ./2017-11-24-school-of-expression\n"},function(e,n,t){(n=e.exports=t(22)(!1)).push([e.i,".src-pages-PostIndex-index__className--2bxag .src-pages-PostIndex-index__list--2dUux {\n    line-height: 1.5rem;\n  }\n\n",""]),n.locals={className:"src-pages-PostIndex-index__className--2bxag",list:"src-pages-PostIndex-index__list--2dUux"}},,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,function(e,n,t){(n=e.exports=t(22)(!1)).push([e.i,".src-components-Article-index__className--1GoCq {\n  padding: 1.25em 2.5em 3.75em 2.5em;\n  max-width: 38rem;\n  left: 0;\n  right: 0;\n  margin: 0 auto;\n}\n\n  .src-components-Article-index__className--1GoCq .info {\n  }\n\n  .src-components-Article-index__className--1GoCq > p,\n  .src-components-Article-index__className--1GoCq > pre,\n  .src-components-Article-index__className--1GoCq ul,\n  .src-components-Article-index__className--1GoCq ol,\n  .src-components-Article-index__className--1GoCq figure {\n    line-height: 1.5rem;\n  }\n\n.src-components-Article-index__className--1GoCq > pre {\n    padding: 0 2ch;\n    white-space: pre-wrap;\n  }\n\n.src-components-Article-index__className--1GoCq {\n\n  --code-color: #666;\n  --dark-code-color: #999;\n}\n\n.src-components-Article-index__className--1GoCq code {\n    color: var(--code-color);\n  }\n\n@media (color-index: 48) {\n    .src-components-Article-index__className--1GoCq code {\n      color: var(--dark-code-color);\n    }\n  }\n\n@media (prefers-color-scheme: dark) {\n    .src-components-Article-index__className--1GoCq code {\n      color: var(--dark-code-color);\n    }\n  }\n\n.src-components-Article-index__className--1GoCq {\n\n  --blockquote-color: #666\n}\n\n.src-components-Article-index__className--1GoCq > blockquote {\n    border-left: .15em solid var(--blockquote-color);\n    padding-left: 1em;\n    margin-left: 1.2em;\n    color: var(--blockquote-color);\n  }\n\n.src-components-Article-index__className--1GoCq figure {\n    width: -webkit-min-content;\n    width: -moz-min-content;\n    width: min-content;\n    margin: auto;\n  }\n\n.src-components-Article-index__className--1GoCq figure > figcaption {\n    margin-top: 0.5em;\n    font-size: 0.875rem;\n  }\n\n@media only screen and (max-device-width: 767px) {\n\n  .src-components-Article-index__className--1GoCq {\n    padding-left: 0.25em;\n    padding-right: 0.25em\n}\n  }\n",""]),n.locals={className:"src-components-Article-index__className--1GoCq"}},,,,function(e,n,t){(n=e.exports=t(22)(!1)).push([e.i,".src-pages-Playground-Then-index__className--2_068 .src-pages-Playground-Then-index__demo--2eD3u {\n    padding-left: 1em;\n    margin-bottom: 1em;\n  }\n",""]),n.locals={className:"src-pages-Playground-Then-index__className--2_068",demo:"src-pages-Playground-Then-index__demo--2eD3u"}},,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,function(e,n,t){(n=e.exports=t(22)(!1)).push([e.i,".src-components-SourceCode-index__className--1t-Nw {\n  margin: 1em 0;\n}\n\n  .src-components-SourceCode-index__className--1t-Nw label {\n    cursor: pointer;\n    display: inline-block;\n    font-family: monospace;\n    text-decoration: underline;\n  }\n\n  .src-components-SourceCode-index__className--1t-Nw code {\n    color: inherit;\n  }\n",""]),n.locals={className:"src-components-SourceCode-index__className--1t-Nw"}},function(e,n,t){(n=e.exports=t(22)(!1)).push([e.i,".src-pages-Playground-ReactKonva-index__className--1ietP .src-pages-Playground-ReactKonva-index__stage--3rkax > .konvajs-content {\n    background-color: #efefef;\n  }\n",""]),n.locals={className:"src-pages-Playground-ReactKonva-index__className--1ietP",stage:"src-pages-Playground-ReactKonva-index__stage--3rkax"}},function(e,n,t){(n=e.exports=t(22)(!1)).push([e.i,".src-pages-Playground-Map-MinimumMap-MapObject-index__className--1C_DK {\n  box-sizing: border-box;\n  background-color: #2ecc71;\n  color: #fff;\n  cursor: pointer;\n  font-size: 0.8rem;\n  padding: 0.2em 0.4em;\n  position: absolute;\n  -webkit-user-select: none;\n     -moz-user-select: none;\n      -ms-user-select: none;\n          user-select: none\n}\n.src-pages-Playground-Map-MinimumMap-MapObject-index__className--1C_DK.selected {\n    background-color: #e74c3c;\n  }\n",""]),n.locals={className:"src-pages-Playground-Map-MinimumMap-MapObject-index__className--1C_DK"}},function(e,n,t){(n=e.exports=t(22)(!1)).push([e.i,".src-pages-Playground-Map-MinimumMap-BoundingBox-index__className--3BeZ4 {\n  box-shadow: inset 0 0 0 1px #e67e22;\n  box-sizing: border-box;\n  position: absolute;\n  pointer-events: none;\n}\n",""]),n.locals={className:"src-pages-Playground-Map-MinimumMap-BoundingBox-index__className--3BeZ4"}},function(e,n,t){(n=e.exports=t(22)(!1)).push([e.i,".src-pages-Playground-Map-MinimumMap-index__className--2h_iL .src-pages-Playground-Map-MinimumMap-index__content--3gAc1 {\n    background-color: #efefef;\n    height: 480px;\n    overflow: hidden;\n    position: relative;\n    width: 640px;\n  }\n",""]),n.locals={className:"src-pages-Playground-Map-MinimumMap-index__className--2h_iL",content:"src-pages-Playground-Map-MinimumMap-index__content--3gAc1"}},function(e,n,t){"use strict";e.exports={}},,,,,,,,,,,,,,,function(e,n,t){(n=e.exports=t(22)(!1)).push([e.i,".src-pages-Playground-ImageData-Picture-index__image--3pJAB {\n  position: relative;\n}\n\n.src-pages-Playground-ImageData-Picture-index__control--3mq_m {\n  position: absolute;\n  left: 10px;\n  bottom: 10px;\n  color: #fff;\n}\n\n.src-pages-Playground-ImageData-Picture-index__source--3DJ6P {\n  text-align: center;\n  color: #666;\n}\n",""]),n.locals={image:"src-pages-Playground-ImageData-Picture-index__image--3pJAB",control:"src-pages-Playground-ImageData-Picture-index__control--3mq_m",source:"src-pages-Playground-ImageData-Picture-index__source--3DJ6P"}},function(e,n,t){(n=e.exports=t(22)(!1)).push([e.i,".src-pages-Playground-ImageData-System-index__system--2AWeg {\n  position: relative;\n  width: 400px;\n  height: 400px;\n  border-radius: 200px;\n  background: #16161d;\n  color: #fff;\n  margin: 1em auto;\n}\n\n.src-pages-Playground-ImageData-System-index__star--WOipS {\n  position: absolute;\n}\n\n.src-pages-Playground-ImageData-System-index__star--WOipS > div {\n  position: absolute;\n  left: -.5em;\n  top: -.5em;\n}\n",""]),n.locals={system:"src-pages-Playground-ImageData-System-index__system--2AWeg",star:"src-pages-Playground-ImageData-System-index__star--WOipS"}},function(e,n,t){(n=e.exports=t(22)(!1)).push([e.i,".src-pages-Playground-UseLess-index__className--19TBt .src-pages-Playground-UseLess-index__demo--3n3KJ {\n    background: #fcfcfc;\n    padding: 0.5em;\n    margin: 1em 0;\n    color: #333;\n  }\n\n    .src-pages-Playground-UseLess-index__className--19TBt .src-pages-Playground-UseLess-index__demo--3n3KJ *:first-child {\n      margin-top: 0 !important;\n    }\n\n    .src-pages-Playground-UseLess-index__className--19TBt .src-pages-Playground-UseLess-index__demo--3n3KJ *:last-child {\n      margin-bottom: 0 !important;\n    }\n\n    .src-pages-Playground-UseLess-index__className--19TBt .src-pages-Playground-UseLess-index__demo--3n3KJ section fieldset {\n        border: 0;\n        margin: 0;\n        margin-bottom: 1em;\n        padding: 0;\n      }\n\n    .src-pages-Playground-UseLess-index__className--19TBt .src-pages-Playground-UseLess-index__demo--3n3KJ section fieldset input, .src-pages-Playground-UseLess-index__className--19TBt .src-pages-Playground-UseLess-index__demo--3n3KJ section fieldset button {\n          box-sizing: content-box;\n          outline: none;\n          padding: 0.5rem 1rem;\n          border: 1px solid #ccc;\n        }\n\n    .src-pages-Playground-UseLess-index__className--19TBt .src-pages-Playground-UseLess-index__demo--3n3KJ section fieldset input {\n          border-right-width: 0;\n        }\n\n    .src-pages-Playground-UseLess-index__className--19TBt .src-pages-Playground-UseLess-index__demo--3n3KJ section fieldset button {\n          border-color: #09f;\n          background-color: #09f;\n          color: #fff;\n        }\n\n    .src-pages-Playground-UseLess-index__className--19TBt .src-pages-Playground-UseLess-index__demo--3n3KJ section ol {\n        display: flex;\n        flex-direction: column;\n        align-items: flex-start;\n\n        list-style: none;\n        padding-left: 0;\n        margin: 0;\n      }\n\n    .src-pages-Playground-UseLess-index__className--19TBt .src-pages-Playground-UseLess-index__demo--3n3KJ section ol li {\n          padding: 0.5rem 1rem;\n          line-height: 1rem;\n          background-color: #09f;\n          color: #fff;\n          border-top-right-radius: 1rem;\n          border-top-left-radius: 0.2rem;\n          border-bottom-right-radius: 1rem;\n          border-bottom-left-radius: 0.2rem;\n          margin-bottom: 0.2rem\n        }\n\n    .src-pages-Playground-UseLess-index__className--19TBt .src-pages-Playground-UseLess-index__demo--3n3KJ section ol li:first-child {\n            border-top-left-radius: 1rem;\n\n          }\n\n    .src-pages-Playground-UseLess-index__className--19TBt .src-pages-Playground-UseLess-index__demo--3n3KJ section ol li:last-child {\n            border-bottom-left-radius: 1rem;\n            margin-bottom: 0;\n          }\n\n    .src-pages-Playground-UseLess-index__className--19TBt .src-pages-Playground-UseLess-index__demo--3n3KJ div {\n      line-height: 0;\n    }\n\n    .src-pages-Playground-UseLess-index__className--19TBt .src-pages-Playground-UseLess-index__demo--3n3KJ .src-pages-Playground-UseLess-index__colorRect--2aBXc {\n      display: inline-block;\n      width: 2rem;\n      height: 2rem;\n    }\n\n    .src-pages-Playground-UseLess-index__className--19TBt .src-pages-Playground-UseLess-index__demo--3n3KJ .src-pages-Playground-UseLess-index__currentRect--1NZot {\n      margin-bottom: 1em;\n      cursor: pointer;\n    }\n\n    .src-pages-Playground-UseLess-index__className--19TBt .src-pages-Playground-UseLess-index__demo--3n3KJ .src-pages-Playground-UseLess-index__previousRects--BY2MR {\n      margin-bottom: 1em;\n    }\n",""]),n.locals={className:"src-pages-Playground-UseLess-index__className--19TBt",demo:"src-pages-Playground-UseLess-index__demo--3n3KJ",colorRect:"src-pages-Playground-UseLess-index__colorRect--2aBXc",currentRect:"src-pages-Playground-UseLess-index__currentRect--1NZot",previousRects:"src-pages-Playground-UseLess-index__previousRects--BY2MR"}},function(e,n,t){(n=e.exports=t(22)(!1)).push([e.i,".src-pages-Playground-WebVR-index__className--QJqW- {}\n",""]),n.locals={className:"src-pages-Playground-WebVR-index__className--QJqW-"}},function(e,n,t){(n=e.exports=t(22)(!1)).push([e.i,".src-pages-Playground-index__className--2sDC9 .src-pages-Playground-index__list--30Sh3 {\n    line-height: 1.5rem;\n  }\n",""]),n.locals={className:"src-pages-Playground-index__className--2sDC9",list:"src-pages-Playground-index__list--30Sh3"}},function(e,n,t){(n=e.exports=t(22)(!1)).push([e.i,".src-Root-Root__className--23B9r {\n  position: relative;\n}\n\n  .src-Root-Root__className--23B9r > h1 {\n    position: absolute;\n    font-size: 3rem;\n    margin: 0;\n    top: -1.25rem;\n    right: 0;\n    color: #666;\n    -webkit-user-select: none;\n       -moz-user-select: none;\n        -ms-user-select: none;\n            user-select: none;\n    z-index: 0;\n  }\n\n@media (color-index: 48) {\n    .src-Root-Root__className--23B9r > h1 {\n      color: #999;\n    }\n  }\n\n@media (prefers-color-scheme: dark) {\n    .src-Root-Root__className--23B9r > h1 {\n      color: #999;\n    }\n  }\n\n.src-Root-Root__className--23B9r #src-Root-Root__menu--2HZFx {\n    position: relative;\n    display: inline-block;\n    margin-top: 1em;\n    font-family: monospace;\n    z-index: 100;\n    white-space: pre\n  }\n\n.src-Root-Root__className--23B9r #src-Root-Root__menu--2HZFx:before {\n      content: 'data Site = Site\\A { posts      :: [Markdown]\\A , playground :: [ReactElement]\\A , mastodon   :: Link\\A }\\Asite = Site '\n    }\n\n.src-Root-Root__className--23B9r #src-Root-Root__menu--2HZFx > ul {\n      display: inline;\n      list-style: none;\n      padding: 0;\n      margin: 0;\n    }\n\n.src-Root-Root__className--23B9r #src-Root-Root__menu--2HZFx > ul > li {\n        display: inline-block;\n        margin-right: 1ch\n      }\n\n.src-Root-Root__className--23B9r #src-Root-Root__menu--2HZFx > ul > li:last-child {\n          margin-right: 0;\n        }\n\n.src-Root-Root__className--23B9r #src-Root-Root__container--3KyKv {\n    position: relative;\n    z-index: 200;\n  }\n\n@media (color-index: 48) {\n    .src-Root-Root__className--23B9r > h1 {\n      color: #999;\n    }\n  }\n\n@media (prefers-color-scheme: dark) {\n    .src-Root-Root__className--23B9r > h1 {\n      color: #999;\n    }\n  }\n\n",""]),n.locals={className:"src-Root-Root__className--23B9r",menu:"src-Root-Root__menu--2HZFx",container:"src-Root-Root__container--3KyKv"}},,,function(e,n,t){var a=t(927);"string"==typeof a&&(a=[[e.i,a,""]]);var r={hmr:!0,transform:void 0,insertInto:void 0};t(23)(a,r);a.locals&&(e.exports=a.locals)},function(e,n,t){(e.exports=t(22)(!1)).push([e.i,'body {\n  font-size: 12pt;\n  font-family: "Helvetica", "Arial", "黑體-繁", "Noto Sans TC", "Noto Sans SC", "微軟正黑體", sans-serif;\n}\n\nhr {\n  border-top: .15em solid transparent;\n  -o-border-image: 100% 0 0 linear-gradient(90deg, currentColor 2em, transparent 0);\n     border-image: 100% 0 0 linear-gradient(90deg, currentColor 2em, transparent 0);\n}\n\na {\n  color: #000;\n}\n\na:hover {\n  color: #666;\n}\n\na:visited {\n  color: #999;\n}\n\na:active {\n  color: #999;\n}\n\n@media (color-index: 48) {\n  body {\n    background-color: #252525;\n    color: #fff;\n  }\n\n  a {\n    color: #fff;\n  }\n\n  a:hover {\n    color: #999;\n  }\n\n  a:visited {\n    color: #666;\n  }\n\n  a:active {\n    color: #666;\n  }\n}\n\n@media (prefers-color-scheme: dark) {\n  body {\n    background-color: #252525;\n    color: #fff;\n  }\n\n  a {\n    color: #fff;\n  }\n\n  a:hover {\n    color: #999;\n  }\n\n  a:visited {\n    color: #666;\n  }\n\n  a:active {\n    color: #666;\n  }\n}\n',""])},function(e,n,t){"use strict";function a(e,n){return function(e){if(Array.isArray(e))return e}(e)||function(e,n){var t=[],a=!0,r=!1,o=void 0;try{for(var i,s=e[Symbol.iterator]();!(a=(i=s.next()).done)&&(t.push(i.value),!n||t.length!==n);a=!0);}catch(e){r=!0,o=e}finally{try{a||null==s.return||s.return()}finally{if(r)throw o}}return t}(e,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance")}()}function r(e){return new Promise((function(n,t){var a=new MessageChannel;a.port1.onmessage=function(e){e.data.error?t(e.data.error):n(e.data)},navigator.serviceWorker.ready.then((function(n){n.active.postMessage(e,[a.port2])}))}))}t.r(n),"serviceWorker"in navigator&&navigator.serviceWorker.register("/sw.js").then((function(e){r("a service worker is registered with scope: "+e.scope).then(console.log),function(){for(var e=arguments.length,n=new Array(e),t=0;t<e;t++)n[t]=arguments[t];return r({type:"iscached",uris:n})}("js/main.js","js/vendor.js","index.html").then((function(e){var n=a(e,3),t=n[0],r=n[1],o=n[2];console.log("is main.js cached:",t),console.log("is vendor.js cached:",r),console.log("is index.html cached:",o)}))})).catch((function(e){console.log("registration failed:",e)}));var o=t(0),i=t.n(o),s=t(252),l=t(17),c=t(267),u=t(6),d=t.n(u),p=t(24),m=t(14),h=t(932);function f(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}function g(e,n){for(var t=0;t<n.length;t++){var a=n[t];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}function b(e){return(b=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function y(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}function v(e,n){return!n||"object"!==x(n)&&"function"!=typeof n?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):n}function w(e,n){return(w=Object.setPrototypeOf||function(e,n){return e.__proto__=n,e})(e,n)}var x=function(e){return e&&"undefined"!=typeof Symbol&&e.constructor===Symbol?"symbol":typeof e},S=function(e){function n(){return f(this,n),v(this,b(n).apply(this,arguments))}var t,a,r;return function(e,n){if("function"!=typeof n&&null!==n)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(n&&n.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),n&&w(e,n)}(n,e),t=n,(a=[{key:"componentDidUpdate",value:function(e){this.props.location!==e.location&&window.scrollTo(0,0)}},{key:"render",value:function(){var e=this.props,n=e.as,t=e.children,a=(e.history,e.location,e.match,e.staticContext,y(e,["as","children","history","location","match","staticContext"]));return i.a.createElement(n,a,t)}}])&&g(t.prototype,a),r&&g(t,r),n}(o.PureComponent),k=Object(m.g)(S),P=t(933),E=t(930),C=t(929),T=t(935),M=Object(P.a)(Object(E.a)(C.a,Object(T.a)("private"))),_=t(15),O=t.n(_),j=t(254),N=t.n(j);function I(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}function D(e,n){for(var t=0;t<n.length;t++){var a=n[t];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}function R(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function A(e){return(A=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function L(e,n){return!n||"object"!==B(n)&&"function"!=typeof n?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):n}function F(e,n){return(F=Object.setPrototypeOf||function(e,n){return e.__proto__=n,e})(e,n)}var B=function(e){return e&&"undefined"!=typeof Symbol&&e.constructor===Symbol?"symbol":typeof e},H=function(e){function n(){return I(this,n),L(this,A(n).apply(this,arguments))}var t,a,r;return function(e,n){if("function"!=typeof n&&null!==n)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(n&&n.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),n&&F(e,n)}(n,e),t=n,(a=[{key:"render",value:function(){var e=this.props,n=(e.id,e.className),t=e.label,a=e.children,r=0===o.Children.count(a),s=d()(N.a.className,"caasih-program-style-list",{empty:r},n);return i.a.createElement("div",{className:s},i.a.createElement("label",null,t),i.a.createElement("ul",null,o.Children.map(a,(function(e){return i.a.createElement("li",null,Object(o.cloneElement)(e))}))))}}])&&D(t.prototype,a),r&&D(t,r),n}(o.PureComponent);R(H,"propTypes",{className:O.a.string,label:O.a.string}),R(H,"defaultProps",{className:"",label:"list"});var z=H,G=t(1),W=t.n(G),U=t(55),V=M(U),J={},q=!0,X=!1,K=void 0;try{for(var $,Y=V[Symbol.iterator]();!(q=($=Y.next()).done);q=!0){var Q=$.value;J[Q.url]=t(287)("./".concat(Q.url,".md")).default}}catch(e){X=!0,K=e}finally{try{q||null==Y.return||Y.return()}finally{if(X)throw K}}var Z=t(56),ee=t.n(Z);function ne(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}function te(e,n){for(var t=0;t<n.length;t++){var a=n[t];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}function ae(e){return(ae=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function re(e,n){return!n||"object"!==ce(n)&&"function"!=typeof n?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):n}function oe(e,n){return(oe=Object.setPrototypeOf||function(e,n){return e.__proto__=n,e})(e,n)}var ie,se,le,ce=function(e){return e&&"undefined"!=typeof Symbol&&e.constructor===Symbol?"symbol":typeof e},ue=function(e){function n(){return ne(this,n),re(this,ae(n).apply(this,arguments))}var t,a,r;return function(e,n){if("function"!=typeof n&&null!==n)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(n&&n.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),n&&oe(e,n)}(n,e),t=n,(a=[{key:"render",value:function(){var e=this.props,n=e.id,t=e.className;return d()(ee.a.className,"caasih-post-list",t,ee.a.list),i.a.createElement(z,{id:n,className:ee.a.list,label:"posts"},Object(h.a)((function(e){return i.a.createElement(p.b,{key:e.url,title:"發表於 ".concat(W()(e.datePublished).format("YYYY-MM-DD HH:mm")),to:"/posts/".concat(e.url)},e.headline)}),V))}}])&&te(t.prototype,a),r&&te(t,r),n}(o.PureComponent);le={className:""},(se="defaultProps")in(ie=ue)?Object.defineProperty(ie,se,{value:le,enumerable:!0,configurable:!0,writable:!0}):ie[se]=le;var de=ue,pe=t(255),me=t.n(pe),he=t(256),fe=t.n(he);function ge(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}function be(e,n){for(var t=0;t<n.length;t++){var a=n[t];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}function ye(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function ve(e){return(ve=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function we(e,n){return!n||"object"!==Se(n)&&"function"!=typeof n?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):n}function xe(e,n){return(xe=Object.setPrototypeOf||function(e,n){return e.__proto__=n,e})(e,n)}var Se=function(e){return e&&"undefined"!=typeof Symbol&&e.constructor===Symbol?"symbol":typeof e},ke=function(e){function n(){return ge(this,n),we(this,ve(n).apply(this,arguments))}var t,a,r;return function(e,n){if("function"!=typeof n&&null!==n)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(n&&n.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),n&&xe(e,n)}(n,e),t=n,(a=[{key:"render",value:function(){var e=this.props,n=e.id,t=e.className,a=e.children,r=d()(fe.a.className,"caasih-article",t);return i.a.createElement("article",{id:n,className:r},a)}}])&&be(t.prototype,a),r&&be(t,r),n}(o.PureComponent);ye(ke,"propTypes",{className:O.a.string}),ye(ke,"defaultProps",{className:""});var Pe=ke;function Ee(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}function Ce(e,n){for(var t=0;t<n.length;t++){var a=n[t];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}function Te(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function Me(e){return(Me=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function _e(e,n){return!n||"object"!==je(n)&&"function"!=typeof n?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):n}function Oe(e,n){return(Oe=Object.setPrototypeOf||function(e,n){return e.__proto__=n,e})(e,n)}var je=function(e){return e&&"undefined"!=typeof Symbol&&e.constructor===Symbol?"symbol":typeof e},Ne={normal:"88x31",compact:"80x15"},Ie=function(e){function n(){return Ee(this,n),_e(this,Me(n).apply(this,arguments))}var t,a,r;return function(e,n){if("function"!=typeof n&&null!==n)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(n&&n.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),n&&Oe(e,n)}(n,e),t=n,(a=[{key:"render",value:function(){var e=this.props,n=(e.id,e.className),t=e.version,a=e.type,r=e.size;return d()("creative-commons",n),i.a.createElement("a",{rel:"license",href:"http://creativecommons.org/licenses/".concat(a,"/").concat(t,"/")},i.a.createElement("img",{alt:"Creative Commons License",style:{borderWidth:0},src:"https://i.creativecommons.org/l/".concat(a,"/").concat(t,"/").concat(Ne[r],".png")}))}}])&&Ce(t.prototype,a),r&&Ce(t,r),n}(o.PureComponent);Te(Ie,"propTypes",{className:O.a.string,version:O.a.string,type:O.a.string,size:O.a.string}),Te(Ie,"defaultProps",{className:"",version:"4.0",type:"by",size:"normal"});var De=Ie,Re=t(934),Ae=t(931),Le=t(257);function Fe(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}function Be(e,n){for(var t=0;t<n.length;t++){var a=n[t];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}function He(){return(He=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var a in t)Object.prototype.hasOwnProperty.call(t,a)&&(e[a]=t[a])}return e}).apply(this,arguments)}function ze(e){return(ze=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function Ge(e,n){return!n||"object"!==Ue(n)&&"function"!=typeof n?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):n}function We(e,n){return(We=Object.setPrototypeOf||function(e,n){return e.__proto__=n,e})(e,n)}var Ue=function(e){return e&&"undefined"!=typeof Symbol&&e.constructor===Symbol?"symbol":typeof e},Ve=function(e){function n(){return Fe(this,n),Ge(this,ze(n).apply(this,arguments))}var t,a,r;return function(e,n){if("function"!=typeof n&&null!==n)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(n&&n.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),n&&We(e,n)}(n,e),t=n,(a=[{key:"render",value:function(){var e,n,t=this.props,a=t.id,r=t.className,o=t.pid,s=d()("caasih-post","markdown",r),c=Object(Re.a)(Object(Ae.a)("url",o),V),u=J[o];return c&&(e=W()(c.datePublished).format("YYYY-MM-DD HH:mm"),n=W()(c.dateModified).format("YYYY-MM-DD HH:mm")),i.a.createElement(Pe,{className:s},c&&i.a.createElement(l.Helmet,null,i.a.createElement("title",null,c.headline," - caasih.net")),c&&i.a.createElement("header",null,i.a.createElement("h1",null,c.headline)),i.a.createElement(me.a,{id:a,escapeHtml:!1,linkTarget:"_blank"},u),i.a.createElement("footer",{className:"info"},c&&c.license&&i.a.createElement(De,He({size:"compact"},c.license)),c&&i.a.createElement("div",null,i.a.createElement("span",null,"由 ",Le.name," 發佈於 ",i.a.createElement("time",{dateTime:e},e)),n!==e&&i.a.createElement("span",null,"，並於 ",n," 更新內容"))))}}])&&Be(t.prototype,a),r&&Be(t,r),n}(o.PureComponent);!function(e,n,t){n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t}(Ve,"defaultProps",{className:"",pid:""});var Je=Ve,qe=t(78);function Xe(e){return function(n){return new Promise((function(t){return setTimeout(t,e,n)}))}}var Ke=t(79),$e=t.n(Ke);function Ye(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function Qe(e,n){for(var t=0;t<n.length;t++){var a=n[t];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}function Ze(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function en(e){return(en=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function nn(e,n){return(nn=Object.setPrototypeOf||function(e,n){return e.__proto__=n,e})(e,n)}var tn=function(e){return e&&"undefined"!=typeof Symbol&&e.constructor===Symbol?"symbol":typeof e},an=function(e){var n=e.name,t=void 0===n?"???":n,a=e.age,r=void 0===a?"??":a;return o.createElement("span",null,"I am ",t,". I am ",r," years old.")},rn=function(e){function n(e){var t,a,r;return function(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}(this,n),a=this,r=en(n).call(this,e),t=!r||"object"!==tn(r)&&"function"!=typeof r?Ye(a):r,Ze(Ye(t),"handleClick",(function(e){var n=t.state.foo;e.preventDefault(),t.setState({foo:n.then(Xe(500)).then((function(e){return e+1}))})})),t.state={name:Promise.resolve("Isaac").then(Xe(5e3)),age:Promise.resolve(35).then(Xe(1e4)),foo:Promise.resolve(0)},t}var t,a,r;return function(e,n){if("function"!=typeof n&&null!==n)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(n&&n.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),n&&nn(e,n)}(n,e),t=n,(a=[{key:"render",value:function(){var e=this.props,n=e.id,t=e.className,a=this.state,r=a.name,i=a.age,s=a.foo,c=d()($e.a.className,"playground-then",t);return o.createElement(Pe,{id:n,className:c},o.createElement(l.Helmet,null,o.createElement("title",null,"<Then /> - caasih.net")),o.createElement("h1",null,"<Then />"),o.createElement("p",null,"做了一個把 React component property 從 ",o.createElement("code",null,"T")," 提升到 ",o.createElement("code",null,"Promise<T>")," 的玩具：",o.createElement("a",{href:"https://www.npmjs.com/package/@caasi/then"},"@caasi/then")),o.createElement("p",null,"用起來大概像這樣："),o.createElement("section",{className:$e.a.demo},o.createElement(qe.Then,{name:r,age:i},o.createElement(an,null)),o.createElement("br",null),o.createElement(qe.Then,{foo:s},function(e){var n=e.foo;return o.createElement("span",null,"Delayed counter: ",n,".",o.createElement("br",null),o.createElement("button",{onClick:this.handleClick},"Increase"))}.bind(this))),o.createElement("p",null,"雖然 TonyQ 大大在 fb ",o.createElement("a",{href:"https://www.facebook.com/caasihuang/posts/10209375463222355"},"提醒說"),"這樣會打亂 React 的生命週期。但這個套件的初衷是將 component 看成 function ，像 ",o.createElement("code",null,"Promise")," 在 JavaScript 中，把時間抽象掉，只留下「先後順序」那樣。"),o.createElement("p",null,"其實",o.createElement("a",{href:"https://github.com/g0v/itaigi"},"新台語·運動"),"用到的 ",o.createElement("a",{href:"https://github.com/RickWong/react-transmit"},"react-transmit")," 也做了類似的事情，只是它用 higher-order component 達成，而不是組合 component 。"),o.createElement("p",null,"於是我不關心餵給這個 component 的 promise 們什麼時候完成，我只在意完成後它該怎麼顯示。正如我們寫 React compmonet 時，不在意背後怎麼 render 整個 virtual DOM ，只「描述」我們希望它顯示成什麼樣子。"),o.createElement("hr",null),o.createElement("p",null,"（說到 higher-order 就有氣，明明是可以",o.createElement("a",{href:"http://babel.ls.fi.upm.es/~pablo/Papers/Notes/f-fw.pdf",title:"A Short Introduction to Systems F and Fw"},"好好定義"),"的詞，現在講成什麼「接收一個或以上的 function 作為參數或回傳 function 作為回傳值」，那我要問：「 higher 是比較級，那它是 higher than what? 」，還有「 order 是什麼呢？可以舉 order 為 1 或 order 為 2 的 function 給我看看嗎？」，北七欸）"),o.createElement(De,{size:"compact",type:"by"}))}}])&&Qe(t.prototype,a),r&&Qe(t,r),n}(o.Component);Ze(rn,"defaultProps",{className:""});var on=rn,sn=t(16),ln=t(259),cn=t.n(ln),un=t(260),dn=t(261),pn=t.n(dn);function mn(e,n){for(var t=0;t<n.length;t++){var a=n[t];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}function hn(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function fn(e){return(fn=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function gn(e,n){return!n||"object"!==yn(n)&&"function"!=typeof n?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):n}function bn(e,n){return(bn=Object.setPrototypeOf||function(e,n){return e.__proto__=n,e})(e,n)}var yn=function(e){return e&&"undefined"!=typeof Symbol&&e.constructor===Symbol?"symbol":typeof e},vn=function(e){function n(e){var t;return function(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}(this,n),(t=gn(this,fn(n).call(this,e))).state={open:e.open},t}var t,a,r;return function(e,n){if("function"!=typeof n&&null!==n)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(n&&n.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),n&&bn(e,n)}(n,e),t=n,(a=[{key:"render",value:function(){var e=this.props,n=e.id,t=e.className,a=e.children,r=e.language,o=e.label,s=this.state.open,l=d()(pn.a.className,"caasih-source-code",t);return i.a.createElement("div",{id:n,className:l},i.a.createElement("label",{onClick:function(){return this.setState({open:!s})}.bind(this)},s?"-":"+"," ",o),s&&i.a.createElement(cn.a,{language:r,style:un.github},a))}}])&&mn(t.prototype,a),r&&mn(t,r),n}(o.PureComponent);hn(vn,"propTypes",{className:O.a.string,lanugage:O.a.string,label:O.a.string,open:O.a.bool}),hn(vn,"defaultProps",{className:"",label:"source",open:!1});var wn=vn;var xn=function(){return o.createElement(sn.a,null,o.createElement(sn.c,{width:30,height:30,fill:"red"}),o.createElement(sn.e,{fontSize:64,text:"oops!"}))};function Sn(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function kn(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}function Pn(e,n){for(var t=0;t<n.length;t++){var a=n[t];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}function En(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function Cn(){return(Cn=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var a in t)Object.prototype.hasOwnProperty.call(t,a)&&(e[a]=t[a])}return e}).apply(this,arguments)}function Tn(e){return(Tn=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function Mn(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}function _n(e,n){return!n||"object"!==jn(n)&&"function"!=typeof n?Sn(e):n}function On(e,n){return(On=Object.setPrototypeOf||function(e,n){return e.__proto__=n,e})(e,n)}var jn=function(e){return e&&"undefined"!=typeof Symbol&&e.constructor===Symbol?"symbol":typeof e},Nn=function(e){function n(){var e;return kn(this,n),En(Sn(e=_n(this,Tn(n).apply(this,arguments))),"width",0),En(Sn(e),"height",0),En(Sn(e),"componentDidMount",e.handleResize),En(Sn(e),"componentDidUpdate",e.handleResize),e}var t,a,r;return function(e,n){if("function"!=typeof n&&null!==n)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(n&&n.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),n&&On(e,n)}(n,e),t=n,(a=[{key:"handleResize",value:function(){if(this.textNode){var e=this.textNode.width(),n=this.textNode.height();if(this.width!==e||this.height!==n){var t=this.props.onResize;"function"==typeof t&&t(e,n),this.width=e,this.height=n}}}},{key:"render",value:function(){var e=this.props,n=(e.onResize,Mn(e,["onResize"]));return o.createElement(sn.e,Cn({},n,{ref:function(e){return this.textNode=e}.bind(this)}))}}])&&Pn(t.prototype,a),r&&Pn(t,r),n}(o.PureComponent);function In(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function Dn(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}function Rn(e,n){for(var t=0;t<n.length;t++){var a=n[t];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}function An(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function Ln(e){return(Ln=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function Fn(e,n){return!n||"object"!==Hn(n)&&"function"!=typeof n?In(e):n}function Bn(e,n){return(Bn=Object.setPrototypeOf||function(e,n){return e.__proto__=n,e})(e,n)}var Hn=function(e){return e&&"undefined"!=typeof Symbol&&e.constructor===Symbol?"symbol":typeof e},zn=function(e){function n(){var e;return Dn(this,n),An(In(e=Fn(this,Ln(n).apply(this,arguments))),"padding",{vertical:16,horizontal:8}),An(In(e),"state",{w:0,h:0}),An(In(e),"handleResize",(function(n,t){e.setState({w:n,h:t})})),e}var t,a,r;return function(e,n){if("function"!=typeof n&&null!==n)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(n&&n.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),n&&Bn(e,n)}(n,e),t=n,(a=[{key:"render",value:function(){var e=this.state,n=e.w,t=e.h,a=n+2*this.padding.vertical,r=t+2*this.padding.horizontal;return i.a.createElement(sn.a,null,i.a.createElement(sn.c,{width:a,height:r,fill:"red",cornerRadius:6}),i.a.createElement(Nn,{x:this.padding.vertical,y:this.padding.horizontal,fontSize:32,text:"much better",onResize:this.handleResize}))}}])&&Rn(t.prototype,a),r&&Rn(t,r),n}(o.PureComponent);function Gn(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function Wn(e,n){for(var t=0;t<n.length;t++){var a=n[t];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}function Un(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function Vn(e){return(Vn=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function Jn(e,n){return(Jn=Object.setPrototypeOf||function(e,n){return e.__proto__=n,e})(e,n)}var qn=function(e){return e&&"undefined"!=typeof Symbol&&e.constructor===Symbol?"symbol":typeof e},Xn=function(e){function n(e){var t,a,r;return function(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}(this,n),a=this,t=!(r=Vn(n).call(this,e))||"object"!==qn(r)&&"function"!=typeof r?Gn(a):r,Un(Gn(t),"styles",{cornerRadius:6,padding:{top:6,right:8,bottom:6,left:8}}),Un(Gn(t),"textNode",void 0),t.state={w:0,h:0},t}var t,a,r;return function(e,n){if("function"!=typeof n&&null!==n)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(n&&n.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),n&&Jn(e,n)}(n,e),t=n,(a=[{key:"updateDimension",value:function(){if(this.textNode){var e=this.textNode.getWidth(),n=this.textNode.getHeight();this.setState({w:e,h:n});var t=this.props.onResize;if(t){var a=this.styles.padding;t(e+a.left+a.right,n+a.top+a.bottom)}}}},{key:"componentDidMount",value:function(){this.updateDimension()}},{key:"componentDidUpdate",value:function(e){this.props.text!==e.text&&this.updateDimension()}},{key:"render",value:function(){var e=this.styles,n=e.cornerRadius,t=e.padding,a=this.props,r=a.x,i=a.y,s=a.fontSize,l=a.text,c=a.color,u=a.backgroundColor,d=this.state,p=d.w,m=d.h,h=p+t.left+t.right,f=m+t.top+t.bottom;return o.createElement(sn.a,{x:r,y:i},o.createElement(sn.c,{width:h,height:f,fill:u,cornerRadius:n}),o.createElement(sn.e,{ref:function(e){return this.textNode=e}.bind(this),x:t.left,y:t.top,fontSize:s,fill:c,text:l}))}}])&&Wn(t.prototype,a),r&&Wn(t,r),n}(o.PureComponent);Un(Xn,"defaultProps",{className:"",x:0,y:0,fontSize:12,color:"white",backgroundColor:"black"});var Kn=Xn;function $n(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function Yn(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}function Qn(e,n){for(var t=0;t<n.length;t++){var a=n[t];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}function Zn(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function et(e){return(et=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function nt(e,n){return!n||"object"!==at(n)&&"function"!=typeof n?$n(e):n}function tt(e,n){return(tt=Object.setPrototypeOf||function(e,n){return e.__proto__=n,e})(e,n)}var at=function(e){return e&&"undefined"!=typeof Symbol&&e.constructor===Symbol?"symbol":typeof e},rt=function(e){function n(){var e;return Yn(this,n),Zn($n(e=nt(this,et(n).apply(this,arguments))),"state",{dimensions:[]}),Zn($n(e),"styles",{margin:{right:8}}),e}var t,a,r;return function(e,n){if("function"!=typeof n&&null!==n)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(n&&n.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),n&&tt(e,n)}(n,e),t=n,(a=[{key:"getDimension",value:function(e){return this.state.dimensions[e]||{width:0,height:0}}},{key:"setDimension",value:function(e,n){var t=void 0===n?{}:n,a=t.width,r=void 0===a?0:a,o=t.height,i=void 0===o?0:o,s=this.state.dimensions,l={width:r,height:i};return s[e]=l,this.setState({dimensions:s}),l}},{key:"handleResize",value:function(e){return function(n,t){return this.setDimension(e,{width:n,height:t})}.bind(this)}},{key:"render",value:function(){for(var e=this.props,n=e.children,t=e.x,a=e.y,r=o.Children.count(n),i=[],s=0;s<r;++s)i[s]=this.getDimension(s).width+this.styles.margin.right;return i=i.reduce((function(e,n){return e.concat([e[e.length-1]+n])}),[0]),o.createElement(sn.a,{x:t,y:a},o.Children.map(n,function(e,n){return o.cloneElement(e,{x:i[n],onResize:this.handleResize(n)})}.bind(this)))}}])&&Qn(t.prototype,a),r&&Qn(t,r),n}(o.Component);Zn(rt,"defaultProps",{x:0,y:0});var ot=rt;function it(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function st(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}function lt(e,n){for(var t=0;t<n.length;t++){var a=n[t];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}function ct(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function ut(e){return(ut=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function dt(e,n){return!n||"object"!==ht(n)&&"function"!=typeof n?it(e):n}function pt(e,n){return(pt=Object.setPrototypeOf||function(e,n){return e.__proto__=n,e})(e,n)}function mt(e){return function(e){if(Array.isArray(e))return e}(e)||function(e){if(Symbol.iterator in Object(e)||"[object Arguments]"===Object.prototype.toString.call(e))return Array.from(e)}(e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance")}()}var ht=function(e){return e&&"undefined"!=typeof Symbol&&e.constructor===Symbol?"symbol":typeof e},ft=function(e){function n(){var e;return st(this,n),ct(it(e=dt(this,ut(n).apply(this,arguments))),"state",{width:0,height:0}),ct(it(e),"styles",{margin:{right:8}}),ct(it(e),"handleResize",(function(n,t){e.setState({width:n,height:t})})),e}var t,a,r;return function(e,n){if("function"!=typeof n&&null!==n)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(n&&n.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),n&&pt(e,n)}(n,e),t=n,(a=[{key:"render",value:function(){var e=this.props,t=e.children,a=e.x,r=e.y,i=this.state,s=i.width,l=(i.height,mt(o.Children.toArray(t))),c=l[0],u=l.slice(1);return void 0===c?null:o.createElement(sn.a,{x:a,y:r},o.cloneElement(c,{onResize:this.handleResize}),o.createElement(n,{x:s+this.styles.margin.right},u))}}])&&lt(t.prototype,a),r&&lt(t,r),n}(o.Component);ct(ft,"defaultProps",{x:0,y:0});var gt=ft;function bt(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function yt(e,n){for(var t=0;t<n.length;t++){var a=n[t];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}function vt(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function wt(){return(wt=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var a in t)Object.prototype.hasOwnProperty.call(t,a)&&(e[a]=t[a])}return e}).apply(this,arguments)}function xt(e){return(xt=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function St(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}function kt(e,n){return(kt=Object.setPrototypeOf||function(e,n){return e.__proto__=n,e})(e,n)}function Pt(e){return function(e){if(Array.isArray(e)){for(var n=0,t=new Array(e.length);n<e.length;n++)t[n]=e[n];return t}}(e)||function(e){if(Symbol.iterator in Object(e)||"[object Arguments]"===Object.prototype.toString.call(e))return Array.from(e)}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance")}()}var Et=function(e){return e&&"undefined"!=typeof Symbol&&e.constructor===Symbol?"symbol":typeof e};function Ct(e){var n=e.index||Pt(e.children).length;return{width:1/0,prevIndex:n,index:n}}var Tt=function(e){function n(e){var t,a,r;return function(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}(this,n),a=this,r=xt(n).call(this,e),t=!r||"object"!==Et(r)&&"function"!=typeof r?bt(a):r,vt(bt(t),"handleTextResize",(function(e,n){var a=t.state.index;if(0!==a){e>t.props.width?t.setState({width:e,index:Math.floor(a/2),prevIndex:a}):t.setState({width:e})}else{var r=t.props.onResize;"function"==typeof r&&r(e,n,t.props.children)}})),vt(bt(t),"handleResize",(function(e,n,a){var r=t.props.onResize;"function"==typeof r&&r(t.state.width+e,n,a)})),t.state=Ct(e),t}var t,a,r;return function(e,n){if("function"!=typeof n&&null!==n)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(n&&n.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),n&&kt(e,n)}(n,e),t=n,(a=[{key:"componentDidUpdate",value:function(e,n){this.props.children===e.children&&this.props.width===e.width||this.setState(Ct(this.props))}},{key:"render",value:function(){var e=this.props,t=e.children,a=e.x,r=e.y,i=e.width,s=(e.onResize,St(e,["children","x","y","width","onResize"])),l=this.state,c=l.width,u=l.index,d=l.prevIndex,p=Pt(t),m=p.slice(0,u).join(""),h=p.slice(u).join("");return o.createElement(o.Fragment,null,o.createElement(Nn,wt({},s,{x:a,y:r,text:m,onResize:this.handleTextResize})),u>0&&c<i&&o.createElement(n,wt({},s,{x:a+c,y:r,width:i-c,index:Math.floor((d-u)/2),onResize:this.handleResize}),h))}}])&&yt(t.prototype,a),r&&yt(t,r),n}(o.PureComponent);vt(Tt,"defaultProps",{children:"",x:0,y:0,width:0});var Mt=Tt;t(229);function _t(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function Ot(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}function jt(e,n){for(var t=0;t<n.length;t++){var a=n[t];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}function Nt(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function It(){return(It=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var a in t)Object.prototype.hasOwnProperty.call(t,a)&&(e[a]=t[a])}return e}).apply(this,arguments)}function Dt(e){return(Dt=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function Rt(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}function At(e,n){return!n||"object"!==Bt(n)&&"function"!=typeof n?_t(e):n}function Lt(e,n){return(Lt=Object.setPrototypeOf||function(e,n){return e.__proto__=n,e})(e,n)}function Ft(e){return function(e){if(Array.isArray(e)){for(var n=0,t=new Array(e.length);n<e.length;n++)t[n]=e[n];return t}}(e)||function(e){if(Symbol.iterator in Object(e)||"[object Arguments]"===Object.prototype.toString.call(e))return Array.from(e)}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance")}()}var Bt=function(e){return e&&"undefined"!=typeof Symbol&&e.constructor===Symbol?"symbol":typeof e},Ht=function(e){function n(){var e;return Ot(this,n),Nt(_t(e=At(this,Dt(n).apply(this,arguments))),"textNode",void 0),Nt(_t(e),"state",{width:0,height:0,left:""}),Nt(_t(e),"handleTextResize",(function(n,t,a){var r=void 0===a?"":a,o=e.props,i=o.width,s=o.onResize;if(void 0!==i)0===r.length&&s&&s(n,t,r),e.setState({width:n,height:t,left:r});else{var l=e.textNode.getWidth(),c=e.textNode.getHeight();s&&s(l,c,"")}})),Nt(_t(e),"handleResize",(function(n,t,a){var r=e.props.onResize,o=e.state,i=o.width,s=o.height;r&&r(i>n?i:n,s+t,a)})),e}var t,a,r;return function(e,n){if("function"!=typeof n&&null!==n)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(n&&n.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),n&&Lt(e,n)}(n,e),t=n,(a=[{key:"componentDidUpdate",value:function(e,n){this.props.children===e.children&&this.props.width===e.width&&this.props.height===e.height||this.setState({width:0,height:0,left:""})}},{key:"render",value:function(){var e=this.props,t=e.children,a=e.x,r=e.y,i=e.width,s=e.height,l=Rt(e,["children","x","y","width","height"]);if(void 0===i)return o.createElement(Nn,It({},l,{x:a,y:r,text:t,onResize:this.handleTextResize}));if(void 0===s){var c=this.state,u=(c.width,c.height),d=c.left,p=Ft(d).length;return o.createElement(o.Fragment,null,o.createElement(Mt,It({},l,{x:a,y:r,width:i,onResize:this.handleTextResize}),t),0!==p&&o.createElement(n,It({},l,{x:a,y:r+u,width:i,onResize:this.handleResize}),d))}return null}}])&&jt(t.prototype,a),r&&jt(t,r),n}(o.PureComponent);Nt(Ht,"defaultProps",{children:"",x:0,y:0});var zt=Ht,Gt=t(80),Wt=t.n(Gt);function Ut(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}function Vt(e,n){for(var t=0;t<n.length;t++){var a=n[t];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}function Jt(e){return(Jt=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function qt(e,n){return!n||"object"!==Kt(n)&&"function"!=typeof n?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):n}function Xt(e,n){return(Xt=Object.setPrototypeOf||function(e,n){return e.__proto__=n,e})(e,n)}var Kt=function(e){return e&&"undefined"!=typeof Symbol&&e.constructor===Symbol?"symbol":typeof e};function $t(e){var n=e.children;return o.createElement(sn.d,{className:Wt.a.stage,width:210,height:80},o.createElement(sn.b,null,n))}var Yt=function(e){function n(){return Ut(this,n),qt(this,Jt(n).apply(this,arguments))}var t,a,r;return function(e,n){if("function"!=typeof n&&null!==n)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(n&&n.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),n&&Xt(e,n)}(n,e),t=n,(a=[{key:"render",value:function(){var e=this.props,n=e.id,t=e.className,a=d()(Wt.a.className,"playground-react-konva",t);return o.createElement(Pe,{id:n,className:a},o.createElement(l.Helmet,null,o.createElement("title",null,"React Konva - caasih.net")),o.createElement("h1",null,"React Konva"),o.createElement("p",null,"React Konva 將 Canvas 繪圖函式庫 Konva.js 包裝成 React components 。 Konva.js 則將 Canvas 操作包裝好，提供容器（例如 ",o.createElement("code",null,"Group")," ）將形狀們包裝起來，方便位移、旋轉。"),o.createElement("p",null,"乍看很美好，但 Konva.js 不提供像 HTML 或 SVG 那樣的排版功能。"),o.createElement("figure",null,o.createElement($t,null,o.createElement(xn,null)),o.createElement("figcaption",null,o.createElement("code",null,"Rect")," 和 ",o.createElement("code",null,"Text")," 彼此無關")),o.createElement(wn,{language:"jsx"},"/* @flow */\n\nimport * as React from 'react'\nimport { Group, Rect, Text } from 'react-konva'\n\nfunction TextAndRect() {\n  return (\n    <Group>\n      <Rect width={30} height={30} fill=\"red\" />\n      <Text fontSize={64} text=\"oops!\" />\n    </Group>\n  )\n}\n\nexport default TextAndRect\n"),o.createElement("p",null,"可以給 Konva.js ",o.createElement("code",null,"Text")," 特定寬、高，來限制繪製區域。若希望在繪製完後根據文字寬高畫其他元件，則需要多包裝一下。"),o.createElement("p",null,"下面提到的元件都以 ",o.createElement("a",{href:"https://flow.org/"},"Flow")," 標註型別，有著類似結構："),o.createElement(wn,{open:!0,language:"jsx"},"/* @flow */\n\nimport React, { PureComponent } from 'react'\n\ntype Props = {\n  id?: string,\n  className: string\n}\n\nclass Comp extends PureComponent<Props> {\n  static defaultProps = {\n    className: ''\n  }\n\n  render() {\n    const { id, className } = this.props\n\n    return (\n      <div id={id} className={className}>\n        This is a component.\n      </div>\n    )\n  }\n}\n\nexport default Comp\n"),o.createElement("hr",null),o.createElement("p",null,"為了取得文字寬高，得用上 ",o.createElement("a",{href:"https://reactjs.org/docs/refs-and-the-dom.html"},o.createElement("code",null,"ref"))," 來存取 React 包裝起來的繪製結果。平常取得的 ",o.createElement("code",null,"ref")," 是 DOM node ，在 React Konva 下，我們拿到的是 ",o.createElement("a",{href:"https://konvajs.github.io/api/Konva.Text.html"},o.createElement("code",null,"Konva.Text"))," 。"),o.createElement(wn,{open:!0,language:"jsx"},"return (\n  <KonvaText\n    {...props}\n    ref={node => this.textNode = node}\n  />\n)\n"),o.createElement("p",null,"接著在 ",o.createElement("code",null,"componentDidMount")," 和 ",o.createElement("code",null,"componentDidUpdate")," 時，就可以將長寬回報給父元件。"),o.createElement(wn,{open:!0,language:"jsx"},"handleResize() {\n  if (!this.textNode) return\n\n  const width = this.textNode.getTextWidth()\n  const height = this.textNode.getTextHegiht()\n\n  if (this.width !== width || this.height !== height) {\n    const { onResize } = this.props\n    if (typeof onResize === 'function') {\n      onResize(width, height)\n    }\n    this.width = width\n    this.height = height\n  }\n}\n"),o.createElement("p",null,"當你想畫個剛好可以容納文字的容器時，靠 ",o.createElement("code",null,"onResize")," 取得第一次畫的文字長寬，再畫一次外面的容器即可。因為第二次畫的 ",o.createElement("code",null,"Text")," 長寬不變， ",o.createElement("code",null,"onResize")," 不會再被呼叫一次，不用擔心遞迴呼叫停不下來。"),o.createElement("figure",null,o.createElement($t,null,o.createElement(zn,null)),o.createElement("figcaption",null,o.createElement("code",null,"Text")," 畫完後，再根據其長寬畫外框")),o.createElement(wn,{open:!0,language:"jsx"},'render() {\n  const { w, h } = this.state\n  const width = w + 2 * this.padding.vertical\n  const height = h + 2 * this.padding.horizontal\n\n  return (\n    <Group>\n      <Rect\n        width={width}\n        height={height}\n        fill="red"\n        cornerRadius={6}\n      />\n      <Text\n        x={this.padding.vertical}\n        y={this.padding.horizontal}\n        fontSize={32}\n        text="much better"\n        onResize={(w, h) => this.setState({ w, h })}\n      />\n    </Group>\n  )\n}\n'),o.createElement("hr",null),o.createElement("p",null,"如果今天希望一列這樣的 ",o.createElement("code",null,"Tag")," ，可以自動抓好彼此間的寬度與間距，該怎麼辦？為了讓父組件知道子組件的寬高變化，可以讓 ",o.createElement("code",null,"Tag")," 也有自己的 ",o.createElement("code",null,"onResize")," ，將寬高傳上去。"),o.createElement("figure",null,o.createElement($t,null,o.createElement(Kn,{text:"a tag"})),o.createElement("figcaption",null,"一個 ",o.createElement("code",null,"Tag")," 長這樣")),o.createElement(wn,{language:"jsx",label:"Tag.jsx"},"import * as React from 'react'\nimport { Group, Rect, Text } from 'react-konva'\n\nclass Tag extends React.PureComponent {\n  static defaultProps = {\n    className: '',\n    x: 0,\n    y: 0,\n    fontSize: 12,\n    color: 'white',\n    backgroundColor: 'black',\n  }\n\n  styles = {\n    cornerRadius: 6,\n    padding: {\n      top: 6,\n      right: 8,\n      bottom: 6,\n      left: 8,\n    }\n  }\n\n  textNode\n\n  constructor(props) {\n    super(props)\n    this.state = { w: 0, h: 0 }\n  }\n\n  updateDimension() {\n    if (!this.textNode) return\n\n    const w = this.textNode.getWidth()\n    const h = this.textNode.getHeight()\n\n    this.setState({ w, h })\n\n    const { onResize } = this.props\n    if (onResize) {\n      const { padding } = this.styles\n      const width = w + padding.left + padding.right\n      const height = h + padding.top + padding.bottom\n      onResize(width, height)\n    }\n  }\n\n  componentDidMount() {\n    this.updateDimension()\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.text !== prevProps.text) {\n      this.updateDimension()\n    }\n  }\n\n  render() {\n    const { cornerRadius, padding } = this.styles\n    const { x, y, fontSize, text, color, backgroundColor } = this.props\n    const { w, h } = this.state\n    const width = w + padding.left + padding.right\n    const height = h + padding.top + padding.bottom\n\n    return (\n      <Group x={x} y={y}>\n        <Rect\n          width={width}\n          height={height}\n          fill={backgroundColor}\n          cornerRadius={cornerRadius}\n        />\n        <Text\n          ref={node => this.textNode = node}\n          x={padding.left}\n          y={padding.top}\n          fontSize={fontSize}\n          fill={color}\n          text={text}\n        />\n      </Group>\n    )\n  }\n}\n\nexport default Tag\n"),o.createElement("p",null,"接著準備一個容器 ",o.createElement("code",null,"TagList")," ，他會記下子組件送來的寬度，好重新排版。將子組件當成 ",o.createElement("code",null,"children")," 傳遞給它時，不用提供 ",o.createElement("code",null,"onResize")," ，由 ",o.createElement("code",null,"TagList")," 自己以 ",o.createElement("code",null,"cloneElement")," 插入。"),o.createElement("figure",null,o.createElement($t,null,o.createElement(ot,null,o.createElement(Kn,{text:"this"}),o.createElement(Kn,{text:"is"}),o.createElement(Kn,{text:"my"}),o.createElement(Kn,{text:"tags"}))),o.createElement("figcaption",null,"以迴圈實作的 ",o.createElement("code",null,"TagList"))),o.createElement(wn,{language:"jsx",label:"TagList.jsx"},"import * as React from 'react'\nimport { Group } from 'react-konva'\n\nclass TagList extends React.Component {\n  static defaultProps = {\n    x: 0,\n    y: 0,\n  }\n\n  state = {\n    dimensions: [],\n  }\n\n  styles = {\n    margin: {\n      right: 8,\n    }\n  }\n\n  getDimension(index) {\n    return this.state.dimensions[index] || { width: 0, height: 0 }\n  }\n\n  setDimension(index, { width = 0, height = 0 } = {}) {\n    const { dimensions } = this.state\n    const dimension = { width, height }\n    dimensions[index] = dimension\n    this.setState({ dimensions })\n    return dimension\n  }\n\n  handleResize(index) {\n    return (width, height) => {\n      return this.setDimension(index, { width, height })\n    }\n  }\n\n  render() {\n    const { children, x, y } = this.props\n    const count = React.Children.count(children)\n    let xs = []\n    for (let i = 0; i < count; ++i) {\n      xs[i] = this.getDimension(i).width + this.styles.margin.right\n    }\n    xs = xs.reduce((acc, value) => acc.concat([acc[acc.length - 1] + value]), [0])\n\n    return (\n      <Group x={x} y={y}>\n        {React.Children.map(children, (child, i) =>\n          React.cloneElement(\n            child,\n            { x: xs[i], onResize: this.handleResize(i) }\n          )\n        )}\n      </Group>\n    )\n  }\n}\n\nexport default TagList\n"),o.createElement("p",null,"也可以遞迴實作這個 ",o.createElement("code",null,"TagList")," 。"),o.createElement("figure",null,o.createElement($t,null,o.createElement(gt,null,o.createElement(Kn,{text:"這是"}),o.createElement(Kn,{text:"一堆"}),o.createElement(Kn,{text:"標籤"}))),o.createElement("figcaption",null,"遞迴實作的 ",o.createElement("code",null,"TagList"))),o.createElement(wn,{language:"jsx",label:"TagListRec.jsx"},"import * as React from 'react'\nimport { Group } from 'react-konva'\n\nclass TagListRec extends React.Component {\n  static defaultProps = {\n    x: 0,\n    y: 0,\n  }\n\n  state = {\n    width: 0,\n    height: 0,\n  }\n\n  styles = {\n    margin: {\n      right: 8,\n    }\n  }\n\n  handleResize = (width, height) => {\n    this.setState({ width, height })\n  }\n\n  render() {\n    const { children, x, y } = this.props\n    const { width, height } = this.state\n    const [c, ...cs] = React.Children.toArray(children)\n\n    if (c === undefined) return null\n\n    return (\n      <Group x={x} y={y}>\n        {React.cloneElement(c, { onResize: this.handleResize })}\n        <TagListRec x={width + this.styles.margin.right}>\n          {cs}\n        </TagListRec>\n      </Group>\n    )\n  }\n}\n\nexport default TagListRec\n"),o.createElement("hr",null),o.createElement("p",null,"反過來說，可以先決定容器的寬度，再不斷修改內容物，直到所有子組件都能塞到容器內。"),o.createElement("figure",null,o.createElement($t,null,o.createElement(sn.c,{x:1,y:1,width:120,height:10,stroke:"#2ecc71",strokeWidth:1}),o.createElement(Mt,{x:0,y:0,width:120},"你專業，我信你！"),o.createElement(sn.c,{x:1,y:21,width:72,height:10,stroke:"#2ecc71",strokeWidth:1}),o.createElement(Mt,{x:0,y:20,width:72},"你專業，我信你！"),o.createElement(sn.c,{x:1,y:41,width:50,height:10,stroke:"#2ecc71",strokeWidth:1}),o.createElement(Mt,{x:0,y:40,width:50},"你專業，我信你！")),o.createElement("figcaption",null,o.createElement("code",null,"WidthBoundedText")," 專心把文字畫在指定寬度中")),o.createElement("p",null,"有了限制寬度的容器，可以做到文字換行。"),o.createElement("figure",null,o.createElement($t,null,o.createElement(zt,{width:150},"中國政協會議定調，Lytro，呂明賜帶中華隊，追憶黃昭堂，基本面強勁，社會萬象，豐濱落海失蹤男童，金酸莓11入圍")),o.createElement("figcaption",null,"一行 150px")),o.createElement(De,{size:"compact",type:"by"}))}}])&&Vt(t.prototype,a),r&&Vt(t,r),n}(o.Component);!function(e,n,t){n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t}(Yt,"defaultProps",{className:""});var Qt=Yt,Zt=function(e,n){return{toScreen:function(t){var a=t.x,r=void 0===a?0:a,o=t.y,i=void 0===o?0:o,s=t.width,l=void 0===s?0:s,c=t.height,u=void 0===c?0:c,d=e.width/n.width,p=e.height/n.height;return{x:(r-n.x)*d,y:(i-n.y)*p,width:l*d,height:u*p}},toGlobal:function(t){var a=t.x,r=void 0===a?0:a,o=t.y,i=void 0===o?0:o,s=t.width,l=void 0===s?0:s,c=t.height,u=void 0===c?0:c,d=n.width/e.width,p=n.height/e.height;return{x:r*d+n.x,y:i*p+n.y,width:l*d,height:u*p}}}};function ea(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function na(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{},a=Object.keys(t);"function"==typeof Object.getOwnPropertySymbols&&(a=a.concat(Object.getOwnPropertySymbols(t).filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable})))),a.forEach((function(n){ea(e,n,t[n])}))}return e}function ta(e){return function(e){if(Array.isArray(e)){for(var n=0,t=new Array(e.length);n<e.length;n++)t[n]=e[n];return t}}(e)||function(e){if(Symbol.iterator in Object(e)||"[object Arguments]"===Object.prototype.toString.call(e))return Array.from(e)}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance")}()}var aa=function(){for(var e=arguments.length,n=new Array(e),t=0;t<e;t++)n[t]=arguments[t];return function(e){return n.reduce((function(e,n){return n(e)}),e)}},ra=function(e,n){return function(){return{screen:{x:0,y:0,width:e,height:n},viewport:{x:0,y:0,width:e,height:n},isDraggingV:!1,startPointV:{x:0,y:0},prevPointV:{x:0,y:0},objects:{0:{id:"0",x:0,y:0,width:200,height:160},1:{id:"1",x:210,y:20,width:300,height:200}},selection:[],boundingBox:{x:0,y:0,width:0,height:0},isDragging:!1,startPoint:{x:0,y:0},prevPoint:{x:0,y:0}}}},oa=function(e){return function(n){return e.objects[n]}},ia=function(e){if(0===e.selection.length)return na({},e,{boundingBox:{x:0,y:0,width:0,height:0}});var n=e.selection.map(oa(e)).reduce((function(e,n){var t=n.x,a=n.x+n.width,r=n.y,o=n.y+n.height;return{left:t<e.left?t:e.left,top:r<e.top?r:e.top,right:a>e.right?a:e.right,bottom:o>e.bottom?o:e.bottom}}),{left:1/0,top:1/0,right:-1/0,bottom:-1/0});return na({},e,{boundingBox:{x:n.left,y:n.top,width:n.right-n.left,height:n.bottom-n.top}})},sa=function(e){return aa(function(e){return function(n){var t=e.id,a=-1===n.selection.indexOf(t)?ta(n.selection).concat([t]):n.selection;return na({},n,{selection:a})}}(e),ia)},la=function(e){return aa(function(e){return function(n){var t=[],a=!0,r=!1,o=void 0;try{for(var i,s=n.selection[Symbol.iterator]();!(a=(i=s.next()).done);a=!0){var l=i.value;l!==e.id&&t.push(l)}}catch(e){r=!0,o=e}finally{try{a||null==s.return||s.return()}finally{if(r)throw o}}return na({},n,{selection:t})}}(e),ia)},ca=function(e){return function(n){return function(e){return function(n){var t=e.id,a=na({},n.objects,ea({},t,e));return na({},n,{objects:a})}}(na({},n,{x:n.x+e.x,y:n.y+e.y}))}},ua=function(e){return function(n){var t=n.screen,a=n.viewport,r=(0,Zt(t,a).toGlobal)(e),o={x:r.x,y:r.y};return na({},n,{isDragging:!0,startPoint:o,prevPoint:o})}},da=function(){return function(e){var n={x:0,y:0};return na({},e,{isDragging:!1,startPoint:n,prevPoint:n})}},pa=function(e){var n=e.x,t=e.y;return function(e){var a=e.selection,r=e.prevPoint,o=e.screen,i=e.viewport,s=(0,Zt(o,i).toGlobal)({width:n,height:t}),l={x:s.width,y:s.height},c={x:l.x-r.x,y:l.y-r.y},u=a.map(oa(e)).map(ca(c));return u.push((function(e){return na({},e,{prevPoint:l})})),u.push(ia),aa.apply(void 0,ta(u))(e)}},ma=function(e){return function(n){var t=n.screen,a=na({},n.viewport,{width:t.width*e,height:t.height*e});return na({},n,{viewport:a})}},ha=function(e){return function(n){var t=n.screen,a=n.viewport,r=(0,Zt(t,a).toGlobal)(e),o={x:r.x,y:r.y};return na({},n,{isDraggingV:!0,startPointV:o,prevPointV:o})}},fa=function(){return function(e){var n={x:0,y:0};return na({},e,{isDraggingV:!1,startPointV:n,prevPointV:n})}},ga=function(e){var n=e.x,t=e.y;return function(e){var a,r=e.prevPointV,o=e.screen,i=e.viewport,s=(0,Zt(o,i).toGlobal)({width:n,height:t}),l={x:s.width,y:s.height},c={x:l.x-r.x,y:l.y-r.y};return aa((a=c,function(e){var n=e.viewport,t=na({},n,{x:n.x+a.x,y:n.y+a.y});return na({},e,{viewport:t})}),(function(e){return na({},e,{prevPointV:l})}))(e)}},ba=t(262),ya=t.n(ba);function va(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}function wa(e){return Math.floor(100*e)/100}function xa(e){var n=e.id,t=e.className,a=e.screen,r=e.viewport,o=e.selected,s=e.onClick,l=e.onMouseDown,c=e.onMouseMove,u=e.onMouseUp,p=va(e,["id","className","screen","viewport","selected","onClick","onMouseDown","onMouseMove","onMouseUp"]),m=d()(ya.a.className,"minmap-object",{selected:o},t),h=(0,Zt(a,r).toScreen)(p),f=h.x,g=h.y,b=h.width,y=h.height,v={left:f,top:g,width:b,height:y};return i.a.createElement("div",{id:n,className:m,style:v,onClick:function(n){return s&&s(n,e)},onMouseDown:function(n){return l&&l(n,e)},onMouseMove:function(n){return c&&c(n,e)},onMouseUp:function(n){return u&&u(n,e)}},i.a.createElement("span",null,"pos: (".concat(wa(f),", ").concat(wa(g),")")),i.a.createElement("br",null),i.a.createElement("span",null,"dim: (".concat(wa(b),", ").concat(wa(y),")")))}xa.defaultProps={className:"",x:0,y:0,width:0,height:0,selected:!1};var Sa=xa,ka=t(263),Pa=t.n(ka);function Ea(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}function Ca(e,n){for(var t=0;t<n.length;t++){var a=n[t];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}function Ta(e){return(Ta=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function Ma(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}function _a(e,n){return!n||"object"!==ja(n)&&"function"!=typeof n?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):n}function Oa(e,n){return(Oa=Object.setPrototypeOf||function(e,n){return e.__proto__=n,e})(e,n)}var ja=function(e){return e&&"undefined"!=typeof Symbol&&e.constructor===Symbol?"symbol":typeof e},Na=function(e){function n(){return Ea(this,n),_a(this,Ta(n).apply(this,arguments))}var t,a,r;return function(e,n){if("function"!=typeof n&&null!==n)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(n&&n.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),n&&Oa(e,n)}(n,e),t=n,(a=[{key:"render",value:function(){var e=this.props,n=e.id,t=e.className,a=e.screen,r=e.viewport,o=Ma(e,["id","className","screen","viewport"]),s=d()(Pa.a.className,"minmap-bounding-box",t),l=(0,Zt(a,r).toScreen)(o),c={left:l.x,top:l.y,width:l.width,height:l.height};return i.a.createElement("div",{id:n,className:s,style:c})}}])&&Ca(t.prototype,a),r&&Ca(t,r),n}(o.PureComponent);!function(e,n,t){n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t}(Na,"defaultProps",{className:"",x:0,y:0,width:0,height:0});var Ia=Na;var Da=function(){return i.a.createElement("div",null,i.a.createElement(Ka,null,(function(e){var n=e.actions,t=e.screen,a=e.viewport.width/t.width;return i.a.createElement(o.Fragment,null,i.a.createElement("button",{onClick:function(){return n.scaleViewport(a-.1)}},"+"),i.a.createElement("button",{onClick:function(){return n.scaleViewport(a+.1)}},"-"))})))},Ra=t(81),Aa=t.n(Ra);function La(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function Fa(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}function Ba(e,n){for(var t=0;t<n.length;t++){var a=n[t];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}function Ha(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function za(){return(za=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var a in t)Object.prototype.hasOwnProperty.call(t,a)&&(e[a]=t[a])}return e}).apply(this,arguments)}function Ga(e){return(Ga=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function Wa(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{},a=Object.keys(t);"function"==typeof Object.getOwnPropertySymbols&&(a=a.concat(Object.getOwnPropertySymbols(t).filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable})))),a.forEach((function(n){Ha(e,n,t[n])}))}return e}function Ua(e,n){return!n||"object"!==Ja(n)&&"function"!=typeof n?La(e):n}function Va(e,n){return(Va=Object.setPrototypeOf||function(e,n){return e.__proto__=n,e})(e,n)}var Ja=function(e){return e&&"undefined"!=typeof Symbol&&e.constructor===Symbol?"symbol":typeof e},qa=Object(o.createContext)({state:{objects:{}}}),Xa=qa.Provider,Ka=qa.Consumer,$a=function(e){function n(){var e;return Fa(this,n),Ha(La(e=Ua(this,Ga(n).apply(this,arguments))),"state",Wa({},ra(640,480)(),{actions:{scaleViewport:function(n){return e.setState(ma(n))},dragViewportStart:function(n){return e.setState(ha(n))},dragViewportEnd:function(){return e.setState(fa())},dragViewportMove:function(n){return e.setState(ga(n))},select:function(n){return e.setState(sa(n))},unselect:function(n){return e.setState(la(n))},dragStart:function(n){return e.setState(ua(n))},dragEnd:function(){return e.setState(da())},dragMove:function(n){return e.setState(pa(n))}}})),e}var t,a,r;return function(e,n){if("function"!=typeof n&&null!==n)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(n&&n.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),n&&Va(e,n)}(n,e),t=n,(a=[{key:"render",value:function(){var e=this.props,n=e.id,t=e.className,a=d()(Aa.a.className,"playground-minmap",t),r=this.state,o=r.actions,s=r.screen,l=r.viewport,c=r.isDraggingV,u=r.objects,p=r.selection,m=r.boundingBox,h=r.isDragging;return i.a.createElement("div",{id:n,className:a},i.a.createElement("div",{className:Aa.a.content,onMouseDown:function(e){o.dragViewportStart({x:-e.clientX,y:-e.clientY})},onMouseMove:function(e){c&&o.dragViewportMove({x:-e.clientX,y:-e.clientY}),h&&o.dragMove({x:e.clientX,y:e.clientY})},onMouseUp:function(e){o.dragViewportEnd()}},Object.values(u).map(function(e){var n=-1!==p.indexOf(e.id);return i.a.createElement(Sa,za({},e,{key:e.id,screen:s,viewport:l,selected:n,onClick:function(e,n){},onMouseDown:function(e,n){e.stopPropagation(),o.dragStart({x:e.clientX,y:e.clientY})},onMouseUp:function(e,t){e.stopPropagation();var a=e.clientX,r=e.clientY;o.dragEnd();var i=this.state.startPoint;Math.abs(i.x-a)<Number.EPSILON&&Math.abs(i.y-r)<Number.EPSILON&&(n?o.unselect(t):o.select(t))}.bind(this)}))}.bind(this)),i.a.createElement(Ia,za({},m,{screen:s,viewport:l}))),i.a.createElement(Xa,{value:this.state},i.a.createElement(Da,null)))}}])&&Ba(t.prototype,a),r&&Ba(t,r),n}(o.Component);Ha($a,"defaultProps",{className:""});var Ya=$a;function Qa(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}function Za(e,n){for(var t=0;t<n.length;t++){var a=n[t];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}function er(e){return(er=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function nr(e,n){return!n||"object"!==ar(n)&&"function"!=typeof n?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):n}function tr(e,n){return(tr=Object.setPrototypeOf||function(e,n){return e.__proto__=n,e})(e,n)}var ar=function(e){return e&&"undefined"!=typeof Symbol&&e.constructor===Symbol?"symbol":typeof e},rr=function(e){function n(){return Qa(this,n),nr(this,er(n).apply(this,arguments))}var t,a,r;return function(e,n){if("function"!=typeof n&&null!==n)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(n&&n.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),n&&tr(e,n)}(n,e),t=n,(a=[{key:"render",value:function(){var e=this.props,n=e.id,t=e.className,a=d()("playground-map",t);return i.a.createElement(Pe,{id:n,className:a},i.a.createElement(l.Helmet,null,i.a.createElement("title",null,"Map - caasih.net")),i.a.createElement("h1",null,"Map"),i.a.createElement("p",null,"這裡比較像素描簿而不是遊樂場，堆著各種沒做完的草稿。"),i.a.createElement(Ya,null),i.a.createElement("p",null,"這是一個簡單的地圖，靠 React 16 的 context API ，可以不用 Redux 管理 global state 。"),i.a.createElement(De,{size:"compact",type:"by"}))}}])&&Za(t.prototype,a),r&&Za(t,r),n}(o.Component);!function(e,n,t){n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t}(rr,"defaultProps",{className:""});var or=rr;t(903);function ir(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}function sr(e,n){for(var t=0;t<n.length;t++){var a=n[t];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}function lr(e){return(lr=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function cr(e,n){return!n||"object"!==dr(n)&&"function"!=typeof n?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):n}function ur(e,n){return(ur=Object.setPrototypeOf||function(e,n){return e.__proto__=n,e})(e,n)}var dr=function(e){return e&&"undefined"!=typeof Symbol&&e.constructor===Symbol?"symbol":typeof e},pr=function(e){function n(){return ir(this,n),cr(this,lr(n).apply(this,arguments))}var t,a,r;return function(e,n){if("function"!=typeof n&&null!==n)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(n&&n.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),n&&ur(e,n)}(n,e),t=n,(a=[{key:"render",value:function(){var e=this.props,n=e.id,t=e.className,a=d()("playground-purescript",t);return o.createElement(Pe,{id:n,className:a},o.createElement(l.Helmet,null,o.createElement("title",null,"PureScript - caasih.net")),o.createElement("h1",null,"PureScript"),o.createElement("p",null,"自從上次練習 VAT 驗證後，就再也沒碰過 PureScript 。最近好想用支援 ADT 的語言，撿回來學看看 XD"),o.createElement(wn,{open:!0,language:"haskell"},"module Prelude\n  ( module Data.Void\n  ) where\n\nimport Data.Void (Void, absurd)\n"),o.createElement(De,{size:"compact",type:"by"}))}}])&&sr(t.prototype,a),r&&sr(t,r),n}(o.PureComponent);!function(e,n,t){n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t}(pr,"defaultProps",{className:""});var mr=pr;t(74);function hr(){return(hr=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var a in t)Object.prototype.hasOwnProperty.call(t,a)&&(e[a]=t[a])}return e}).apply(this,arguments)}function fr(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var gr=function(e){var n=e.imageData,t=fr(e,["imageData"]),a=n||{},r=a.width,s=void 0===r?0:r,l=a.height,c=void 0===l?0:l,u=Object(o.useCallback)((function(e){e&&n&&e.getContext("2d").putImageData(n,0,0)}),[n]);return i.a.createElement("canvas",hr({},t,{ref:u,role:"img",width:s,height:c}))},br=t(19),yr=t(57),vr=t.n(yr);function wr(e,n){return function(e){if(Array.isArray(e))return e}(e)||function(e,n){var t=[],a=!0,r=!1,o=void 0;try{for(var i,s=e[Symbol.iterator]();!(a=(i=s.next()).done)&&(t.push(i.value),!n||t.length!==n);a=!0);}catch(e){r=!0,o=e}finally{try{a||null==s.return||s.return()}finally{if(r)throw o}}return t}(e,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance")}()}var xr=function(e){var n=e.id,t=Object(br.useImageData)("https://farm8.staticflickr.com/7166/6595168855_5566d615d9_b.jpg"),a=wr(Object(br.useInput)(i.a.createElement("input",{type:"range",min:"0.0",max:"1.0",step:"0.01"}),"1.0"),2),r=a[0],s=a[1],l=wr(Object(br.useInput)(i.a.createElement("input",{type:"range",min:"0.0",max:"1.0",step:"0.01"}),"1.0"),2),c=l[0],u=l[1],d=wr(Object(br.useInput)(i.a.createElement("input",{type:"range",min:"0.0",max:"1.0",step:"0.01"}),"1.0"),2),p=d[0],m=d[1],h=+r;(isNaN(h)||h<0||1<h)&&(h=1);var f=+c;(isNaN(f)||f<0||1<f)&&(f=1);var g=+p;(isNaN(g)||g<0||1<g)&&(g=1);var b=Object(o.useMemo)((function(){if(!t)return t;for(var e=function(e){var n=new("Uint8ClampedArray"in window?Uint8ClampedArray:Uint8Array)(e.data);return new ImageData(n,e.width,e.height)}(t),n=e.data,a=0;a<n.length;a+=4)n[a]=n[a]*h,n[a+1]=n[a+1]*f,n[a+2]=n[a+2]*g;return e}),[t,h,f,g]),y=(b||{}).width,v=void 0===y?0:y;return i.a.createElement("div",{id:n,style:{display:v?"block":"none"}},i.a.createElement("div",{className:vr.a.image},i.a.createElement(gr,{imageData:b,role:"img","aria-label":"20111227 nigel",style:{width:"100%"}}),i.a.createElement("section",{className:vr.a.control},i.a.createElement("div",null,"R ",s),i.a.createElement("div",null,"G ",u),i.a.createElement("div",null,"B ",m))),i.a.createElement("div",{className:vr.a.source},i.a.createElement("a",{href:"https://www.flickr.com/photos/84175980@N00/6595168855"},'"20111227 nigel"')," by ",i.a.createElement("a",{href:"https://www.flickr.com/photos/84175980@N00"},"schizoform")," is licensed under ",i.a.createElement("a",{href:"https://creativecommons.org/licenses/by/2.0"}," CC BY 2.0 ")))},Sr=t(82),kr=t.n(Sr);function Pr(){return(Pr=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var a in t)Object.prototype.hasOwnProperty.call(t,a)&&(e[a]=t[a])}return e}).apply(this,arguments)}function Er(e){var n=e.x,t=e.y,a=e.children;return i.a.createElement("div",{className:kr.a.star,style:{left:n,top:t}},i.a.createElement("div",null,a))}function Cr(e,n,t){var a=e.x,r=e.y,o=Object(br.useRange)(0,2*Math.PI/t)*t;return{x:a+Math.cos(o)*n,y:r+Math.sin(o)*n}}var Tr=function(){var e={x:200,y:200},n=Cr(e,140,.001),t=Cr(n,20,-.005);return i.a.createElement("div",{className:kr.a.system},i.a.createElement(Er,Pr({},e),"☉"),i.a.createElement(Er,Pr({},n),"♁"),i.a.createElement(Er,Pr({},t),"☽︎"))},Mr=function(e,n){return function(t){var a=t.id,r=t.className,o=t.children;return i.a.createElement(Pe,{id:a,className:d()(n,r)},i.a.createElement(l.Helmet,{title:e}),o)}};function _r(){return(_r=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var a in t)Object.prototype.hasOwnProperty.call(t,a)&&(e[a]=t[a])}return e}).apply(this,arguments)}function Or(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var jr={},Nr=Mr("ImageData - caasih.net","playground-use-image-data");function Ir(e){var n=e.components,t=Or(e,["components"]);return i.a.createElement(Nr,_r({},jr,t,{components:n,mdxType:"MDXLayout"}),i.a.createElement("h1",null,"ImageData"),i.a.createElement("p",null,"把一個 React Hook 搬到這裡，它叫 ",i.a.createElement("inlineCode",{parentName:"p"},"useImageData")," 。"),i.a.createElement(xr,{mdxType:"Picture"}),i.a.createElement(wn,{open:!0,language:"jsx",mdxType:"SourceCode"},"import { useState, useEffect } from 'react'\n\nexport function useImageData(url) {\n  const [imageData, setImageData] = useState()\n\n  useEffect(() => {\n    let img = new Image()\n    img.crossOrigin = 'anonymous'\n    img.src = url\n\n    const f = () => {\n      const canvas = document.createElement('canvas')\n      canvas.width = img.width\n      canvas.height = img.height\n      const ctx = canvas.getContext('2d')\n      ctx.drawImage(img, 0, 0)\n      setImageData(ctx.getImageData(0, 0, img.width, img.height))\n      img.removeEventListener('load', f)\n    }\n\n    img.addEventListener('load', f, false)\n\n    return () => {\n      img.removeEventListener('load', f)\n      img = undefined\n    }\n  }, [url])\n\n  return imageData\n}\n\nexport default useImageData\n"),i.a.createElement("p",null,"也許有些人看了這些會覺得我不懂 React，在那邊嘴什麼奇怪的東西..。其實你們要說的那些我是知道的，而且大家介紹的也夠多了，我想從一個異於平常的角度，重新再來看待 React Hooks，希望給大家一個平常沒有想到的啟發。"),i.a.createElement("p",null,"把 React 的 render function 看成 reentrant function ，那就可以將 React Hooks\n看成某種包含資料依賴關係的 trait/type class 。裡面放什麼則看你怎麼組合 ",i.a.createElement("inlineCode",{parentName:"p"},"useState"),", ",i.a.createElement("inlineCode",{parentName:"p"},"useEffect")," 與 ",i.a.createElement("inlineCode",{parentName:"p"},"useCallback")," 等 Hooks 。"),i.a.createElement("p",null,"不管它放的是什麼， CPS 變換會在 rerender 時完成，於是用的人拿到的是包裹的值，而不是時間上或空間上的容器。"),i.a.createElement("p",null,"CPS 變換這裡就不贅述，從 2011 開始寫 js 的大家肯定是知道的。"),i.a.createElement("p",null,"但我記得 ECMAScript 沒打算做 deep generator ，不知道未來 React Hooks\n會怎麼走？像之前被 iCook 面試時，前端大大提到的那樣，靠 babel transpile 嗎？"),i.a.createElement("p",null,"後來找半天沒找到 ES Discuss 上關於 coroutine 的討論，但發現 the Little Calculist\n2011 年曾寫過 ",i.a.createElement("a",_r({parentName:"p"},{href:"http://calculist.org/blog/2011/12/14/why-coroutines-wont-work-on-the-web/"}),"Why coroutines won’t work on the web"),"\n，解釋為何 JS 不太可能有 coroutine 。"),i.a.createElement("hr",null),i.a.createElement("p",null,"同理，善用 ",i.a.createElement("inlineCode",{parentName:"p"},"requestAnimationFrame")," 與 React Hook ，也可以拚出各種按時間變化的值。"),i.a.createElement(Tr,{mdxType:"System"}),i.a.createElement(wn,{open:!0,language:"jsx",mdxType:"SourceCode"},"import React from 'react'\nimport { useRange } from '@caasi/hooks'\nimport styles from './index.css'\n\nfunction Star({ x, y, children }) {\n  return (\n    <div className={styles.star} style={{ left: x, top: y }}>\n      <div>{children}</div>\n    </div>\n  );\n}\n\nfunction useCirclePath({ x, y }, r, speed) {\n  const rad = useRange(0, 2 * Math.PI / speed) * speed\n  const dx = Math.cos(rad) * r\n  const dy = Math.sin(rad) * r\n  return { x: x + dx, y: y + dy }\n}\n\nfunction System() {\n  const sun = { x: 200, y: 200 }\n  const earth = useCirclePath(sun, 140, 1/1000)\n  const moon = useCirclePath(earth, 20, -1/200)\n\n  return (\n    <div className={styles.system}>\n      <Star {...sun}>☉</Star>\n      <Star {...earth}>♁</Star>\n      <Star {...moon}>☽︎</Star>\n    </div>\n  )\n}\n\nexport default System\n"),i.a.createElement("hr",null),i.a.createElement("p",null,"EDIT: 補上朋友建議的挑釁段落 XD"),i.a.createElement(De,{size:"compact",type:"by",mdxType:"CreativeCommons"}))}function Dr(e,n){return function(e){if(Array.isArray(e))return e}(e)||function(e,n){var t=[],a=!0,r=!1,o=void 0;try{for(var i,s=e[Symbol.iterator]();!(a=(i=s.next()).done)&&(t.push(i.value),!n||t.length!==n);a=!0);}catch(e){r=!0,o=e}finally{try{a||null==s.return||s.return()}finally{if(r)throw o}}return t}(e,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance")}()}Ir.isMDXComponent=!0;var Rr=function(e){var n=e.id,t=e.className,a=d()("playground-zigzag",t),r=Dr(Object(o.useState)(),2),s=r[0],c=r[1],u=Object(br.useImageFile)(s);return i.a.createElement(Pe,{id:n,className:a},i.a.createElement(l.Helmet,{title:"Jigsaw - caasih.net"}),i.a.createElement("h1",null,"Jigsaw"),i.a.createElement("input",{type:"file",onChange:function(e){1===e.target.files.length&&c(e.target.files[0])}}),i.a.createElement(gr,{imageData:u,role:"img","aria-label":s&&s.name,style:{width:"100%"}}),i.a.createElement(De,{size:"compact",type:"by"}))},Ar=["#1abc9c","#2ecc71","#3498db","#9b59b6","#34495e","#f1c40f","#e67e22","#e74c3c","#ecf0f1","#95a5a6"],Lr=[[3,3,4,4,4,3,4,4,4,3,3],[3,4,7,7,7,4,7,7,7,4,3],[4,7,7,7,7,7,7,6,6,7,4],[4,7,7,7,7,7,7,7,6,7,4],[4,7,7,7,7,7,7,7,7,7,4],[3,4,7,7,7,7,7,7,7,4,3],[3,3,4,7,7,7,7,7,4,3,3],[3,3,3,4,7,7,7,4,3,3,3],[3,3,3,3,4,7,4,3,3,3,3],[3,3,3,3,3,4,3,3,3,3,3]].map((function(e){return e.map((function(e){return{backgroundColor:Ar[e]}}))})),Fr=t(31),Br=t.n(Fr);var Hr=function(e){var n=e.data;return i.a.createElement("div",{className:Br.a.colorRect,style:n})};var zr=function(e){var n=e.children;return Object(br.useSpace)(n)};var Gr=function(e){var n=e.data,t=e.children,a=Object(br.useArray)(n);return void 0===a?null:i.a.createElement("div",null,i.a.createElement(zr,null,Object(o.cloneElement)(o.Children.only(t),{data:a})))};function Wr(e,n){return function(e){if(Array.isArray(e))return e}(e)||function(e,n){var t=[],a=!0,r=!1,o=void 0;try{for(var i,s=e[Symbol.iterator]();!(a=(i=s.next()).done)&&(t.push(i.value),!n||t.length!==n);a=!0);}catch(e){r=!0,o=e}finally{try{a||null==s.return||s.return()}finally{if(r)throw o}}return t}(e,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance")}()}function Ur(e){return function(e){if(Array.isArray(e)){for(var n=0,t=new Array(e.length);n<e.length;n++)t[n]=e[n];return t}}(e)||function(e){if(Symbol.iterator in Object(e)||"[object Arguments]"===Object.prototype.toString.call(e))return Array.from(e)}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance")}()}var Vr=window.location.protocol,Jr="".concat(Vr.replace(/^http/,"ws"),"//echo.websocket.org");function qr(e){return e}var Xr=function(e){var n=e.id,t=e.className,a=d()(Br.a.className,"playground-useless",t),r=Wr(Object(o.useState)("abc"),2),s=r[0],c=r[1],u=Object(o.useMemo)((function(){return[void 0].concat(s.split(""))}),[s]),p=Object(br.useArray)(u),m=Object(br.useSpace)(p),h=Wr(Object(o.useState)(""),2),f=h[0],g=h[1],b=Wr(Object(br.useWebSocket)(Jr),2),y=b[0],v=b[1],w=(void 0===v?[]:v).filter((function(e){return e})).reverse(),x=Wr(Object(o.useState)(!1),2),S=x[0],k=x[1],P=Wr(Object(o.useState)(0),2),E=P[0],C=P[1],T=Object(o.useMemo)((function(){return i.a.createElement(Hr,{data:{backgroundColor:Ar[E]}})}),[E]);Object(o.useEffect)((function(){var e,n=function(){S&&(e=requestAnimationFrame(n),C(Math.floor(Math.random()*Ar.length)))};return e=requestAnimationFrame(n),function(){return cancelAnimationFrame(e)}}),[S]);var M=Object(o.useMemo)((function(){return i.a.createElement(Gr,{data:Lr},i.a.createElement(Gr,null,i.a.createElement(Hr,null)))}),[Lr]);return i.a.createElement(Pe,{id:n,className:a},i.a.createElement(l.Helmet,{title:"無測無用 - caasih.net"}),i.a.createElement("h1",null,"無測無用"),i.a.createElement("h2",null,i.a.createElement("code",null,"useLess")),i.a.createElement("p",null,"當應用程式狀態更新時， ",i.a.createElement("code",null,"useState")," hook 讓我們無視時間，拿到最新的值，好像我們一開始看到的就是最後的值一樣。"),i.a.createElement("p",null,"換個角度看，也可以說 ",i.a.createElement("code",null,"useState")," 幫我們把值攤到時間上了。例如可以寫一個 ",i.a.createElement("code",null,"useArray")," ，把陣列中的值變成一系列更新："),i.a.createElement(wn,{open:!0,language:"js"},"import { useState, useEffect } from 'react';\n\nexport default function useArray(xs) {\n  const [index, setIndex] = useState(0);\n\n  useEffect(() => {\n    setIndex(0);\n  }, [xs]);\n\n  useEffect(() => {\n    if (index < xs.length - 1) setIndex(index + 1);\n  }, [xs, index]);\n\n  return xs[index];\n}\n"),i.a.createElement("p",null,"let xs =  ",i.a.createElement("input",{value:s,onChange:function(e){c(e.target.value)}})),i.a.createElement("p",null,"這東西很沒用，當你把 ",i.a.createElement("code",null,"xs = [",u.filter(qr).join(", "),"]")," 丟給它，只會看到最後的 ",i.a.createElement("code",null,p)," 。"),i.a.createElement("h3",null,i.a.createElement("code",null,"useSpace")),i.a.createElement("p",null,"但既然能把值攤到時間上，能不能反過來把時間上的變化，蒐集起來呢？"),i.a.createElement("p",null,"可以設計一個 ",i.a.createElement("code",null,"useSpace")," hook ："),i.a.createElement(wn,{open:!0,language:"js"},"import { useState, useEffect } from 'react';\nimport useFold from './use-fold';\n\nconst concat = (acc = [], x) => [...acc, x];\n\nfunction useSpace(state) {\n  return useFold(state, concat, []);\n}\n\nexport default useSpace;\n"),i.a.createElement("p",null,"於是我們又把 ",i.a.createElement("code",null,p)," 變回了 ",i.a.createElement("code",null,"[",function(e){return(void 0===e?[]:e).reduce((function(e,n){return void 0===n?[]:Ur(e).concat([n])}),[])}(m).join(", "),"]")," 。"),i.a.createElement("h3",null,i.a.createElement("code",null,"useWebSocket")),i.a.createElement("p",null,"靠 React Hooks 與 event listener 互動時，會遇上：「更新值的 function 得隨著值一起更新，於是得一直 add event listener ，再 remove event listener 」。"),i.a.createElement("p",null,"有了 ",i.a.createElement("code",null,"useSpace")," ，我們可以："),i.a.createElement(wn,{open:!0,language:"js"},"function useWebSocket(url) {\n  // ...\n\n  const [message, setMessage] = useState();\n  const messages = useSpace(message);\n\n  // ...\n\n  const handleMessage = useCallback(({ data }) => {\n    setMessage(data);\n  }, [setMessage]);\n\n  // ...\n}\n"),i.a.createElement("p",null,"於是 ",i.a.createElement("code",null,"handleMessage")," 不用看到整個 ",i.a.createElement("code",null,"messages")," 。"),i.a.createElement("form",{className:Br.a.demo},i.a.createElement("p",null,"和 ",i.a.createElement("code",null,Jr)," 通訊看看："),i.a.createElement("section",null,i.a.createElement("fieldset",null,i.a.createElement("input",{value:f,onChange:function(e){return g(e.target.value)}}),i.a.createElement("button",{onClick:function(e){e.preventDefault(),y.send(f),g("")}},"↵")),0!==w.length&&i.a.createElement("ol",null,w.filter((function(e){return e})).map((function(e,n){return i.a.createElement("li",{key:n},e)}))))),i.a.createElement("p",null,"但這個問題完全可以靠傳遞一個 update function 給 ",i.a.createElement("code",null,"setState")," 解決，無用。"),i.a.createElement("h3",null,i.a.createElement("code",null,"<SpaceTime />")),i.a.createElement("p",null,"我們還可以做出這樣的 component ："),i.a.createElement(wn,{open:!0,language:"jsx"},"import { useSpace } from '@caasi/hooks'\n\nfunction SpaceTime({ children }) {\n  return useSpace(children)\n}\n\nexport default SpaceTime;\n"),i.a.createElement("p",null,i.a.createElement("code",null,"<SpaceTime />")," 展開過去繪製過的 children ，於是這樣寫："),i.a.createElement(wn,{open:!0,language:"jsx"},"import React from 'react'\nimport styles from './index.css'\n\nfunction ColorRect({ data }) {\n  return (\n    <div\n      className={styles.colorRect}\n      style={data}\n    />\n  )\n}\n\nexport default ColorRect\n"),i.a.createElement(wn,{open:!0,language:"jsx"},"<SpaceTime>\n  <ColorRect data={{ backgroundColor: color }} />\n</SpaceTime>\n"),i.a.createElement("p",null,"就能達成下面的效果："),i.a.createElement("div",{className:Br.a.demo},i.a.createElement("p",null,"點下面的方塊："),i.a.createElement("div",{className:Br.a.currentRect,onMouseDown:function(){return k(!0)},onMouseUp:function(){return k(!1)},onMouseLeave:function(){return k(!1)}},T),i.a.createElement("div",{className:Br.a.previousRects},i.a.createElement(zr,null,T))),i.a.createElement("p",null,"但這也可以靠 ",i.a.createElement("code",null,"useState")," 做到，無用。😂"),i.a.createElement("h3",null,i.a.createElement("code",null,"map")),i.a.createElement("p",null,"既然我們可以把值攤到時間上再組合回來，就可以把 ",i.a.createElement("code",null,"Array::map")," 藏起來："),i.a.createElement(wn,{open:!0,language:"jsx"},"import React, { Children, cloneElement } from 'react'\nimport { useArray } from '@caasi/hooks';\nimport SpaceTime from './SpaceTime'\n\nfunction List({ data, children }) {\n  const x = useArray(data)\n  return x === undefined\n    ? null\n    : (\n      <div>\n        <SpaceTime>\n          {cloneElement(Children.only(children), { data: x })}\n        </SpaceTime>\n      </div>\n    )\n}\n\nexport default List\n"),i.a.createElement("p",null,"再一口氣畫完一張圖："),i.a.createElement(wn,{open:!0,language:"jsx"},"<List data={styleMap}>\n  <List>\n    <ColorRect />\n  </List>\n</List>\n"),i.a.createElement("div",{className:Br.a.demo},M),i.a.createElement("p",null,"超無用！❤️"),i.a.createElement("h3",null,"更多無用"),i.a.createElement("ul",null,i.a.createElement("li",null,"因為新版的 ",i.a.createElement("code",null,"useSpace")," 沒辦法 reset ，所以偷偷使用 ",i.a.createElement("code",null,"undefined")," 當成分隔符號。"),i.a.createElement("li",null,"要是連續兩個值完全一樣，會被 ",i.a.createElement("code",null,"useArray")," 忽略。"),i.a.createElement("li",null,"這些 custom hooks 很難測試，只好靠 E2E test 工具 ",i.a.createElement("a",{href:"https://www.cypress.io/"},i.a.createElement("code",null,"cypress"))," 來測。")),i.a.createElement("p",null,"感謝朋友在閒聊時，提供標題 XD"),i.a.createElement(De,{size:"compact",type:"by"}))},Kr=t(264),$r=t.n(Kr),Yr=t(265);function Qr(e,n){return function(e){if(Array.isArray(e))return e}(e)||function(e,n){var t=[],a=!0,r=!1,o=void 0;try{for(var i,s=e[Symbol.iterator]();!(a=(i=s.next()).done)&&(t.push(i.value),!n||t.length!==n);a=!0);}catch(e){r=!0,o=e}finally{try{a||null==s.return||s.return()}finally{if(r)throw o}}return t}(e,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance")}()}function Zr(){return"getVRDisplays"in navigator?navigator.getVRDisplays():Promise.reject("WebVR not supported")}new(t.n(Yr).a);var eo=new VRFrameData;function no(e){var n=Qr(Object(o.useState)(eo),2),t=n[0],a=n[1];return Object(o.useEffect)((function(){var n,t=function(){var r=new VRFrameData;e.getFrameData(r),a(r),n=e.requestAnimationFrame(t)};return n=e.requestAnimationFrame(t),function(){n&&(e.clearAnimationFrame(n),n=void 0)}}),[e]),t}function to(e){var n=e.as,t=void 0===n?"code":n,a=e.data;return 3===a.length?i.a.createElement(t,null,"[",a[0].toFixed(3),", ",a[1].toFixed(3),", ",a[2].toFixed(3),"]"):4===a.length?i.a.createElement(t,null,"[ ",a[0].toFixed(3),", ",a[1].toFixed(3),i.a.createElement("br",null),", ",a[2].toFixed(3),", ",a[3].toFixed(3),i.a.createElement("br",null),"]"):16===a.length?i.a.createElement(t,null,"[ ",a[0].toFixed(3),", ",a[1].toFixed(3),", ",a[2].toFixed(3),", ",a[3].toFixed(3),i.a.createElement("br",null),", ",a[4].toFixed(3),", ",a[5].toFixed(3),", ",a[6].toFixed(3),", ",a[7].toFixed(3),i.a.createElement("br",null),", ",a[8].toFixed(3),", ",a[9].toFixed(3),", ",a[10].toFixed(3),", ",a[11].toFixed(3),i.a.createElement("br",null),", ",a[12].toFixed(3),", ",a[13].toFixed(3),", ",a[14].toFixed(3),", ",a[15].toFixed(3),i.a.createElement("br",null),"]"):i.a.createElement(t,null,"[array(",a.length,")]")}function ao(e){var n,t,a=e.as,r=void 0===a?"div":a,o=e.name,s=void 0===o?"":o,l=e.data,c=void 0===l?null:l,u=e.depth,d=void 0===u?5:u;return d<=0?null:i.a.createElement(r,null,i.a.createElement("b",null,s),": ",null===c?i.a.createElement("code",null,"null"):void 0===c?i.a.createElement("code",null,"undefined"):!0===c?i.a.createElement("code",null,"true"):!1===c?i.a.createElement("code",null,"false"):(n=c,(null!=(t=Float32Array)&&"undefined"!=typeof Symbol&&t[Symbol.hasInstance]?t[Symbol.hasInstance](n):n instanceof t)?i.a.createElement("div",null,i.a.createElement(to,{data:c})):"number"==typeof c&&c!==(0|c)?c.toFixed(3):"object"==typeof c?i.a.createElement("ul",null,function(e){var n=void 0===e?{}:e,t=[];for(var a in n)a.length&&"_"!==a[0]&&"_"!==a[a.length-1]&&"function"!=typeof n[a]&&t.push(a);return t}(c).map((function(e){return i.a.createElement(ao,{as:"li",key:e,name:e,data:c[e],depth:d-1})}))):i.a.createElement("i",null,c)))}function ro(e){var n=e.as,t=void 0===n?"div":n,a=e.display;return i.a.createElement(ao,{as:t,name:"VRFrameData",data:no(a)})}var oo=function(e){var n=e.id,t=e.className,a=d()($r.a.className,"playground-web-vr",t),r=Qr(Object(br.usePromise)(Object(o.useMemo)(Zr,[])),3),s=r[0],c=void 0===s?[]:s,u=r[1],p=r[2];return i.a.createElement(Pe,{id:n,className:a},i.a.createElement(l.Helmet,{title:"WebVR Playground - caasih.net"}),i.a.createElement("h1",null,"WebVR Playground"),u&&i.a.createElement("p",null,u.message),p?i.a.createElement("p",null,"Loading...."):0===c.length&&i.a.createElement("p",null,"WebVR supported but no ",i.a.createElement("code",null,"VRDisplay"),"s found."),!p&&0!==c.length&&i.a.createElement(i.a.Fragment,null,i.a.createElement(ao,{as:"section",name:"VRDisplay",data:c[0]}),i.a.createElement(ro,{as:"section",display:c[0]})))},io=t(27),so=(t(269),t(11));var lo=function(e){var n=e.style,t=e.imageData,a=null==t?void 0:so.a(t),r=null==t?0:t.width,i=null==t?0:t.height,s=o.useCallback((function(e){null!=e&&(null!=t&&e.getContext("2d").putImageData(t,0,0,0,0,r,i))}),[a]);return o.createElement("canvas",{ref:s,role:"img",style:n,height:i.toString(),width:r.toString()})},co=t(268);var uo=function(e){var n=function(e){var n=o.useState((function(){})),t=n[1],a=n[0];return o.useEffect((function(){if(null==a){var n=new Image;co.a(n,"anonymous"),n.src=e;var r=function(e){var a=document.createElement("canvas"),o=n.width,i=n.height;a.width=o,a.height=i;var s=a.getContext("2d");s.drawImage(n,0,0);var l=s.getImageData(0,0,o,i);io.a(t,(function(e){return l})),n.removeEventListener("load",r)};return n.addEventListener("load",r),function(e){n.removeEventListener("load",r)}}}),[e]),a}("https://farm8.staticflickr.com/7166/6595168855_5566d615d9_b.jpg");return o.createElement(lo,{style:{width:"100%"},imageData:n})};function po(){return(po=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var a in t)Object.prototype.hasOwnProperty.call(t,a)&&(e[a]=t[a])}return e}).apply(this,arguments)}function mo(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var ho={},fo=Mr("ReScript - caasih.net","playground-rescript");function go(e){var n=e.components,t=mo(e,["components"]);return i.a.createElement(fo,po({},ho,t,{components:n,mdxType:"MDXLayout"}),i.a.createElement("h1",null,"ReScript"),i.a.createElement("p",null,"參考 ",i.a.createElement("a",po({parentName:"p"},{href:"https://dev.to/yakimych/adding-reasonml-to-an-existing-codebase-part-1-3kkg"}),"Adding ReasonML to an existing codebase (Part 1)"),"後，現在除了 PureScript 外，也可以用 ReScript 寫 React 元件啦 XD"),i.a.createElement(uo,{mdxType:"ImageData"}),i.a.createElement("div",{style:{textAlign:"center",color:"#666"}},i.a.createElement("a",{href:"https://www.flickr.com/photos/84175980@N00/6595168855"},'"20111227 nigel"')," by ",i.a.createElement("a",{href:"https://www.flickr.com/photos/84175980@N00"},"schizoform")," is licensed under ",i.a.createElement("a",{href:"https://creativecommons.org/licenses/by/2.0"}," CC BY 2.0 ")),i.a.createElement("hr",null),i.a.createElement("p",null,"假設我想重現 ",i.a.createElement("inlineCode",{parentName:"p"},"ImageData")," 的核心功能 ",i.a.createElement("inlineCode",{parentName:"p"},"useImageData")," ，首先我得知道怎麼在 ReScript 中使用 React Hooks ，並寫出這樣的骨架："),i.a.createElement("pre",null,i.a.createElement("code",po({parentName:"pre"},{className:"language-reasonml"}),"let useImageData = url => {\n  let (imageData, setImageData) = React.useState(() => /* 一些程式碼 */);\n\n  React.useEffect1(() => {\n    // 一些程式碼\n  }, [url])\n\n  imageData;\n}\n")),i.a.createElement("p",null,"看 ReScript 教學時會注意到，首先 ",i.a.createElement("inlineCode",{parentName:"p"},"useState")," 給的初始值不是一個值是一個函數。而 ",i.a.createElement("inlineCode",{parentName:"p"},"useEffect")," 後面多了數字。根據之前寫函數語的經驗，可以猜到數字代表的應該是參數數量。"),i.a.createElement("p",null,"參考",i.a.createElement("a",po({parentName:"p"},{href:"https://rescript-lang.org/docs/react/latest/introduction"})," ReScript React 文件"),"發現 ",i.a.createElement("inlineCode",{parentName:"p"},"useEffect1")," 除了只能給一個值外，那個相依的值還不能寫成 ",i.a.createElement("inlineCode",{parentName:"p"},"(url)")," ，得寫成 ",i.a.createElement("inlineCode",{parentName:"p"},"[url]")," 。因為只含一個元素的 tuple 在 ReScript 編譯成 JS 後，會變成單一個值，而不是一個陣列。才需要特別寫上 ",i.a.createElement("inlineCode",{parentName:"p"},"[]")," ，告訴 ",i.a.createElement("inlineCode",{parentName:"p"},"bsb")," 它還是一個陣列。"),i.a.createElement("p",null,"查了一下在 ReScript 裡因為沒有 ",i.a.createElement("inlineCode",{parentName:"p"},"null")," 跟 ",i.a.createElement("inlineCode",{parentName:"p"},"undefined")," （這就是大家一開始選用它的原因，盡可能以 ADT 表示資料，避免共用空值）。得另外使用 ",i.a.createElement("inlineCode",{parentName:"p"},"Js.Nullable")," ："),i.a.createElement("pre",null,i.a.createElement("code",po({parentName:"pre"},{className:"language-reasonml"}),"let (imageData, setImageData) = React.useState(() => Js.Nullable.undefined);\n")),i.a.createElement("p",null,"為了在 ",i.a.createElement("inlineCode",{parentName:"p"},"useEffect1")," 中方便判斷 ",i.a.createElement("inlineCode",{parentName:"p"},"imageData")," 存不存在，得先把 ",i.a.createElement("inlineCode",{parentName:"p"},"Nullable")," 轉成 ",i.a.createElement("inlineCode",{parentName:"p"},"option")," 再 match ："),i.a.createElement("pre",null,i.a.createElement("code",po({parentName:"pre"},{className:"language-reasonml"}),"React.useEffect1(() => {\n  let imageData = Js.Nullable.toOption(imageData);\n  switch (imageData) {\n  | Some(_) => None; // 什麼都不做\n  | None => {\n    // 做些什麼\n  }\n  }\n}, [url]);\n")),i.a.createElement("p",null,"操作 DOM 時，可以像 ",i.a.createElement("inlineCode",{parentName:"p"},"bs-platform")," 附的範例那樣，自己寫 JS 介面，或者選用別人寫好的介面，像是 ",i.a.createElement("a",po({parentName:"p"},{href:"https://github.com/reasonml-community/bs-webapi-incubator"}),i.a.createElement("inlineCode",{parentName:"a"},"bs-webapi"))," 。"),i.a.createElement("p",null,"我會用上 ",i.a.createElement("inlineCode",{parentName:"p"},"Webapi.Dom.Document"),", ",i.a.createElement("inlineCode",{parentName:"p"},"Webapi.Dom.HtmlImageElement"),", ",i.a.createElement("inlineCode",{parentName:"p"},"Webapi.Canvas.CanvasElement"),", ",i.a.createElement("inlineCode",{parentName:"p"},"Webapi.Canvas.Canvas2d")," ，於是先 ",i.a.createElement("inlineCode",{parentName:"p"},"open")," 它們，少打一點字。好達成在 Haskell 中「不加 ",i.a.createElement("inlineCode",{parentName:"p"},"qualified")," 關鍵字，把 module 展開在現在的 namespace 」的效果："),i.a.createElement("pre",null,i.a.createElement("code",po({parentName:"pre"},{className:"language-reasonml"}),"open Webapi.Dom;\nopen Webapi.Canvas;\nopen HtmlImageElement;\n")),i.a.createElement("p",null,"目前 ",i.a.createElement("a",po({parentName:"p"},{href:"https://github.com/reasonml-community/bs-webapi-incubator"}),i.a.createElement("inlineCode",{parentName:"a"},"bs-webapi"))," 沒有提供 ",i.a.createElement("inlineCode",{parentName:"p"},"Canvas")," 2D context 的 ",i.a.createElement("inlineCode",{parentName:"p"},"drawImage")," 函數，可以自己擴充："),i.a.createElement("pre",null,i.a.createElement("code",po({parentName:"pre"},{}),'module MyCanvas2d = {\n  include Canvas2d;\n  [@bs.send] external drawImage : (Canvas2d.t, HtmlImageElement.t, float, float) => unit = "drawImage";\n}\n')),i.a.createElement("p",null,i.a.createElement("inlineCode",{parentName:"p"},"[@bs.send]")," 會生出第一個參數是 class instance 的函數。"),i.a.createElement("p",null,"接著就能操作 DOM ："),i.a.createElement("pre",null,i.a.createElement("code",po({parentName:"pre"},{className:"language-reasonml"}),'switch (imageData) {\n| Some(_) => None;\n| None => {\n    let img = HtmlImageElement.make();\n    img -> setCrossOrigin(Some("anonymous"))\n    img -> setSrc(url);\n\n    let rec f = (_) => {\n        let canvas = document |> Document.createElement("canvas");\n        let width = img |> width;\n        let height = img |> height;\n        canvas -> CanvasElement.setWidth(width);\n        canvas -> CanvasElement.setHeight(height);\n        let ctx = CanvasElement.getContext2d(canvas);\n        ctx |> MyCanvas2d.drawImage(img, 0.0, 0.0);\n        let imageData = ctx -> MyCanvas2d.getImageData(\n            ~sx=0.0,\n            ~sy=0.0,\n            ~sw=Js.Int.toFloat(width),\n            ~sh=Js.Int.toFloat(height)\n        );\n        setImageData((_) => Js.Nullable.return(imageData));\n        img |> removeLoadEventListener(f);\n    }\n\n    img |> addLoadEventListener(f);\n\n    Some(() => {\n        img |> removeLoadEventListener(f);\n    });\n}\n}\n')),i.a.createElement("p",null,"要注意的是這裡用上 ",i.a.createElement("inlineCode",{parentName:"p"},"|>")," 和 ",i.a.createElement("inlineCode",{parentName:"p"},"->")," 兩種語法。 ",i.a.createElement("inlineCode",{parentName:"p"},"|>")," 是 pipe ，會把 ",i.a.createElement("inlineCode",{parentName:"p"},"|>")," 左邊的值，當成右邊的最後一個參數。而 ",i.a.createElement("inlineCode",{parentName:"p"},"->")," 是 pipe first ，會把 ",i.a.createElement("inlineCode",{parentName:"p"},"->")," 左邊的值，當成右邊的第一個參數。"),i.a.createElement("p",null,i.a.createElement("inlineCode",{parentName:"p"},"HtmlImageElement")," 的 ",i.a.createElement("inlineCode",{parentName:"p"},"width"),", ",i.a.createElement("inlineCode",{parentName:"p"},"height")," 是 getter ，靠 ",i.a.createElement("inlineCode",{parentName:"p"},"[@bs.get]")," 橋接，可以想像成它生出了「把 ",i.a.createElement("inlineCode",{parentName:"p"},"HtmlImageElement")," 當第一個參數的 function 」，所以可以用 ",i.a.createElement("inlineCode",{parentName:"p"},"->")," 。前面提到的 ",i.a.createElement("inlineCode",{parentName:"p"},"[@bs.send]")," 也一樣。"),i.a.createElement("p",null,i.a.createElement("inlineCode",{parentName:"p"},"addLoadEventListener"),", ",i.a.createElement("inlineCode",{parentName:"p"},"removeLoadEventListener")," 用的是 ",i.a.createElement("inlineCode",{parentName:"p"},"[@bs.send.pipe]")," ，可以想成生出了「把 context 當成最後一個參數」函數，於是用 ",i.a.createElement("inlineCode",{parentName:"p"},"|>")," 。"),i.a.createElement("p",null,"有個 ",i.a.createElement("a",po({parentName:"p"},{href:"https://github.com/BuckleScript/bucklescript/issues/2625"}),"issue")," 討論到 ",i.a.createElement("inlineCode",{parentName:"p"},"->")," 和 ",i.a.createElement("inlineCode",{parentName:"p"},"|>")," 的效率。在 ",i.a.createElement("inlineCode",{parentName:"p"},"bs-webapi")," 改寫之前，哪時候該用 ",i.a.createElement("inlineCode",{parentName:"p"},"->")," 、哪時候該用 ",i.a.createElement("inlineCode",{parentName:"p"},"|>")," 還是得乖乖看程式碼。"),i.a.createElement("hr",null),i.a.createElement("p",null,"附上 ",i.a.createElement("inlineCode",{parentName:"p"},"ImageData")," 完整程式："),i.a.createElement(wn,{language:"reasonml",mdxType:"SourceCode"},'open Webapi.Dom\nopen Webapi.Canvas\nopen HtmlImageElement\n\nmodule MyCanvas2d = {\n  include Canvas2d\n  @bs.send external drawImage: (Canvas2d.t, HtmlImageElement.t, float, float) => unit = "drawImage"\n}\n\nlet useImageData = url => {\n  let (imageData, setImageData) = React.useState(() => Js.Nullable.undefined)\n\n  React.useEffect1(() => {\n    let imageData = Js.Nullable.toOption(imageData)\n    switch imageData {\n    | Some(_) => None\n    | None =>\n      let img = HtmlImageElement.make()\n      img->setCrossOrigin(Some("anonymous"))\n      img->setSrc(url)\n\n      let rec f = _ => {\n        let canvas = document |> Document.createElement("canvas")\n        let width = img->width\n        let height = img->height\n        canvas->CanvasElement.setWidth(width)\n        canvas->CanvasElement.setHeight(height)\n        let ctx = canvas->CanvasElement.getContext2d\n        ctx->MyCanvas2d.drawImage(img, 0.0, 0.0)\n        let imageData =\n          ctx->MyCanvas2d.getImageData(\n            ~sx=0.0,\n            ~sy=0.0,\n            ~sw=Js.Int.toFloat(width),\n            ~sh=Js.Int.toFloat(height),\n          )\n        setImageData(_ => Js.Nullable.return(imageData))\n        img |> removeLoadEventListener(f)\n      }\n\n      img |> addLoadEventListener(f)\n\n      Some(() => img |> removeLoadEventListener(f))\n    }\n  }, [url])\n\n  imageData\n}\n\n@react.component\nlet make = () => {\n  let imageData = useImageData("https://farm8.staticflickr.com/7166/6595168855_5566d615d9_b.jpg")\n  let style = ReactDOM.Style.make(~width="100%", ())\n\n  <ImageDataCanvas style imageData />\n}\n'),i.a.createElement("p",null,i.a.createElement("inlineCode",{parentName:"p"},"ImageDataCanvas")," 完整程式："),i.a.createElement(wn,{language:"reasonml",mdxType:"SourceCode"},'open Webapi.Dom\nopen Webapi.Canvas\n\n@react.component\nlet make = (~style, ~imageData: Js.Nullable.t<Image.t>) => {\n  let imageData = Js.Nullable.toOption(imageData)\n  let width = switch imageData {\n  | Some(imageData) => imageData |> Image.width\n  | None => 0.0\n  }\n  let height = switch imageData {\n  | Some(imageData) => imageData |> Image.height\n  | None => 0.0\n  }\n\n  let ref = React.useCallback1((node: Js.Nullable.t<Dom.element>) => {\n    let node = Js.Nullable.toOption(node)\n    switch (node, imageData) {\n    | (Some(node), Some(imageData)) =>\n      let ctx = CanvasElement.getContext2d(node)\n      ctx->Canvas2d.putImageDataWithDirtyRect(\n        ~imageData,\n        ~dx=0.0,\n        ~dy=0.0,\n        ~dirtyX=0.0,\n        ~dirtyY=0.0,\n        ~dirtyWidth=width,\n        ~dirtyHeight=height,\n      )\n    | (_, _) => ()\n    }\n  }, [imageData])\n\n  <canvas\n    style\n    ref={ReactDOM.Ref.callbackDomRef(ref)}\n    role="img"\n    width={Js.Float.toString(width)}\n    height={Js.Float.toString(height)}\n  />\n}\n'),i.a.createElement(De,{size:"compact",type:"by",mdxType:"CreativeCommons"}))}go.isMDXComponent=!0;var bo=t(46),yo=t(2);function vo(e,n){return e.getShaderParameter(n,35713)}yo.h,yo.J;var wo=yo.f,xo=yo.A,So=(yo.t,yo.u,yo.v,yo.M,yo.O,yo.N,yo.g,yo.d,yo.j,yo.K,yo.i,yo.E,yo.B,yo.C,yo.D,yo.T,yo.w,yo.H,yo.z,yo.G,yo.y,yo.k,yo.x,yo.e,yo.P,yo.F,yo.R,yo.s,yo.Q,yo.o,yo.q,yo.c,yo.r,yo.p),ko=yo.S;yo.a,yo.m,yo.b,yo.n,yo.L,yo.I,yo.l;bo.a;var Po=function(e){var n=o.useCallback((function(e){bo.a(null==e?void 0:so.a(e),(function(e){var n=e.getContext("webgl");return bo.a(function(e,n){var t=e.createShader(ko);if(e.shaderSource(t,n),e.compileShader(t),vo(e,t))return so.a(t)}(n,"\n  void main() {\n    gl_Position = vec4(0.0, 0.0, 0.0, 1.0);\n    gl_PointSize = 10.0;\n  }\n"),(function(e){return bo.a(function(e,n){var t=e.createShader(So);if(e.shaderSource(t,n),e.compileShader(t),vo(e,t))return so.a(t)}(n,"\n  void main() {\n    gl_FragColor = vec4(1.0, 0.0, 0.0, 1.0);\n  }\n"),(function(t){return bo.a(function(e,n,t){var a=e.createProgram();if(e.attachShader(a,n),e.attachShader(a,t),e.linkProgram(a),function(e,n){return e.getProgramParameter(n,35714)}(e,a))return so.a(a)}(n,e,t),(function(e){n.useProgram(e),n.clearColor(0,0,0,1),n.clear(wo),n.drawArrays(xo,0,1)}))}))}))}))}),[]);return o.createElement("canvas",{ref:n,height:600..toString(),width:600..toString()})};function Eo(){return(Eo=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var a in t)Object.prototype.hasOwnProperty.call(t,a)&&(e[a]=t[a])}return e}).apply(this,arguments)}function Co(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var To={},Mo=Mr("WebGL - caasih.net","playground-web-gl");function _o(e){var n=e.components,t=Co(e,["components"]);return i.a.createElement(Mo,Eo({},To,t,{components:n,mdxType:"MDXLayout"}),i.a.createElement("h1",null,"WebGL"),i.a.createElement(Po,{mdxType:"Hello"}),i.a.createElement("p",null,"開始啦！"),i.a.createElement(De,{size:"compact",type:"by",mdxType:"CreativeCommons"}))}_o.isMDXComponent=!0;var Oo=t(83),jo=t.n(Oo);function No(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}function Io(e,n){for(var t=0;t<n.length;t++){var a=n[t];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}function Do(e){return(Do=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function Ro(e,n){return!n||"object"!==Lo(n)&&"function"!=typeof n?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):n}function Ao(e,n){return(Ao=Object.setPrototypeOf||function(e,n){return e.__proto__=n,e})(e,n)}var Lo=function(e){return e&&"undefined"!=typeof Symbol&&e.constructor===Symbol?"symbol":typeof e},Fo=["then","react-konva","map","purescript","image-data","jigsaw","useless","web-vr","reasonml","web-gl"],Bo=function(e){function n(){return No(this,n),Ro(this,Do(n).apply(this,arguments))}var t,a,r;return function(e,n){if("function"!=typeof n&&null!==n)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(n&&n.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),n&&Ao(e,n)}(n,e),t=n,(a=[{key:"render",value:function(){var e=this.props,n=e.id,t=e.className,a=e.match,r=d()(jo.a.className,"caasih-playground-list",t),o={},s=!0,c=!1,u=void 0;try{for(var h,f=Fo[Symbol.iterator]();!(s=(h=f.next()).done);s=!0){var g=h.value;o[g]="".concat(a.url,"/").concat(g)}}catch(e){c=!0,u=e}finally{try{s||null==f.return||f.return()}finally{if(c)throw u}}return i.a.createElement("div",{id:n,className:r},i.a.createElement(l.Helmet,null,i.a.createElement("title",null,"playground - caasih.net")),i.a.createElement(m.d,null,i.a.createElement(m.b,{path:o.then},i.a.createElement(on,null)),i.a.createElement(m.b,{path:o["react-konva"]},i.a.createElement(Qt,null)),i.a.createElement(m.b,{path:o.map},i.a.createElement(or,null)),i.a.createElement(m.b,{path:o.purescript},i.a.createElement(mr,null)),i.a.createElement(m.b,{path:o["image-data"]},i.a.createElement(Ir,null)),i.a.createElement(m.b,{path:o.jigsaw},i.a.createElement(Rr,null)),i.a.createElement(m.b,{path:o.useless},i.a.createElement(Xr,null)),i.a.createElement(m.b,{path:o["web-vr"]},i.a.createElement(oo,null)),i.a.createElement(m.b,{path:o.reasonml},i.a.createElement(go,null)),i.a.createElement(m.b,{path:o["web-gl"]},i.a.createElement(_o,null))),i.a.createElement(z,{className:jo.a.list,label:"playground"},i.a.createElement(p.b,{to:o.then},"<Then />"),i.a.createElement(p.b,{to:o["react-konva"]},"React Konva"),i.a.createElement(p.b,{to:o.map},"Map"),i.a.createElement(p.b,{to:o.purescript},"PureScript"),i.a.createElement(p.b,{to:o["image-data"]},"ImageData"),i.a.createElement(p.b,{to:o.useless},"無測無用"),i.a.createElement(p.b,{to:o["web-vr"]},"WebVR Playground"),i.a.createElement(p.b,{to:o.reasonml},"ReScript"),i.a.createElement(p.b,{to:o["web-gl"]},"WebGL")))}}])&&Io(t.prototype,a),r&&Io(t,r),n}(o.Component);!function(e,n,t){n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t}(Bo,"defaultProps",{className:""});var Ho=Object(m.g)(Bo),zo=t(58),Go=t.n(zo),Wo=Object(c.hot)((function(e){var n=e.id,t=e.className,a=d()(Go.a.className,"caasih",t);return i.a.createElement(p.a,null,i.a.createElement(k,{as:"div",id:n,className:a},i.a.createElement(l.Helmet,null,i.a.createElement("title",null,"caasih.net")),i.a.createElement("h1",null,"caasih.net"),i.a.createElement("main",{id:Go.a.container},i.a.createElement(m.b,{exact:!0,path:"/",render:function(){return i.a.createElement(m.a,{to:"/posts"})}}),i.a.createElement(m.b,{strict:!0,path:"/posts",component:function(e){var n=e.match;return i.a.createElement(i.a.Fragment,null,Object(h.a)((function(e,t){return i.a.createElement(m.b,{key:e.url,path:"".concat(n.url,"/").concat(e.url),render:function(n){n.match;return i.a.createElement(Je,{pid:e.url})}})}),M(U)),i.a.createElement(de,null))}}),i.a.createElement(m.b,{strict:!0,path:"/playground",component:Ho})),i.a.createElement("nav",{id:Go.a.menu},i.a.createElement("ul",null,i.a.createElement("li",null,i.a.createElement(p.b,{to:"/posts"},"posts")),i.a.createElement("li",null,i.a.createElement(p.b,{to:"/playground"},"playground")),i.a.createElement("li",null,i.a.createElement("a",{rel:"me",href:"https://g0v.social/@caasih"},"mastodon"))))))})),Uo=(t(924),t(926),document.getElementById("app"));Object(s.render)(i.a.createElement(Wo,null),Uo)}]),[[928,1,2]]]);